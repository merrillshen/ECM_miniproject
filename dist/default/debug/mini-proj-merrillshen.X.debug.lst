

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Nov 04 16:46:16 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 05/05/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F67K40 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     
    60                           	psect	idataBANK0
    61  00054C                     __pidataBANK0:
    62                           	callstack 0
    63                           
    64                           ;initializer for main@F14212
    65  00054C  001F               	dw	31
    66  00054E  001C               	dw	28
    67  000550  001F               	dw	31
    68  000552  001E               	dw	30
    69  000554  001F               	dw	31
    70  000556  001E               	dw	30
    71  000558  001F               	dw	31
    72  00055A  001F               	dw	31
    73  00055C  001E               	dw	30
    74  00055E  001F               	dw	31
    75  000560  001E               	dw	30
    76  000562  001F               	dw	31
    77  0000                     _PIR0bits	set	3635
    78  0000                     _PIR2bits	set	3637
    79  0000                     _PIE2bits	set	3627
    80  0000                     _PIE0bits	set	3625
    81  0000                     _ANSELFbits	set	3764
    82  0000                     _ANSELAbits	set	3730
    83  0000                     _ADPCH	set	3935
    84  0000                     _ADREFbits	set	3928
    85  0000                     _TMR0L	set	4051
    86  0000                     _TMR0H	set	4052
    87  0000                     _T0CON0bits	set	4053
    88  0000                     _T0CON1bits	set	4054
    89  0000                     _INTCONbits	set	4082
    90  0000                     _TRISBbits	set	3970
    91  0000                     _LATBbits	set	3962
    92  0000                     _TRISFbits	set	3974
    93  0000                     _LATFbits	set	3966
    94  0000                     _LATAbits	set	3961
    95  0000                     _TRISGbits	set	3975
    96  0000                     _LATGbits	set	3967
    97  0000                     _TRISDbits	set	3972
    98  0000                     _LATDbits	set	3964
    99  0000                     _TRISHbits	set	3976
   100  0000                     _LATHbits	set	3968
   101  0000                     _ADRESH	set	3940
   102  0000                     _ADCON0bits	set	3936
   103  0000                     _TRISAbits	set	3969
   104                           
   105                           ; #config settings
   106                           
   107                           	psect	cinit
   108  000486                     __pcinit:
   109                           	callstack 0
   110  000486                     start_initialization:
   111                           	callstack 0
   112  000486                     __initialization:
   113                           	callstack 0
   114                           
   115                           ; Initialize objects allocated to BANK0 (24 bytes)
   116                           ; load TBLPTR registers with __pidataBANK0
   117  000486  0E4C               	movlw	low __pidataBANK0
   118  000488  6EF6               	movwf	tblptrl,c
   119  00048A  0E05               	movlw	high __pidataBANK0
   120  00048C  6EF7               	movwf	tblptrh,c
   121  00048E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   122  000490  6EF8               	movwf	tblptru,c
   123  000492  EE00  F0E0         	lfsr	0,__pdataBANK0
   124  000496  EE10 F018          	lfsr	1,24
   125  00049A                     copy_data0:
   126  00049A  0009               	tblrd		*+
   127  00049C  CFF5 FFEE          	movff	tablat,postinc0
   128  0004A0  50E5               	movf	postdec1,w,c
   129  0004A2  50E1               	movf	fsr1l,w,c
   130  0004A4  E1FA               	bnz	copy_data0
   131                           
   132                           ; Clear objects allocated to BANK0 (40 bytes)
   133  0004A6  EE00  F0B8         	lfsr	0,__pbssBANK0
   134  0004AA  0E28               	movlw	40
   135  0004AC                     clear_0:
   136  0004AC  6AEE               	clrf	postinc0,c
   137  0004AE  06E8               	decf	wreg,f,c
   138  0004B0  E1FD               	bnz	clear_0
   139  0004B2                     end_of_initialization:
   140                           	callstack 0
   141  0004B2                     __end_of__initialization:
   142                           	callstack 0
   143  0004B2  900E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   144  0004B4  920E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   145  0004B6  0100               	movlb	0
   146  0004B8  EF3F  F000         	goto	_main	;jump to C main() function
   147                           
   148                           	psect	bssBANK0
   149  0000B8                     __pbssBANK0:
   150                           	callstack 0
   151  0000B8                     	ds	40
   152                           
   153                           	psect	dataBANK0
   154  0000E0                     __pdataBANK0:
   155                           	callstack 0
   156  0000E0                     main@F14212:
   157                           	callstack 0
   158  0000E0                     	ds	24
   159                           
   160                           	psect	cstackBANK0
   161  000060                     __pcstackBANK0:
   162                           	callstack 0
   163  000060                     main@startnend:
   164                           	callstack 0
   165                           
   166                           ; 40 bytes @ 0x0
   167  000060                     	ds	40
   168  000088                     main@monthdays:
   169                           	callstack 0
   170                           
   171                           ; 24 bytes @ 0x28
   172  000088                     	ds	24
   173  0000A0                     main@set_brightness:
   174                           	callstack 0
   175                           
   176                           ; 2 bytes @ 0x40
   177  0000A0                     	ds	2
   178  0000A2                     main@light_strength:
   179                           	callstack 0
   180                           
   181                           ; 2 bytes @ 0x42
   182  0000A2                     	ds	2
   183  0000A4                     main@temp:
   184                           	callstack 0
   185                           
   186                           ; 2 bytes @ 0x44
   187  0000A4                     	ds	2
   188  0000A6                     main@leap_year:
   189                           	callstack 0
   190                           
   191                           ; 2 bytes @ 0x46
   192  0000A6                     	ds	2
   193  0000A8                     main@year:
   194                           	callstack 0
   195                           
   196                           ; 2 bytes @ 0x48
   197  0000A8                     	ds	2
   198  0000AA                     main@secs:
   199                           	callstack 0
   200                           
   201                           ; 2 bytes @ 0x4A
   202  0000AA                     	ds	2
   203  0000AC                     main@minutes:
   204                           	callstack 0
   205                           
   206                           ; 2 bytes @ 0x4C
   207  0000AC                     	ds	2
   208  0000AE                     main@day_of_week:
   209                           	callstack 0
   210                           
   211                           ; 2 bytes @ 0x4E
   212  0000AE                     	ds	2
   213  0000B0                     main@daydate:
   214                           	callstack 0
   215                           
   216                           ; 2 bytes @ 0x50
   217  0000B0                     	ds	2
   218  0000B2                     main@daylight_flag:
   219                           	callstack 0
   220                           
   221                           ; 2 bytes @ 0x52
   222  0000B2                     	ds	2
   223  0000B4                     main@hour:
   224                           	callstack 0
   225                           
   226                           ; 2 bytes @ 0x54
   227  0000B4                     	ds	2
   228  0000B6                     main@month:
   229                           	callstack 0
   230                           
   231                           ; 2 bytes @ 0x56
   232  0000B6                     	ds	2
   233                           
   234                           	psect	cstackCOMRAM
   235  000001                     __pcstackCOMRAM:
   236                           	callstack 0
   237  000001                     ??_HighISR:
   238                           
   239                           ; 1 bytes @ 0x0
   240  000001                     	ds	1
   241  000002                     ?_ADC_getval:
   242                           	callstack 0
   243  000002                     LEDarray_disp_bin@number:
   244                           	callstack 0
   245                           
   246                           ; 2 bytes @ 0x1
   247  000002                     	ds	2
   248  000004                     ADC_getval@tmpval:
   249                           	callstack 0
   250                           
   251                           ; 2 bytes @ 0x3
   252  000004                     	ds	2
   253  000006                     ??_main:
   254                           
   255                           ; 1 bytes @ 0x5
   256  000006                     	ds	8
   257                           
   258 ;;
   259 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   260 ;;
   261 ;; *************** function _main *****************
   262 ;; Defined at:
   263 ;;		line 13 in file "main.c"
   264 ;; Parameters:    Size  Location     Type
   265 ;;		None
   266 ;; Auto vars:     Size  Location     Type
   267 ;;  startnend      40    0[BANK0 ] unsigned int [20]
   268 ;;  monthdays      24   40[BANK0 ] unsigned int [12]
   269 ;;  month           2   86[BANK0 ] unsigned int 
   270 ;;  hour            2   84[BANK0 ] int 
   271 ;;  daylight_fla    2   82[BANK0 ] unsigned int 
   272 ;;  daydate         2   80[BANK0 ] unsigned int 
   273 ;;  day_of_week     2   78[BANK0 ] unsigned int 
   274 ;;  minutes         2   76[BANK0 ] unsigned int 
   275 ;;  secs            2   74[BANK0 ] unsigned int 
   276 ;;  year            2   72[BANK0 ] unsigned int 
   277 ;;  leap_year       2   70[BANK0 ] unsigned int 
   278 ;;  temp            2   68[BANK0 ] unsigned int 
   279 ;;  light_streng    2   66[BANK0 ] unsigned int 
   280 ;;  set_brightne    2   64[BANK0 ] unsigned int 
   281 ;; Return value:  Size  Location     Type
   282 ;;                  1    wreg      void 
   283 ;; Registers used:
   284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   285 ;; Tracked objects:
   286 ;;		On entry : 0/0
   287 ;;		On exit  : 0/0
   288 ;;		Unchanged: 0/0
   289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   291 ;;      Locals:         0      88       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   292 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   293 ;;      Totals:         8      88       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   294 ;;Total ram usage:       96 bytes
   295 ;; Hardware stack levels required when called: 2
   296 ;; This function calls:
   297 ;;		_ADC_getval
   298 ;;		_ADC_init
   299 ;;		_Interrupts_init
   300 ;;		_LEDarray_disp_bin
   301 ;;		_LEDarray_init
   302 ;;		_Timer0_init
   303 ;; This function is called by:
   304 ;;		Startup code after reset
   305 ;; This function uses a non-reentrant model
   306 ;;
   307                           
   308                           	psect	text0
   309  00007E                     __ptext0:
   310                           	callstack 0
   311  00007E                     _main:
   312                           	callstack 29
   313  00007E                     
   314                           ;main.c: 16:     LATHbits.LATH3=0;
   315  00007E  9680               	bcf	128,3,c	;volatile
   316                           
   317                           ;main.c: 17:     TRISHbits.TRISH3=0;
   318  000080  9688               	bcf	136,3,c	;volatile
   319                           
   320                           ;main.c: 20:     LATDbits.LATD7=0;
   321  000082  9E7C               	bcf	124,7,c	;volatile
   322                           
   323                           ;main.c: 21:     TRISDbits.TRISD7=0;
   324  000084  9E84               	bcf	132,7,c	;volatile
   325  000086                     
   326                           ;main.c: 24:     LEDarray_init();
   327  000086  EC76  F002         	call	_LEDarray_init	;wreg free
   328  00008A                     
   329                           ;main.c: 25:     ADC_init();
   330  00008A  EC99  F002         	call	_ADC_init	;wreg free
   331  00008E                     
   332                           ;main.c: 26:     Timer0_init();
   333  00008E  EC89  F002         	call	_Timer0_init	;wreg free
   334                           
   335                           ;main.c: 27:     Interrupts_init();
   336  000092  ECB2  F002         	call	_Interrupts_init	;wreg free
   337  000096                     
   338                           ;main.c: 31:     unsigned int temp=0;
   339  000096  0E00               	movlw	0
   340  000098  0100               	movlb	0	; () banked
   341  00009A  6FA5               	movwf	(main@temp+1)& (0+255),b
   342  00009C  0E00               	movlw	0
   343  00009E  6FA4               	movwf	main@temp& (0+255),b
   344  0000A0                     
   345                           ; BSR set to: 0
   346                           ;main.c: 32:     unsigned int secs=0;
   347  0000A0  0E00               	movlw	0
   348  0000A2  6FAB               	movwf	(main@secs+1)& (0+255),b
   349  0000A4  0E00               	movlw	0
   350  0000A6  6FAA               	movwf	main@secs& (0+255),b
   351  0000A8                     
   352                           ; BSR set to: 0
   353                           ;main.c: 34:     unsigned int monthdays[12] = {31,28,31,30,31,30,31,31,30,31,30,31};
   354  0000A8  EE20  F0E0         	lfsr	2,main@F14212
   355  0000AC  EE10  F088         	lfsr	1,main@monthdays
   356  0000B0  0E17               	movlw	23
   357  0000B2                     u861:
   358  0000B2  CFDB FFE3          	movff	plusw2,plusw1
   359  0000B6  06E8               	decf	wreg,f,c
   360  0000B8  E2FC               	bc	u861
   361  0000BA                     
   362                           ; BSR set to: 0
   363                           ;main.c: 35:     unsigned int daylight_flag = 0;
   364  0000BA  0E00               	movlw	0
   365  0000BC  6FB3               	movwf	(main@daylight_flag+1)& (0+255),b
   366  0000BE  0E00               	movlw	0
   367  0000C0  6FB2               	movwf	main@daylight_flag& (0+255),b
   368  0000C2                     
   369                           ; BSR set to: 0
   370                           ;main.c: 36:     unsigned int startnend[20] = {};
   371  0000C2  EE20  F060         	lfsr	2,main@startnend
   372  0000C6  0E27               	movlw	39
   373  0000C8                     u871:
   374  0000C8  6ADE               	clrf	postinc2,c
   375  0000CA  06E8               	decf	wreg,f,c
   376  0000CC  E2FD               	bc	u871
   377  0000CE                     
   378                           ; BSR set to: 0
   379                           ;main.c: 40:     unsigned int set_brightness=50;
   380  0000CE  0E00               	movlw	0
   381  0000D0  6FA1               	movwf	(main@set_brightness+1)& (0+255),b
   382  0000D2  0E32               	movlw	50
   383  0000D4  6FA0               	movwf	main@set_brightness& (0+255),b
   384  0000D6                     
   385                           ; BSR set to: 0
   386                           ;main.c: 41:     unsigned int minutes=0;
   387  0000D6  0E00               	movlw	0
   388  0000D8  6FAD               	movwf	(main@minutes+1)& (0+255),b
   389  0000DA  0E00               	movlw	0
   390  0000DC  6FAC               	movwf	main@minutes& (0+255),b
   391  0000DE                     
   392                           ; BSR set to: 0
   393                           ;main.c: 42:     int hour=16;
   394  0000DE  0E00               	movlw	0
   395  0000E0  6FB5               	movwf	(main@hour+1)& (0+255),b
   396  0000E2  0E10               	movlw	16
   397  0000E4  6FB4               	movwf	main@hour& (0+255),b
   398  0000E6                     
   399                           ; BSR set to: 0
   400                           ;main.c: 43:     unsigned int day_of_week = 4;
   401  0000E6  0E00               	movlw	0
   402  0000E8  6FAF               	movwf	(main@day_of_week+1)& (0+255),b
   403  0000EA  0E04               	movlw	4
   404  0000EC  6FAE               	movwf	main@day_of_week& (0+255),b
   405  0000EE                     
   406                           ; BSR set to: 0
   407                           ;main.c: 44:     unsigned int daydate = 4;
   408  0000EE  0E00               	movlw	0
   409  0000F0  6FB1               	movwf	(main@daydate+1)& (0+255),b
   410  0000F2  0E04               	movlw	4
   411  0000F4  6FB0               	movwf	main@daydate& (0+255),b
   412  0000F6                     
   413                           ; BSR set to: 0
   414                           ;main.c: 45:     unsigned int month = 11;
   415  0000F6  0E00               	movlw	0
   416  0000F8  6FB7               	movwf	(main@month+1)& (0+255),b
   417  0000FA  0E0B               	movlw	11
   418  0000FC  6FB6               	movwf	main@month& (0+255),b
   419  0000FE                     
   420                           ; BSR set to: 0
   421                           ;main.c: 46:     unsigned int year = 2021;
   422  0000FE  0E07               	movlw	7
   423  000100  6FA9               	movwf	(main@year+1)& (0+255),b
   424  000102  0EE5               	movlw	229
   425  000104  6FA8               	movwf	main@year& (0+255),b
   426  000106                     l1234:
   427                           
   428                           ; BSR set to: 0
   429                           ;main.c: 49:         light_strength = ADC_getval();
   430  000106  EC5E  F002         	call	_ADC_getval	;wreg free
   431  00010A  C002  F0A2         	movff	?_ADC_getval,main@light_strength
   432  00010E  C003  F0A3         	movff	?_ADC_getval+1,main@light_strength+1
   433  000112                     
   434                           ;main.c: 50:         if (light_strength >= set_brightness || (1<hour && hour<5 ) ) {
   435  000112  0100               	movlb	0	; () banked
   436  000114  51A0               	movf	main@set_brightness& (0+255),w,b
   437  000116  5DA2               	subwf	main@light_strength& (0+255),w,b
   438  000118  51A1               	movf	(main@set_brightness+1)& (0+255),w,b
   439  00011A  59A3               	subwfb	(main@light_strength+1)& (0+255),w,b
   440  00011C  B0D8               	btfsc	status,0,c
   441  00011E  EF93  F000         	goto	u881
   442  000122  EF95  F000         	goto	u880
   443  000126                     u881:
   444  000126  EFB1  F000         	goto	l53
   445  00012A                     u880:
   446  00012A                     
   447                           ; BSR set to: 0
   448  00012A  BFB5               	btfsc	(main@hour+1)& (0+255),7,b
   449  00012C  EFA1  F000         	goto	u891
   450  000130  51B5               	movf	(main@hour+1)& (0+255),w,b
   451  000132  E109               	bnz	u890
   452  000134  0E02               	movlw	2
   453  000136  5DB4               	subwf	main@hour& (0+255),w,b
   454  000138  A0D8               	btfss	status,0,c
   455  00013A  EFA1  F000         	goto	u891
   456  00013E  EFA3  F000         	goto	u890
   457  000142                     u891:
   458  000142  EFB4  F000         	goto	l51
   459  000146                     u890:
   460  000146                     
   461                           ; BSR set to: 0
   462  000146  BFB5               	btfsc	(main@hour+1)& (0+255),7,b
   463  000148  EFB1  F000         	goto	u900
   464  00014C  51B5               	movf	(main@hour+1)& (0+255),w,b
   465  00014E  E107               	bnz	u901
   466  000150  0E05               	movlw	5
   467  000152  5DB4               	subwf	main@hour& (0+255),w,b
   468  000154  B0D8               	btfsc	status,0,c
   469  000156  EFAF  F000         	goto	u901
   470  00015A  EFB1  F000         	goto	u900
   471  00015E                     u901:
   472  00015E  EFB4  F000         	goto	l51
   473  000162                     u900:
   474  000162                     l53:
   475                           
   476                           ; BSR set to: 0
   477                           ;main.c: 51:             LATHbits.LATH3 = 0; }
   478  000162  9680               	bcf	128,3,c	;volatile
   479  000164  EFB5  F000         	goto	l1242
   480  000168                     l51:
   481                           
   482                           ; BSR set to: 0
   483  000168  8680               	bsf	128,3,c	;volatile
   484  00016A                     l1242:
   485                           
   486                           ; BSR set to: 0
   487                           ;main.c: 55:         if (LATDbits.LATD7 != temp) { secs += 1; temp = LATDbits.LATD7;}
   488  00016A  BE7C               	btfsc	124,7,c	;volatile
   489  00016C  EFBA  F000         	goto	u911
   490  000170  EFBD  F000         	goto	u910
   491  000174                     u911:
   492  000174  0E01               	movlw	1
   493  000176  EFBE  F000         	goto	u920
   494  00017A                     u910:
   495  00017A  0E00               	movlw	0
   496  00017C                     u920:
   497  00017C  6E06               	movwf	??_main^0,c
   498  00017E  6A07               	clrf	(??_main+1)^0,c
   499  000180  51A4               	movf	main@temp& (0+255),w,b
   500  000182  1806               	xorwf	??_main^0,w,c
   501  000184  E109               	bnz	u930
   502  000186  51A5               	movf	(main@temp+1)& (0+255),w,b
   503  000188  1807               	xorwf	(??_main+1)^0,w,c
   504  00018A  B4D8               	btfsc	status,2,c
   505  00018C  EFCA  F000         	goto	u931
   506  000190  EFCC  F000         	goto	u930
   507  000194                     u931:
   508  000194  EFDC  F000         	goto	l1248
   509  000198                     u930:
   510  000198                     
   511                           ; BSR set to: 0
   512  000198  4BAA               	infsnz	main@secs& (0+255),f,b
   513  00019A  2BAB               	incf	(main@secs+1)& (0+255),f,b
   514  00019C                     
   515                           ; BSR set to: 0
   516  00019C  BE7C               	btfsc	124,7,c	;volatile
   517  00019E  EFD3  F000         	goto	u941
   518  0001A2  EFD7  F000         	goto	u940
   519  0001A6                     u941:
   520  0001A6  6A06               	clrf	??_main^0,c
   521  0001A8  2A06               	incf	??_main^0,f,c
   522  0001AA  EFD8  F000         	goto	u948
   523  0001AE                     u940:
   524  0001AE  6A06               	clrf	??_main^0,c
   525  0001B0                     u948:
   526  0001B0  5006               	movf	??_main^0,w,c
   527  0001B2  0100               	movlb	0	; () banked
   528  0001B4  6FA4               	movwf	main@temp& (0+255),b
   529  0001B6  6BA5               	clrf	(main@temp+1)& (0+255),b
   530  0001B8                     l1248:
   531                           
   532                           ; BSR set to: 0
   533                           ;main.c: 56:         if (secs == 60) { minutes += 1; secs = 0;}
   534  0001B8  0E3C               	movlw	60
   535  0001BA  19AA               	xorwf	main@secs& (0+255),w,b
   536  0001BC  11AB               	iorwf	(main@secs+1)& (0+255),w,b
   537  0001BE  A4D8               	btfss	status,2,c
   538  0001C0  EFE4  F000         	goto	u951
   539  0001C4  EFE6  F000         	goto	u950
   540  0001C8                     u951:
   541  0001C8  EFEC  F000         	goto	l1254
   542  0001CC                     u950:
   543  0001CC                     
   544                           ; BSR set to: 0
   545  0001CC  4BAC               	infsnz	main@minutes& (0+255),f,b
   546  0001CE  2BAD               	incf	(main@minutes+1)& (0+255),f,b
   547  0001D0                     
   548                           ; BSR set to: 0
   549  0001D0  0E00               	movlw	0
   550  0001D2  6FAB               	movwf	(main@secs+1)& (0+255),b
   551  0001D4  0E00               	movlw	0
   552  0001D6  6FAA               	movwf	main@secs& (0+255),b
   553  0001D8                     l1254:
   554                           
   555                           ; BSR set to: 0
   556                           ;main.c: 57:         if (minutes == 60) { hour += 1; minutes = 0;}
   557  0001D8  0E3C               	movlw	60
   558  0001DA  19AC               	xorwf	main@minutes& (0+255),w,b
   559  0001DC  11AD               	iorwf	(main@minutes+1)& (0+255),w,b
   560  0001DE  A4D8               	btfss	status,2,c
   561  0001E0  EFF4  F000         	goto	u961
   562  0001E4  EFF6  F000         	goto	u960
   563  0001E8                     u961:
   564  0001E8  EFFC  F000         	goto	l1260
   565  0001EC                     u960:
   566  0001EC                     
   567                           ; BSR set to: 0
   568  0001EC  4BB4               	infsnz	main@hour& (0+255),f,b
   569  0001EE  2BB5               	incf	(main@hour+1)& (0+255),f,b
   570  0001F0                     
   571                           ; BSR set to: 0
   572  0001F0  0E00               	movlw	0
   573  0001F2  6FAD               	movwf	(main@minutes+1)& (0+255),b
   574  0001F4  0E00               	movlw	0
   575  0001F6  6FAC               	movwf	main@minutes& (0+255),b
   576  0001F8                     l1260:
   577                           
   578                           ; BSR set to: 0
   579                           ;main.c: 58:         if (hour == 24) {hour = 0;daydate += 1; day_of_week+=1;}
   580  0001F8  0E18               	movlw	24
   581  0001FA  19B4               	xorwf	main@hour& (0+255),w,b
   582  0001FC  11B5               	iorwf	(main@hour+1)& (0+255),w,b
   583  0001FE  A4D8               	btfss	status,2,c
   584  000200  EF04  F001         	goto	u971
   585  000204  EF06  F001         	goto	u970
   586  000208                     u971:
   587  000208  EF0E  F001         	goto	l1268
   588  00020C                     u970:
   589  00020C                     
   590                           ; BSR set to: 0
   591  00020C  0E00               	movlw	0
   592  00020E  6FB5               	movwf	(main@hour+1)& (0+255),b
   593  000210  0E00               	movlw	0
   594  000212  6FB4               	movwf	main@hour& (0+255),b
   595  000214                     
   596                           ; BSR set to: 0
   597  000214  4BB0               	infsnz	main@daydate& (0+255),f,b
   598  000216  2BB1               	incf	(main@daydate+1)& (0+255),f,b
   599  000218                     
   600                           ; BSR set to: 0
   601  000218  4BAE               	infsnz	main@day_of_week& (0+255),f,b
   602  00021A  2BAF               	incf	(main@day_of_week+1)& (0+255),f,b
   603  00021C                     l1268:
   604                           
   605                           ; BSR set to: 0
   606                           ;main.c: 59:         if (day_of_week > 7) {day_of_week=1;}
   607  00021C  51AF               	movf	(main@day_of_week+1)& (0+255),w,b
   608  00021E  E109               	bnz	u980
   609  000220  0E08               	movlw	8
   610  000222  5DAE               	subwf	main@day_of_week& (0+255),w,b
   611  000224  A0D8               	btfss	status,0,c
   612  000226  EF17  F001         	goto	u981
   613  00022A  EF19  F001         	goto	u980
   614  00022E                     u981:
   615  00022E  EF1D  F001         	goto	l1272
   616  000232                     u980:
   617  000232                     
   618                           ; BSR set to: 0
   619  000232  0E00               	movlw	0
   620  000234  6FAF               	movwf	(main@day_of_week+1)& (0+255),b
   621  000236  0E01               	movlw	1
   622  000238  6FAE               	movwf	main@day_of_week& (0+255),b
   623  00023A                     l1272:
   624                           
   625                           ; BSR set to: 0
   626                           ;main.c: 60:         LEDarray_disp_bin(hour);
   627  00023A  C0B4  F002         	movff	main@hour,LEDarray_disp_bin@number
   628  00023E  C0B5  F003         	movff	main@hour+1,LEDarray_disp_bin@number+1
   629  000242  ECDF  F001         	call	_LEDarray_disp_bin	;wreg free
   630  000246                     
   631                           ;main.c: 63:         leap_year = year % 4;
   632  000246  0E03               	movlw	3
   633  000248  0100               	movlb	0	; () banked
   634  00024A  15A8               	andwf	main@year& (0+255),w,b
   635  00024C  6FA6               	movwf	main@leap_year& (0+255),b
   636  00024E  6BA7               	clrf	(main@leap_year+1)& (0+255),b
   637  000250                     
   638                           ; BSR set to: 0
   639                           ;main.c: 64:         if (leap_year == 0) { monthdays[1] = 29;}
   640  000250  51A6               	movf	main@leap_year& (0+255),w,b
   641  000252  11A7               	iorwf	(main@leap_year+1)& (0+255),w,b
   642  000254  A4D8               	btfss	status,2,c
   643  000256  EF2F  F001         	goto	u991
   644  00025A  EF31  F001         	goto	u990
   645  00025E                     u991:
   646  00025E  EF37  F001         	goto	l1280
   647  000262                     u990:
   648  000262                     
   649                           ; BSR set to: 0
   650  000262  0E00               	movlw	0
   651  000264  6F8B               	movwf	(main@monthdays+3)& (0+255),b
   652  000266  0E1D               	movlw	29
   653  000268  6F8A               	movwf	(main@monthdays+2)& (0+255),b
   654  00026A  EF3B  F001         	goto	l1282
   655  00026E                     l1280:
   656                           
   657                           ; BSR set to: 0
   658  00026E  0E00               	movlw	0
   659  000270  6F8B               	movwf	(main@monthdays+3)& (0+255),b
   660  000272  0E1C               	movlw	28
   661  000274  6F8A               	movwf	(main@monthdays+2)& (0+255),b
   662  000276                     l1282:
   663                           
   664                           ; BSR set to: 0
   665                           ;main.c: 66:         if (daydate > monthdays[month-1]) { month += 1; daydate = 1; daylig
      +                          ht_flag=0;}
   666  000276  0EFE               	movlw	254
   667  000278  6E06               	movwf	??_main^0,c
   668  00027A  0EFF               	movlw	255
   669  00027C  6E07               	movwf	(??_main+1)^0,c
   670  00027E  C0B6  F008         	movff	main@month,??_main+2
   671  000282  C0B7  F009         	movff	main@month+1,??_main+3
   672  000286  90D8               	bcf	status,0,c
   673  000288  3608               	rlcf	(??_main+2)^0,f,c
   674  00028A  3609               	rlcf	(??_main+3)^0,f,c
   675  00028C  5006               	movf	??_main^0,w,c
   676  00028E  2608               	addwf	(??_main+2)^0,f,c
   677  000290  5007               	movf	(??_main+1)^0,w,c
   678  000292  2209               	addwfc	(??_main+3)^0,f,c
   679  000294  0E88               	movlw	low main@monthdays
   680  000296  2408               	addwf	(??_main+2)^0,w,c
   681  000298  6ED9               	movwf	fsr2l,c
   682  00029A  0E00               	movlw	high main@monthdays
   683  00029C  2009               	addwfc	(??_main+3)^0,w,c
   684  00029E  6EDA               	movwf	fsr2h,c
   685  0002A0  51B0               	movf	main@daydate& (0+255),w,b
   686  0002A2  5CDE               	subwf	postinc2,w,c
   687  0002A4  51B1               	movf	(main@daydate+1)& (0+255),w,b
   688  0002A6  58DE               	subwfb	postinc2,w,c
   689  0002A8  B0D8               	btfsc	status,0,c
   690  0002AA  EF59  F001         	goto	u1001
   691  0002AE  EF5B  F001         	goto	u1000
   692  0002B2                     u1001:
   693  0002B2  EF65  F001         	goto	l1290
   694  0002B6                     u1000:
   695  0002B6                     
   696                           ; BSR set to: 0
   697  0002B6  4BB6               	infsnz	main@month& (0+255),f,b
   698  0002B8  2BB7               	incf	(main@month+1)& (0+255),f,b
   699  0002BA                     
   700                           ; BSR set to: 0
   701  0002BA  0E00               	movlw	0
   702  0002BC  6FB1               	movwf	(main@daydate+1)& (0+255),b
   703  0002BE  0E01               	movlw	1
   704  0002C0  6FB0               	movwf	main@daydate& (0+255),b
   705  0002C2                     
   706                           ; BSR set to: 0
   707  0002C2  0E00               	movlw	0
   708  0002C4  6FB3               	movwf	(main@daylight_flag+1)& (0+255),b
   709  0002C6  0E00               	movlw	0
   710  0002C8  6FB2               	movwf	main@daylight_flag& (0+255),b
   711  0002CA                     l1290:
   712                           
   713                           ; BSR set to: 0
   714                           ;main.c: 67:         if (month > 12) { year += 1; month = 1;}
   715  0002CA  51B7               	movf	(main@month+1)& (0+255),w,b
   716  0002CC  E109               	bnz	u1010
   717  0002CE  0E0D               	movlw	13
   718  0002D0  5DB6               	subwf	main@month& (0+255),w,b
   719  0002D2  A0D8               	btfss	status,0,c
   720  0002D4  EF6E  F001         	goto	u1011
   721  0002D8  EF70  F001         	goto	u1010
   722  0002DC                     u1011:
   723  0002DC  EF76  F001         	goto	l1296
   724  0002E0                     u1010:
   725  0002E0                     
   726                           ; BSR set to: 0
   727  0002E0  4BA8               	infsnz	main@year& (0+255),f,b
   728  0002E2  2BA9               	incf	(main@year+1)& (0+255),f,b
   729  0002E4                     
   730                           ; BSR set to: 0
   731  0002E4  0E00               	movlw	0
   732  0002E6  6FB7               	movwf	(main@month+1)& (0+255),b
   733  0002E8  0E01               	movlw	1
   734  0002EA  6FB6               	movwf	main@month& (0+255),b
   735  0002EC                     l1296:
   736                           
   737                           ; BSR set to: 0
   738                           ;main.c: 70:         if (day_of_week == 7) {
   739  0002EC  0E07               	movlw	7
   740  0002EE  19AE               	xorwf	main@day_of_week& (0+255),w,b
   741  0002F0  11AF               	iorwf	(main@day_of_week+1)& (0+255),w,b
   742  0002F2  A4D8               	btfss	status,2,c
   743  0002F4  EF7E  F001         	goto	u1021
   744  0002F8  EF80  F001         	goto	u1020
   745  0002FC                     u1021:
   746  0002FC  EF83  F000         	goto	l1234
   747  000300                     u1020:
   748  000300                     
   749                           ; BSR set to: 0
   750                           ;main.c: 71:             if ((daydate+7) > monthdays[month-1]) {
   751  000300  0E07               	movlw	7
   752  000302  25B0               	addwf	main@daydate& (0+255),w,b
   753  000304  6E06               	movwf	??_main^0,c
   754  000306  0E00               	movlw	0
   755  000308  21B1               	addwfc	(main@daydate+1)& (0+255),w,b
   756  00030A  6E07               	movwf	(??_main+1)^0,c
   757  00030C  0EFE               	movlw	254
   758  00030E  6E08               	movwf	(??_main+2)^0,c
   759  000310  0EFF               	movlw	255
   760  000312  6E09               	movwf	(??_main+3)^0,c
   761  000314  C0B6  F00A         	movff	main@month,??_main+4
   762  000318  C0B7  F00B         	movff	main@month+1,??_main+5
   763  00031C  90D8               	bcf	status,0,c
   764  00031E  360A               	rlcf	(??_main+4)^0,f,c
   765  000320  360B               	rlcf	(??_main+5)^0,f,c
   766  000322  5008               	movf	(??_main+2)^0,w,c
   767  000324  260A               	addwf	(??_main+4)^0,f,c
   768  000326  5009               	movf	(??_main+3)^0,w,c
   769  000328  220B               	addwfc	(??_main+5)^0,f,c
   770  00032A  0E88               	movlw	low main@monthdays
   771  00032C  240A               	addwf	(??_main+4)^0,w,c
   772  00032E  6ED9               	movwf	fsr2l,c
   773  000330  0E00               	movlw	high main@monthdays
   774  000332  200B               	addwfc	(??_main+5)^0,w,c
   775  000334  6EDA               	movwf	fsr2h,c
   776  000336  5006               	movf	??_main^0,w,c
   777  000338  5CDE               	subwf	postinc2,w,c
   778  00033A  5007               	movf	(??_main+1)^0,w,c
   779  00033C  58DE               	subwfb	postinc2,w,c
   780  00033E  B0D8               	btfsc	status,0,c
   781  000340  EFA4  F001         	goto	u1031
   782  000344  EFA6  F001         	goto	u1030
   783  000348                     u1031:
   784  000348  EF83  F000         	goto	l1234
   785  00034C                     u1030:
   786  00034C                     
   787                           ; BSR set to: 0
   788                           ;main.c: 72:                 if (month == 3){
   789  00034C  0E03               	movlw	3
   790  00034E  19B6               	xorwf	main@month& (0+255),w,b
   791  000350  11B7               	iorwf	(main@month+1)& (0+255),w,b
   792  000352  A4D8               	btfss	status,2,c
   793  000354  EFAE  F001         	goto	u1041
   794  000358  EFB0  F001         	goto	u1040
   795  00035C                     u1041:
   796  00035C  EFBF  F001         	goto	l1308
   797  000360                     u1040:
   798  000360                     
   799                           ; BSR set to: 0
   800                           ;main.c: 73:                     if (daylight_flag==0){
   801  000360  51B2               	movf	main@daylight_flag& (0+255),w,b
   802  000362  11B3               	iorwf	(main@daylight_flag+1)& (0+255),w,b
   803  000364  A4D8               	btfss	status,2,c
   804  000366  EFB7  F001         	goto	u1051
   805  00036A  EFB9  F001         	goto	u1050
   806  00036E                     u1051:
   807  00036E  EFBF  F001         	goto	l1308
   808  000372                     u1050:
   809  000372                     
   810                           ; BSR set to: 0
   811                           ;main.c: 74:                         hour+=1;
   812  000372  4BB4               	infsnz	main@hour& (0+255),f,b
   813  000374  2BB5               	incf	(main@hour+1)& (0+255),f,b
   814  000376                     
   815                           ; BSR set to: 0
   816                           ;main.c: 75:                         daylight_flag=1;
   817  000376  0E00               	movlw	0
   818  000378  6FB3               	movwf	(main@daylight_flag+1)& (0+255),b
   819  00037A  0E01               	movlw	1
   820  00037C  6FB2               	movwf	main@daylight_flag& (0+255),b
   821  00037E                     l1308:
   822                           
   823                           ; BSR set to: 0
   824                           ;main.c: 78:                 if (month ==10) {
   825  00037E  0E0A               	movlw	10
   826  000380  19B6               	xorwf	main@month& (0+255),w,b
   827  000382  11B7               	iorwf	(main@month+1)& (0+255),w,b
   828  000384  A4D8               	btfss	status,2,c
   829  000386  EFC7  F001         	goto	u1061
   830  00038A  EFC9  F001         	goto	u1060
   831  00038E                     u1061:
   832  00038E  EF83  F000         	goto	l1234
   833  000392                     u1060:
   834  000392                     
   835                           ; BSR set to: 0
   836                           ;main.c: 79:                     if (daylight_flag==0){
   837  000392  51B2               	movf	main@daylight_flag& (0+255),w,b
   838  000394  11B3               	iorwf	(main@daylight_flag+1)& (0+255),w,b
   839  000396  A4D8               	btfss	status,2,c
   840  000398  EFD0  F001         	goto	u1071
   841  00039C  EFD2  F001         	goto	u1070
   842  0003A0                     u1071:
   843  0003A0  EFDB  F001         	goto	l64
   844  0003A4                     u1070:
   845  0003A4                     
   846                           ; BSR set to: 0
   847                           ;main.c: 80:                         hour-=1;
   848  0003A4  07B4               	decf	main@hour& (0+255),f,b
   849  0003A6  A0D8               	btfss	status,0,c
   850  0003A8  07B5               	decf	(main@hour+1)& (0+255),f,b
   851  0003AA                     
   852                           ; BSR set to: 0
   853                           ;main.c: 81:                         daylight_flag=1;
   854  0003AA  0E00               	movlw	0
   855  0003AC  6FB3               	movwf	(main@daylight_flag+1)& (0+255),b
   856  0003AE  0E01               	movlw	1
   857  0003B0  6FB2               	movwf	main@daylight_flag& (0+255),b
   858  0003B2  EF83  F000         	goto	l1234
   859  0003B6                     l64:
   860                           
   861                           ; BSR set to: 0
   862  0003B6  EF83  F000         	goto	l1234
   863  0003BA  EF3D  F000         	goto	start
   864  0003BE                     __end_of_main:
   865                           	callstack 0
   866                           
   867 ;; *************** function _Timer0_init *****************
   868 ;; Defined at:
   869 ;;		line 7 in file "timers.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;		None
   872 ;; Auto vars:     Size  Location     Type
   873 ;;		None
   874 ;; Return value:  Size  Location     Type
   875 ;;                  1    wreg      void 
   876 ;; Registers used:
   877 ;;		wreg, status,2
   878 ;; Tracked objects:
   879 ;;		On entry : 0/0
   880 ;;		On exit  : 0/0
   881 ;;		Unchanged: 0/0
   882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   887 ;;Total ram usage:        0 bytes
   888 ;; Hardware stack levels used: 1
   889 ;; Hardware stack levels required when called: 1
   890 ;; This function calls:
   891 ;;		Nothing
   892 ;; This function is called by:
   893 ;;		_main
   894 ;; This function uses a non-reentrant model
   895 ;;
   896                           
   897                           	psect	text1
   898  000512                     __ptext1:
   899                           	callstack 0
   900  000512                     _Timer0_init:
   901                           	callstack 29
   902  000512                     
   903                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
   904  000512  50D6               	movf	214,w,c	;volatile
   905  000514  0B1F               	andlw	-225
   906  000516  0940               	iorlw	64
   907  000518  6ED6               	movwf	214,c	;volatile
   908  00051A                     
   909                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
   910  00051A  88D6               	bsf	214,4,c	;volatile
   911                           
   912                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
   913  00051C  50D6               	movf	214,w,c	;volatile
   914  00051E  0BF0               	andlw	-16
   915  000520  0908               	iorlw	8
   916  000522  6ED6               	movwf	214,c	;volatile
   917  000524                     
   918                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
   919  000524  88D5               	bsf	213,4,c	;volatile
   920                           
   921                           ;timers.c: 15:     TMR0H=0b10000000;
   922  000526  0E80               	movlw	128
   923  000528  6ED4               	movwf	212,c	;volatile
   924                           
   925                           ;timers.c: 16:     TMR0L=0b00000001;
   926  00052A  0E01               	movlw	1
   927  00052C  6ED3               	movwf	211,c	;volatile
   928  00052E                     
   929                           ;timers.c: 17:     T0CON0bits.T0EN=1;
   930  00052E  8ED5               	bsf	213,7,c	;volatile
   931  000530  0012               	return		;funcret
   932  000532                     __end_of_Timer0_init:
   933                           	callstack 0
   934                           
   935 ;; *************** function _LEDarray_init *****************
   936 ;; Defined at:
   937 ;;		line 8 in file "LEDarray.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;		None
   940 ;; Auto vars:     Size  Location     Type
   941 ;;		None
   942 ;; Return value:  Size  Location     Type
   943 ;;                  1    wreg      void 
   944 ;; Registers used:
   945 ;;		None
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   955 ;;Total ram usage:        0 bytes
   956 ;; Hardware stack levels used: 1
   957 ;; Hardware stack levels required when called: 1
   958 ;; This function calls:
   959 ;;		Nothing
   960 ;; This function is called by:
   961 ;;		_main
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           	psect	text2
   966  0004EC                     __ptext2:
   967                           	callstack 0
   968  0004EC                     _LEDarray_init:
   969                           	callstack 29
   970  0004EC                     
   971                           ;LEDarray.c: 13:     LATGbits.LATG0=0;
   972  0004EC  907F               	bcf	127,0,c	;volatile
   973                           
   974                           ;LEDarray.c: 14:     TRISGbits.TRISG0=0;
   975  0004EE  9087               	bcf	135,0,c	;volatile
   976                           
   977                           ;LEDarray.c: 16:     LATGbits.LATG1=0;
   978  0004F0  927F               	bcf	127,1,c	;volatile
   979                           
   980                           ;LEDarray.c: 17:     TRISGbits.TRISG1=0;
   981  0004F2  9287               	bcf	135,1,c	;volatile
   982                           
   983                           ;LEDarray.c: 19:     LATAbits.LATA2=0;
   984  0004F4  9479               	bcf	121,2,c	;volatile
   985                           
   986                           ;LEDarray.c: 20:     TRISAbits.TRISA2=0;
   987  0004F6  9481               	bcf	129,2,c	;volatile
   988                           
   989                           ;LEDarray.c: 22:     LATFbits.LATF6=0;
   990  0004F8  9C7E               	bcf	126,6,c	;volatile
   991                           
   992                           ;LEDarray.c: 23:     TRISFbits.TRISF6=0;
   993  0004FA  9C86               	bcf	134,6,c	;volatile
   994                           
   995                           ;LEDarray.c: 25:     LATAbits.LATA4=0;
   996  0004FC  9879               	bcf	121,4,c	;volatile
   997                           
   998                           ;LEDarray.c: 26:     TRISAbits.TRISA4=0;
   999  0004FE  9881               	bcf	129,4,c	;volatile
  1000                           
  1001                           ;LEDarray.c: 28:     LATAbits.LATA5=0;
  1002  000500  9A79               	bcf	121,5,c	;volatile
  1003                           
  1004                           ;LEDarray.c: 29:     TRISAbits.TRISA5=0;
  1005  000502  9A81               	bcf	129,5,c	;volatile
  1006                           
  1007                           ;LEDarray.c: 31:     LATFbits.LATF0=0;
  1008  000504  907E               	bcf	126,0,c	;volatile
  1009                           
  1010                           ;LEDarray.c: 32:     TRISFbits.TRISF0=0;
  1011  000506  9086               	bcf	134,0,c	;volatile
  1012                           
  1013                           ;LEDarray.c: 34:     LATBbits.LATB0=0;
  1014  000508  907A               	bcf	122,0,c	;volatile
  1015                           
  1016                           ;LEDarray.c: 35:     TRISBbits.TRISB0=0;
  1017  00050A  9082               	bcf	130,0,c	;volatile
  1018                           
  1019                           ;LEDarray.c: 37:     LATBbits.LATB1=0;
  1020  00050C  927A               	bcf	122,1,c	;volatile
  1021                           
  1022                           ;LEDarray.c: 38:     TRISBbits.TRISB1=0;
  1023  00050E  9282               	bcf	130,1,c	;volatile
  1024  000510  0012               	return		;funcret
  1025  000512                     __end_of_LEDarray_init:
  1026                           	callstack 0
  1027                           
  1028 ;; *************** function _LEDarray_disp_bin *****************
  1029 ;; Defined at:
  1030 ;;		line 45 in file "LEDarray.c"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;  number          2    1[COMRAM] unsigned int 
  1033 ;; Auto vars:     Size  Location     Type
  1034 ;;		None
  1035 ;; Return value:  Size  Location     Type
  1036 ;;                  1    wreg      void 
  1037 ;; Registers used:
  1038 ;;		None
  1039 ;; Tracked objects:
  1040 ;;		On entry : 0/0
  1041 ;;		On exit  : 0/0
  1042 ;;		Unchanged: 0/0
  1043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1044 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1047 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1048 ;;Total ram usage:        2 bytes
  1049 ;; Hardware stack levels used: 1
  1050 ;; Hardware stack levels required when called: 1
  1051 ;; This function calls:
  1052 ;;		Nothing
  1053 ;; This function is called by:
  1054 ;;		_main
  1055 ;;		_LEDarray_disp_dec
  1056 ;;		_LEDarray_disp_PPM
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           	psect	text3
  1061  0003BE                     __ptext3:
  1062                           	callstack 0
  1063  0003BE                     _LEDarray_disp_bin:
  1064                           	callstack 29
  1065  0003BE                     
  1066                           ;LEDarray.c: 45: void LEDarray_disp_bin(unsigned int number);LEDarray.c: 46: {;LEDarray.
      +                          c: 50:     if (number & 0b000000001) { LATGbits.LATG0=1;} else { LATGbits.LATG0=0;}
  1067  0003BE  A002               	btfss	LEDarray_disp_bin@number^0,0,c
  1068  0003C0  EFE4  F001         	goto	u771
  1069  0003C4  EFE6  F001         	goto	u770
  1070  0003C8                     u771:
  1071  0003C8  EFE9  F001         	goto	l96
  1072  0003CC                     u770:
  1073  0003CC  807F               	bsf	127,0,c	;volatile
  1074  0003CE  EFEA  F001         	goto	l97
  1075  0003D2                     l96:
  1076  0003D2  907F               	bcf	127,0,c	;volatile
  1077  0003D4                     l97:
  1078                           
  1079                           ;LEDarray.c: 51:     if (number & 0b000000010) { LATGbits.LATG1=1;} else { LATGbits.LATG
      +                          1=0;}
  1080  0003D4  A202               	btfss	LEDarray_disp_bin@number^0,1,c
  1081  0003D6  EFEF  F001         	goto	u781
  1082  0003DA  EFF1  F001         	goto	u780
  1083  0003DE                     u781:
  1084  0003DE  EFF4  F001         	goto	l98
  1085  0003E2                     u780:
  1086  0003E2  827F               	bsf	127,1,c	;volatile
  1087  0003E4  EFF5  F001         	goto	l99
  1088  0003E8                     l98:
  1089  0003E8  927F               	bcf	127,1,c	;volatile
  1090  0003EA                     l99:
  1091                           
  1092                           ;LEDarray.c: 52:     if (number & 0b000000100) { LATAbits.LATA2=1;} else { LATAbits.LATA
      +                          2=0;}
  1093  0003EA  A402               	btfss	LEDarray_disp_bin@number^0,2,c
  1094  0003EC  EFFA  F001         	goto	u791
  1095  0003F0  EFFC  F001         	goto	u790
  1096  0003F4                     u791:
  1097  0003F4  EFFF  F001         	goto	l100
  1098  0003F8                     u790:
  1099  0003F8  8479               	bsf	121,2,c	;volatile
  1100  0003FA  EF00  F002         	goto	l101
  1101  0003FE                     l100:
  1102  0003FE  9479               	bcf	121,2,c	;volatile
  1103  000400                     l101:
  1104                           
  1105                           ;LEDarray.c: 53:     if (number & 0b000001000) { LATFbits.LATF6=1;} else { LATFbits.LATF
      +                          6=0;}
  1106  000400  A602               	btfss	LEDarray_disp_bin@number^0,3,c
  1107  000402  EF05  F002         	goto	u801
  1108  000406  EF07  F002         	goto	u800
  1109  00040A                     u801:
  1110  00040A  EF0A  F002         	goto	l102
  1111  00040E                     u800:
  1112  00040E  8C7E               	bsf	126,6,c	;volatile
  1113  000410  EF0B  F002         	goto	l103
  1114  000414                     l102:
  1115  000414  9C7E               	bcf	126,6,c	;volatile
  1116  000416                     l103:
  1117                           
  1118                           ;LEDarray.c: 54:     if (number & 0b000010000) { LATAbits.LATA4=1;} else { LATAbits.LATA
      +                          4=0;}
  1119  000416  A802               	btfss	LEDarray_disp_bin@number^0,4,c
  1120  000418  EF10  F002         	goto	u811
  1121  00041C  EF12  F002         	goto	u810
  1122  000420                     u811:
  1123  000420  EF15  F002         	goto	l104
  1124  000424                     u810:
  1125  000424  8879               	bsf	121,4,c	;volatile
  1126  000426  EF16  F002         	goto	l105
  1127  00042A                     l104:
  1128  00042A  9879               	bcf	121,4,c	;volatile
  1129  00042C                     l105:
  1130                           
  1131                           ;LEDarray.c: 55:     if (number & 0b000100000) { LATAbits.LATA5=1;} else { LATAbits.LATA
      +                          5=0;}
  1132  00042C  AA02               	btfss	LEDarray_disp_bin@number^0,5,c
  1133  00042E  EF1B  F002         	goto	u821
  1134  000432  EF1D  F002         	goto	u820
  1135  000436                     u821:
  1136  000436  EF20  F002         	goto	l106
  1137  00043A                     u820:
  1138  00043A  8A79               	bsf	121,5,c	;volatile
  1139  00043C  EF21  F002         	goto	l107
  1140  000440                     l106:
  1141  000440  9A79               	bcf	121,5,c	;volatile
  1142  000442                     l107:
  1143                           
  1144                           ;LEDarray.c: 56:     if (number & 0b001000000) { LATFbits.LATF0=1;} else { LATFbits.LATF
      +                          0=0;}
  1145  000442  AC02               	btfss	LEDarray_disp_bin@number^0,6,c
  1146  000444  EF26  F002         	goto	u831
  1147  000448  EF28  F002         	goto	u830
  1148  00044C                     u831:
  1149  00044C  EF2B  F002         	goto	l108
  1150  000450                     u830:
  1151  000450  807E               	bsf	126,0,c	;volatile
  1152  000452  EF2C  F002         	goto	l109
  1153  000456                     l108:
  1154  000456  907E               	bcf	126,0,c	;volatile
  1155  000458                     l109:
  1156                           
  1157                           ;LEDarray.c: 57:     if (number & 0b010000000) { LATBbits.LATB0=1;} else { LATBbits.LATB
      +                          0=0;}
  1158  000458  AE02               	btfss	LEDarray_disp_bin@number^0,7,c
  1159  00045A  EF31  F002         	goto	u841
  1160  00045E  EF33  F002         	goto	u840
  1161  000462                     u841:
  1162  000462  EF36  F002         	goto	l110
  1163  000466                     u840:
  1164  000466  807A               	bsf	122,0,c	;volatile
  1165  000468  EF37  F002         	goto	l111
  1166  00046C                     l110:
  1167  00046C  907A               	bcf	122,0,c	;volatile
  1168  00046E                     l111:
  1169                           
  1170                           ;LEDarray.c: 58:     if (number & 0b100000000) { LATBbits.LATB1=1;} else { LATBbits.LATB
      +                          1=0;}
  1171  00046E  A003               	btfss	(LEDarray_disp_bin@number+1)^0,0,c
  1172  000470  EF3C  F002         	goto	u851
  1173  000474  EF3E  F002         	goto	u850
  1174  000478                     u851:
  1175  000478  EF41  F002         	goto	l112
  1176  00047C                     u850:
  1177  00047C  827A               	bsf	122,1,c	;volatile
  1178  00047E  EF42  F002         	goto	l114
  1179  000482                     l112:
  1180  000482  927A               	bcf	122,1,c	;volatile
  1181  000484                     l114:
  1182  000484  0012               	return		;funcret
  1183  000486                     __end_of_LEDarray_disp_bin:
  1184                           	callstack 0
  1185                           
  1186 ;; *************** function _Interrupts_init *****************
  1187 ;; Defined at:
  1188 ;;		line 8 in file "interrupts.c"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;		None
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;		None
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  1    wreg      void 
  1195 ;; Registers used:
  1196 ;;		None
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1206 ;;Total ram usage:        0 bytes
  1207 ;; Hardware stack levels used: 1
  1208 ;; Hardware stack levels required when called: 1
  1209 ;; This function calls:
  1210 ;;		Nothing
  1211 ;; This function is called by:
  1212 ;;		_main
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           	psect	text4
  1217  000564                     __ptext4:
  1218                           	callstack 0
  1219  000564                     _Interrupts_init:
  1220                           	callstack 29
  1221  000564                     
  1222                           ;interrupts.c: 12:     INTCONbits.PEIE=1;
  1223  000564  8CF2               	bsf	242,6,c	;volatile
  1224                           
  1225                           ;interrupts.c: 13:     PIE0bits.TMR0IE=1;
  1226  000566  010E               	movlb	14	; () banked
  1227  000568  8B29               	bsf	41,5,b	;volatile
  1228                           
  1229                           ;interrupts.c: 14:     PIE2bits.C1IE=1;
  1230  00056A  812B               	bsf	43,0,b	;volatile
  1231                           
  1232                           ;interrupts.c: 15:     INTCONbits.GIE=1;
  1233  00056C  8EF2               	bsf	242,7,c	;volatile
  1234  00056E                     
  1235                           ; BSR set to: 14
  1236  00056E  0012               	return		;funcret
  1237  000570                     __end_of_Interrupts_init:
  1238                           	callstack 0
  1239                           
  1240 ;; *************** function _ADC_init *****************
  1241 ;; Defined at:
  1242 ;;		line 9 in file "ADC.c"
  1243 ;; Parameters:    Size  Location     Type
  1244 ;;		None
  1245 ;; Auto vars:     Size  Location     Type
  1246 ;;		None
  1247 ;; Return value:  Size  Location     Type
  1248 ;;                  1    wreg      void 
  1249 ;; Registers used:
  1250 ;;		wreg, status,2
  1251 ;; Tracked objects:
  1252 ;;		On entry : 0/0
  1253 ;;		On exit  : 0/0
  1254 ;;		Unchanged: 0/0
  1255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1260 ;;Total ram usage:        0 bytes
  1261 ;; Hardware stack levels used: 1
  1262 ;; Hardware stack levels required when called: 1
  1263 ;; This function calls:
  1264 ;;		Nothing
  1265 ;; This function is called by:
  1266 ;;		_main
  1267 ;; This function uses a non-reentrant model
  1268 ;;
  1269                           
  1270                           	psect	text5
  1271  000532                     __ptext5:
  1272                           	callstack 0
  1273  000532                     _ADC_init:
  1274                           	callstack 29
  1275  000532                     
  1276                           ;ADC.c: 11:     TRISAbits.TRISA3=1;
  1277  000532  8681               	bsf	129,3,c	;volatile
  1278                           
  1279                           ;ADC.c: 12:     ANSELAbits.ANSELA3=1;
  1280  000534  010E               	movlb	14	; () banked
  1281  000536  8792               	bsf	146,3,b	;volatile
  1282                           
  1283                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
  1284  000538  010F               	movlb	15	; () banked
  1285  00053A  9958               	bcf	88,4,b	;volatile
  1286  00053C                     
  1287                           ; BSR set to: 15
  1288                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  1289  00053C  0EFC               	movlw	-4
  1290  00053E  1758               	andwf	88,f,b	;volatile
  1291                           
  1292                           ;ADC.c: 17:     ADPCH=0b11;
  1293  000540  0E03               	movlw	3
  1294  000542  6F5F               	movwf	95,b	;volatile
  1295  000544                     
  1296                           ; BSR set to: 15
  1297                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
  1298  000544  9460               	bcf	96,2,c	;volatile
  1299  000546                     
  1300                           ; BSR set to: 15
  1301                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
  1302  000546  8860               	bsf	96,4,c	;volatile
  1303  000548                     
  1304                           ; BSR set to: 15
  1305                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
  1306  000548  8E60               	bsf	96,7,c	;volatile
  1307  00054A                     
  1308                           ; BSR set to: 15
  1309  00054A  0012               	return		;funcret
  1310  00054C                     __end_of_ADC_init:
  1311                           	callstack 0
  1312                           
  1313 ;; *************** function _ADC_getval *****************
  1314 ;; Defined at:
  1315 ;;		line 23 in file "ADC.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;		None
  1318 ;; Auto vars:     Size  Location     Type
  1319 ;;  tmpval          2    3[COMRAM] unsigned int 
  1320 ;; Return value:  Size  Location     Type
  1321 ;;                  2    1[COMRAM] unsigned int 
  1322 ;; Registers used:
  1323 ;;		wreg, status,2, status,0
  1324 ;; Tracked objects:
  1325 ;;		On entry : 0/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1329 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1330 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1332 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1333 ;;Total ram usage:        4 bytes
  1334 ;; Hardware stack levels used: 1
  1335 ;; Hardware stack levels required when called: 1
  1336 ;; This function calls:
  1337 ;;		Nothing
  1338 ;; This function is called by:
  1339 ;;		_main
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343                           	psect	text6
  1344  0004BC                     __ptext6:
  1345                           	callstack 0
  1346  0004BC                     _ADC_getval:
  1347                           	callstack 29
  1348  0004BC                     
  1349                           ;ADC.c: 25:     unsigned int tmpval;;ADC.c: 27:     ADCON0bits.GO = 1;
  1350  0004BC  8060               	bsf	96,0,c	;volatile
  1351  0004BE                     l18:
  1352  0004BE  B060               	btfsc	96,0,c	;volatile
  1353  0004C0  EF64  F002         	goto	u761
  1354  0004C4  EF66  F002         	goto	u760
  1355  0004C8                     u761:
  1356  0004C8  EF5F  F002         	goto	l18
  1357  0004CC                     u760:
  1358  0004CC                     
  1359                           ;ADC.c: 31:     tmpval = ADRESH;
  1360  0004CC  CF64 F004          	movff	3940,ADC_getval@tmpval	;volatile
  1361  0004D0  6A05               	clrf	(ADC_getval@tmpval+1)^0,c
  1362  0004D2                     
  1363                           ;ADC.c: 35:     tmpval = 255 - tmpval;
  1364  0004D2  5004               	movf	ADC_getval@tmpval^0,w,c
  1365  0004D4  08FF               	sublw	255
  1366  0004D6  6E04               	movwf	ADC_getval@tmpval^0,c
  1367  0004D8  5005               	movf	(ADC_getval@tmpval+1)^0,w,c
  1368  0004DA  A0D8               	btfss	status,0,c
  1369  0004DC  2AE8               	incf	wreg,f,c
  1370  0004DE  0800               	sublw	0
  1371  0004E0  6E05               	movwf	(ADC_getval@tmpval+1)^0,c
  1372  0004E2                     
  1373                           ;ADC.c: 37:     return tmpval;
  1374  0004E2  C004  F002         	movff	ADC_getval@tmpval,?_ADC_getval
  1375  0004E6  C005  F003         	movff	ADC_getval@tmpval+1,?_ADC_getval+1
  1376  0004EA  0012               	return		;funcret
  1377  0004EC                     __end_of_ADC_getval:
  1378                           	callstack 0
  1379                           
  1380 ;; *************** function _HighISR *****************
  1381 ;; Defined at:
  1382 ;;		line 22 in file "interrupts.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;		None
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;		None
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  1    wreg      void 
  1389 ;; Registers used:
  1390 ;;		wreg, status,2, status,0
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1398 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1399 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1400 ;;Total ram usage:        1 bytes
  1401 ;; Hardware stack levels used: 1
  1402 ;; This function calls:
  1403 ;;		Nothing
  1404 ;; This function is called by:
  1405 ;;		Interrupt level 2
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409                           	psect	intcode
  1410  000008                     __pintcode:
  1411                           	callstack 0
  1412  000008                     _HighISR:
  1413                           	callstack 29
  1414                           
  1415                           ;incstack = 0
  1416  000008  820E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1417  00000A                     
  1418                           ;interrupts.c: 24:     if (PIR2bits.C1IF == 1){
  1419  00000A  010E               	movlb	14	; () banked
  1420  00000C  A135               	btfss	53,0,b	;volatile
  1421  00000E  EF0B  F000         	goto	i2u70_41
  1422  000012  EF0D  F000         	goto	i2u70_40
  1423  000016                     i2u70_41:
  1424  000016  EF21  F000         	goto	i2l1136
  1425  00001A                     i2u70_40:
  1426  00001A                     
  1427                           ; BSR set to: 14
  1428                           ;interrupts.c: 25:         LATHbits.LATH3 = !LATHbits.LATH3;
  1429  00001A  A680               	btfss	128,3,c	;volatile
  1430  00001C  EF12  F000         	goto	i2u71_41
  1431  000020  EF16  F000         	goto	i2u71_40
  1432  000024                     i2u71_41:
  1433  000024  6A01               	clrf	??_HighISR^0,c
  1434  000026  2A01               	incf	??_HighISR^0,f,c
  1435  000028  EF17  F000         	goto	i2u72_48
  1436  00002C                     i2u71_40:
  1437  00002C  6A01               	clrf	??_HighISR^0,c
  1438  00002E                     i2u72_48:
  1439  00002E  4601               	rlncf	??_HighISR^0,f,c
  1440  000030  4601               	rlncf	??_HighISR^0,f,c
  1441  000032  4601               	rlncf	??_HighISR^0,f,c
  1442  000034  5080               	movf	128,w,c	;volatile
  1443  000036  1801               	xorwf	??_HighISR^0,w,c
  1444  000038  0BF7               	andlw	-9
  1445  00003A  1801               	xorwf	??_HighISR^0,w,c
  1446  00003C  6E80               	movwf	128,c	;volatile
  1447  00003E                     
  1448                           ;interrupts.c: 26:         PIR2bits.C1IF=0;
  1449  00003E  010E               	movlb	14	; () banked
  1450  000040  9135               	bcf	53,0,b	;volatile
  1451  000042                     i2l1136:
  1452                           
  1453                           ; BSR set to: 14
  1454                           ;interrupts.c: 29:     if (PIR0bits.TMR0IF == 1){
  1455  000042  AB33               	btfss	51,5,b	;volatile
  1456  000044  EF26  F000         	goto	i2u73_41
  1457  000048  EF28  F000         	goto	i2u73_40
  1458  00004C                     i2u73_41:
  1459  00004C  EF3B  F000         	goto	i2l176
  1460  000050                     i2u73_40:
  1461  000050                     
  1462                           ; BSR set to: 14
  1463                           ;interrupts.c: 30:         LATDbits.LATD7 = !LATDbits.LATD7;
  1464  000050  AE7C               	btfss	124,7,c	;volatile
  1465  000052  EF2D  F000         	goto	i2u74_41
  1466  000056  EF31  F000         	goto	i2u74_40
  1467  00005A                     i2u74_41:
  1468  00005A  6A01               	clrf	??_HighISR^0,c
  1469  00005C  2A01               	incf	??_HighISR^0,f,c
  1470  00005E  EF32  F000         	goto	i2u75_48
  1471  000062                     i2u74_40:
  1472  000062  6A01               	clrf	??_HighISR^0,c
  1473  000064                     i2u75_48:
  1474  000064  3201               	rrcf	??_HighISR^0,f,c
  1475  000066  3201               	rrcf	??_HighISR^0,f,c
  1476  000068  507C               	movf	124,w,c	;volatile
  1477  00006A  1801               	xorwf	??_HighISR^0,w,c
  1478  00006C  0B7F               	andlw	-129
  1479  00006E  1801               	xorwf	??_HighISR^0,w,c
  1480  000070  6E7C               	movwf	124,c	;volatile
  1481  000072                     
  1482                           ;interrupts.c: 31:         PIR0bits.TMR0IF=0;
  1483  000072  010E               	movlb	14	; () banked
  1484  000074  9B33               	bcf	51,5,b	;volatile
  1485  000076                     i2l176:
  1486                           
  1487                           ; BSR set to: 14
  1488  000076  920E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1489  000078  0011               	retfie		f
  1490  00007A                     __end_of_HighISR:
  1491                           	callstack 0
  1492  0000                     
  1493                           	psect	rparam
  1494  0000                     
  1495                           	psect	temp
  1496  00000E                     btemp:
  1497                           	callstack 0
  1498  00000E                     	ds	1
  1499  0000                     int$flags	set	btemp
  1500  0000                     wtemp8	set	btemp+1
  1501  0000                     ttemp5	set	btemp+1
  1502  0000                     ttemp6	set	btemp+4
  1503  0000                     ttemp7	set	btemp+8
  1504                           
  1505                           	psect	idloc
  1506                           
  1507                           ;Config register IDLOC0 @ 0x200000
  1508                           ;	unspecified, using default values
  1509  200000                     	org	2097152
  1510  200000  0FFF               	dw	4095
  1511                           
  1512                           ;Config register IDLOC1 @ 0x200002
  1513                           ;	unspecified, using default values
  1514  200002                     	org	2097154
  1515  200002  0FFF               	dw	4095
  1516                           
  1517                           ;Config register IDLOC2 @ 0x200004
  1518                           ;	unspecified, using default values
  1519  200004                     	org	2097156
  1520  200004  0FFF               	dw	4095
  1521                           
  1522                           ;Config register IDLOC3 @ 0x200006
  1523                           ;	unspecified, using default values
  1524  200006                     	org	2097158
  1525  200006  0FFF               	dw	4095
  1526                           
  1527                           ;Config register IDLOC4 @ 0x200008
  1528                           ;	unspecified, using default values
  1529  200008                     	org	2097160
  1530  200008  0FFF               	dw	4095
  1531                           
  1532                           ;Config register IDLOC5 @ 0x20000A
  1533                           ;	unspecified, using default values
  1534  20000A                     	org	2097162
  1535  20000A  0FFF               	dw	4095
  1536                           
  1537                           ;Config register IDLOC6 @ 0x20000C
  1538                           ;	unspecified, using default values
  1539  20000C                     	org	2097164
  1540  20000C  0FFF               	dw	4095
  1541                           
  1542                           ;Config register IDLOC7 @ 0x20000E
  1543                           ;	unspecified, using default values
  1544  20000E                     	org	2097166
  1545  20000E  0FFF               	dw	4095
  1546                           
  1547                           	psect	config
  1548                           
  1549                           ;Config register CONFIG1L @ 0x300000
  1550                           ;	External Oscillator mode Selection bits
  1551                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  1552                           ;	Power-up default value for COSC bits
  1553                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  1554  300000                     	org	3145728
  1555  300000  AA                 	db	170
  1556                           
  1557                           ;Config register CONFIG1H @ 0x300001
  1558                           ;	unspecified, using default values
  1559                           ;	Clock Out Enable bit
  1560                           ;	CLKOUTEN = 0x1, unprogrammed default
  1561                           ;	Clock Switch Enable bit
  1562                           ;	CSWEN = 0x1, unprogrammed default
  1563                           ;	Fail-Safe Clock Monitor Enable bit
  1564                           ;	FCMEN = 0x1, unprogrammed default
  1565  300001                     	org	3145729
  1566  300001  FF                 	db	255
  1567                           
  1568                           ;Config register CONFIG2L @ 0x300002
  1569                           ;	unspecified, using default values
  1570                           ;	Master Clear Enable bit
  1571                           ;	MCLRE = 0x1, unprogrammed default
  1572                           ;	Power-up Timer Enable bit
  1573                           ;	PWRTE = 0x1, unprogrammed default
  1574                           ;	Low-power BOR enable bit
  1575                           ;	LPBOREN = 0x1, unprogrammed default
  1576                           ;	Brown-out Reset Enable bits
  1577                           ;	BOREN = 0x3, unprogrammed default
  1578  300002                     	org	3145730
  1579  300002  FF                 	db	255
  1580                           
  1581                           ;Config register CONFIG2H @ 0x300003
  1582                           ;	unspecified, using default values
  1583                           ;	Brown Out Reset Voltage selection bits
  1584                           ;	BORV = 0x3, unprogrammed default
  1585                           ;	ZCD Disable bit
  1586                           ;	ZCD = 0x1, unprogrammed default
  1587                           ;	PPSLOCK bit One-Way Set Enable bit
  1588                           ;	PPS1WAY = 0x1, unprogrammed default
  1589                           ;	Stack Full/Underflow Reset Enable bit
  1590                           ;	STVREN = 0x1, unprogrammed default
  1591                           ;	Debugger Enable bit
  1592                           ;	DEBUG = 0x1, unprogrammed default
  1593                           ;	Extended Instruction Set Enable bit
  1594                           ;	XINST = 0x1, unprogrammed default
  1595  300003                     	org	3145731
  1596  300003  FF                 	db	255
  1597                           
  1598                           ;Config register CONFIG3L @ 0x300004
  1599                           ;	WDT Period Select bits
  1600                           ;	WDTCPS = 0x1F, unprogrammed default
  1601                           ;	WDT operating mode
  1602                           ;	WDTE = OFF, WDT Disabled
  1603  300004                     	org	3145732
  1604  300004  9F                 	db	159
  1605                           
  1606                           ;Config register CONFIG3H @ 0x300005
  1607                           ;	unspecified, using default values
  1608                           ;	WDT Window Select bits
  1609                           ;	WDTCWS = 0x7, unprogrammed default
  1610                           ;	WDT input clock selector
  1611                           ;	WDTCCS = 0x7, unprogrammed default
  1612  300005                     	org	3145733
  1613  300005  FF                 	db	255
  1614                           
  1615                           ;Config register CONFIG4L @ 0x300006
  1616                           ;	unspecified, using default values
  1617                           ;	Write Protection Block 0
  1618                           ;	WRT0 = 0x1, unprogrammed default
  1619                           ;	Write Protection Block 1
  1620                           ;	WRT1 = 0x1, unprogrammed default
  1621                           ;	Write Protection Block 2
  1622                           ;	WRT2 = 0x1, unprogrammed default
  1623                           ;	Write Protection Block 3
  1624                           ;	WRT3 = 0x1, unprogrammed default
  1625                           ;	Write Protection Block 3
  1626                           ;	WRT4 = 0x1, unprogrammed default
  1627                           ;	Write Protection Block 3
  1628                           ;	WRT5 = 0x1, unprogrammed default
  1629                           ;	Write Protection Block 3
  1630                           ;	WRT6 = 0x1, unprogrammed default
  1631                           ;	Write Protection Block 3
  1632                           ;	WRT7 = 0x1, unprogrammed default
  1633  300006                     	org	3145734
  1634  300006  FF                 	db	255
  1635                           
  1636                           ;Config register CONFIG4H @ 0x300007
  1637                           ;	unspecified, using default values
  1638                           ;	Configuration Register Write Protection bit
  1639                           ;	WRTC = 0x1, unprogrammed default
  1640                           ;	Boot Block Write Protection bit
  1641                           ;	WRTB = 0x1, unprogrammed default
  1642                           ;	Data EEPROM Write Protection bit
  1643                           ;	WRTD = 0x1, unprogrammed default
  1644                           ;	Scanner Enable bit
  1645                           ;	SCANE = 0x1, unprogrammed default
  1646                           ;	Low Voltage Programming Enable bit
  1647                           ;	LVP = 0x1, unprogrammed default
  1648  300007                     	org	3145735
  1649  300007  FF                 	db	255
  1650                           
  1651                           ;Config register CONFIG5L @ 0x300008
  1652                           ;	unspecified, using default values
  1653                           ;	UserNVM Program Memory Code Protection bit
  1654                           ;	CP = 0x1, unprogrammed default
  1655                           ;	DataNVM Memory Code Protection bit
  1656                           ;	CPD = 0x1, unprogrammed default
  1657  300008                     	org	3145736
  1658  300008  FF                 	db	255
  1659                           
  1660                           ;Config register CONFIG5H @ 0x300009
  1661                           ;	unspecified, using default values
  1662  300009                     	org	3145737
  1663  300009  FF                 	db	255
  1664                           
  1665                           ;Config register CONFIG6L @ 0x30000A
  1666                           ;	unspecified, using default values
  1667                           ;	Table Read Protection Block 0
  1668                           ;	EBTR0 = 0x1, unprogrammed default
  1669                           ;	Table Read Protection Block 1
  1670                           ;	EBTR1 = 0x1, unprogrammed default
  1671                           ;	Table Read Protection Block 2
  1672                           ;	EBTR2 = 0x1, unprogrammed default
  1673                           ;	Table Read Protection Block 3
  1674                           ;	EBTR3 = 0x1, unprogrammed default
  1675                           ;	Table Read Protection Block 4
  1676                           ;	EBTR4 = 0x1, unprogrammed default
  1677                           ;	Table Read Protection Block 5
  1678                           ;	EBTR5 = 0x1, unprogrammed default
  1679                           ;	Table Read Protection Block 6
  1680                           ;	EBTR6 = 0x1, unprogrammed default
  1681                           ;	Table Read Protection Block 7
  1682                           ;	EBTR7 = 0x1, unprogrammed default
  1683  30000A                     	org	3145738
  1684  30000A  FF                 	db	255
  1685                           
  1686                           ;Config register CONFIG6H @ 0x30000B
  1687                           ;	unspecified, using default values
  1688                           ;	Boot Block Table Read Protection bit
  1689                           ;	EBTRB = 0x1, unprogrammed default
  1690  30000B                     	org	3145739
  1691  30000B  FF                 	db	255
  1692                           tosu	equ	0xFFF
  1693                           tosh	equ	0xFFE
  1694                           tosl	equ	0xFFD
  1695                           stkptr	equ	0xFFC
  1696                           pclatu	equ	0xFFB
  1697                           pclath	equ	0xFFA
  1698                           pcl	equ	0xFF9
  1699                           tblptru	equ	0xFF8
  1700                           tblptrh	equ	0xFF7
  1701                           tblptrl	equ	0xFF6
  1702                           tablat	equ	0xFF5
  1703                           prodh	equ	0xFF4
  1704                           prodl	equ	0xFF3
  1705                           indf0	equ	0xFEF
  1706                           postinc0	equ	0xFEE
  1707                           postdec0	equ	0xFED
  1708                           preinc0	equ	0xFEC
  1709                           plusw0	equ	0xFEB
  1710                           fsr0h	equ	0xFEA
  1711                           fsr0l	equ	0xFE9
  1712                           wreg	equ	0xFE8
  1713                           indf1	equ	0xFE7
  1714                           postinc1	equ	0xFE6
  1715                           postdec1	equ	0xFE5
  1716                           preinc1	equ	0xFE4
  1717                           plusw1	equ	0xFE3
  1718                           fsr1h	equ	0xFE2
  1719                           fsr1l	equ	0xFE1
  1720                           bsr	equ	0xFE0
  1721                           indf2	equ	0xFDF
  1722                           postinc2	equ	0xFDE
  1723                           postdec2	equ	0xFDD
  1724                           preinc2	equ	0xFDC
  1725                           plusw2	equ	0xFDB
  1726                           fsr2h	equ	0xFDA
  1727                           fsr2l	equ	0xFD9
  1728                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        24
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     13      13
    BANK0           160     88     152
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_ADC_getval

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                96    96      0    1161
                                              5 COMRAM     8     8      0
                                              0 BANK0     88    88      0
                         _ADC_getval
                           _ADC_init
                    _Interrupts_init
                  _LEDarray_disp_bin
                      _LEDarray_init
                        _Timer0_init
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     502
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_getval                                           4     2      2      46
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _HighISR                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_getval
   _ADC_init
   _Interrupts_init
   _LEDarray_disp_bin
   _LEDarray_init
   _Timer0_init

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     58      98       5       95.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      D       D       1       13.8%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A5       8        0.0%
DATA                 0      0      A5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Nov 04 16:46:16 2021

                        l20 04CC                          l21 04EA                          l15 054A  
                        l18 04BE                          l51 0168                          l53 0162  
                        l64 03B6                          l93 0510                          l96 03D2  
                        l97 03D4                          l98 03E8                          l99 03EA  
         ??_Interrupts_init 0002                         l100 03FE                         l101 0400  
                       l110 046C                         l102 0414                         l111 046E  
                       l103 0416                         l112 0482                         l104 042A  
                       l105 042C                         l114 0484                         l106 0440  
                       l107 0442                         l108 0456                         l109 0458  
                       l169 056E                         l187 0530                         u800 040E  
                       u801 040A                         u810 0424                         u811 0420  
                       u820 043A                         u900 0162                         u821 0436  
                       u901 015E                         u830 0450                         u910 017A  
                       u831 044C                         u911 0174                         u760 04CC  
                       u840 0466                         u920 017C                         u761 04C8  
                       u841 0462                         u850 047C                         u770 03CC  
                       u930 0198                         u851 0478                         u771 03C8  
                       u931 0194                         u780 03E2                         u940 01AE  
                       u781 03DE                         u941 01A6                         u861 00B2  
                       u790 03F8                         u950 01CC                         u791 03F4  
                       u951 01C8                         u871 00C8                         u960 01EC  
                       u880 012A                         u961 01E8                         u881 0126  
                       u970 020C                         u890 0146                         u971 0208  
                       u891 0142                         u980 0232                         u948 01B0  
                       u981 022E                         u990 0262                         u991 025E  
                       wreg 000FE8         __size_of_ADC_getval 0030                 main@daydate 00B0  
        main@light_strength 00A2                        l1200 0086                        l1210 00A0  
                      l1202 008A                        l1300 034C                        l1220 00CE  
                      l1212 00A8                        l1204 008E                        l1150 053C  
                      l1310 0392                        l1302 0360                        l1230 00F6  
                      l1222 00D6                        l1214 00A8                        l1206 0096  
                      l1160 04D2                        l1152 0544                        l1312 03A4  
                      l1304 0372                        l1240 0146                        l1232 00FE  
                      l1224 00DE                        l1216 00BA                        l1208 0096  
                      l1162 04E2                        l1154 0546                        l1170 051A  
                      l1314 03AA                        l1306 0376                        l1250 01CC  
                      l1242 016A                        l1234 0106                        l1226 00E6  
                      l1218 00C2                        l1156 0548                        l1148 0532  
                      l1180 03CC                        l1172 0524                        l1308 037E  
                      l1260 01F8                        l1252 01D0                        l1244 0198  
                      l1236 0112                        l1228 00EE                        l1158 04BC  
                      l1190 043A                        l1182 03E2                        l1166 04EC  
                      l1174 052E                        l1270 0232                        l1262 020C  
                      l1254 01D8                        l1246 019C                        l1238 012A  
                      l1176 0564                        l1192 0450                        l1184 03F8  
                      l1168 0512                        l1280 026E                        l1272 023A  
                      l1264 0214                        l1256 01EC                        l1248 01B8  
                      l1194 0466                        l1186 040E                        l1178 03BE  
                      l1290 02CA                        l1282 0276                        l1274 0246  
                      l1266 0218                        l1258 01F0                        l1196 047C  
                      l1188 0424                        l1292 02E0                        l1284 02B6  
                      l1276 0250                        l1268 021C                        l1294 02E4  
                      l1286 02BA                        l1278 0262                        l1198 007E  
                      l1296 02EC                        l1288 02C2                        l1298 0300  
                      u1000 02B6                        u1001 02B2                        u1010 02E0  
                      u1011 02DC                        u1020 0300                        u1021 02FC  
                      u1030 034C                        u1031 0348                        u1040 0360  
                      u1041 035C                        u1050 0372                        u1051 036E  
                      u1060 0392                        u1061 038E                        u1070 03A4  
                      u1071 03A0                 main@minutes 00AC                        _main 007E  
                      fsr1l 000FE1                        fsr2l 000FD9                        btemp 000E  
                      start 007A            __end_of_ADC_init 054C             __end_of_HighISR 007A  
              ___param_bank 000000                       ?_main 0001                       _ADPCH 000F5F  
                     i2l176 0076                       _TMR0H 000FD4                       _TMR0L 000FD3  
                     tablat 000FF5                       plusw1 000FE3                       plusw2 000FDB  
                     ttemp5 000F                       ttemp6 0012                       ttemp7 0016  
                     status 000FD8                       wtemp8 000F             __initialization 0486  
              __end_of_main 03BE                      ??_main 0006               __activetblptr 000000  
    __size_of_LEDarray_init 0026                      _ADRESH 000F64               main@leap_year 00A6  
                    i2l1130 000A                      i2l1140 0072                      i2l1132 001A  
                    i2l1134 003E                      i2l1136 0042                      i2l1138 0050  
                 ??_HighISR 0001           _LEDarray_disp_bin 03BE          ?_LEDarray_disp_bin 0002  
              ??_ADC_getval 0004               ??_Timer0_init 0002         ??_LEDarray_disp_bin 0004  
                    clear_0 04AC               main@monthdays 0088                      isa$std 000001  
                    tblptrh 000FF7                      tblptrl 000FF6                      tblptru 000FF8  
                 ?_ADC_init 0001          __end_of_ADC_getval 04EC               main@startnend 0060  
 __end_of_LEDarray_disp_bin 0486                  __accesstop 0060     __end_of__initialization 04B2  
             ___rparam_used 000001               _LEDarray_init 04EC             _Interrupts_init 0564  
            __pcstackCOMRAM 0001                __pidataBANK0 054C         __end_of_Timer0_init 0532  
                ??_ADC_init 0002                  __pbssBANK0 00B8              ?_LEDarray_init 0001  
                   i2u70_40 001A                     i2u70_41 0016                     i2u71_40 002C  
                   i2u71_41 0024                     i2u73_40 0050                     i2u72_48 002E  
                   i2u73_41 004C                     i2u74_40 0062                     i2u74_41 005A  
                   i2u75_48 0064  __size_of_LEDarray_disp_bin 00C8     __end_of_Interrupts_init 0570  
                   _HighISR 0008                   _ADREFbits 000F58                     __Hparam 0000  
                   __Lparam 0000                 _Timer0_init 0512                     __pcinit 0486  
                   __ramtop 0E00                     __ptext0 007E                     __ptext1 0512  
                   __ptext2 04EC                     __ptext3 03BE                     __ptext4 0564  
                   __ptext5 0532                     __ptext6 04BC        end_of_initialization 04B2  
          ADC_getval@tmpval 0004             ??_LEDarray_init 0002                     postdec1 000FE5  
                   postinc0 000FEE                     postinc2 000FDE                  main@F14212 00E0  
                main@F14215 00B8                   _TRISAbits 000F81                   _TRISBbits 000F82  
         main@daylight_flag 00B2                   _TRISDbits 000F84                   _TRISFbits 000F86  
                 _TRISGbits 000F87                   _TRISHbits 000F88           __size_of_ADC_init 001A  
          ?_Interrupts_init 0001         start_initialization 0486             main@day_of_week 00AE  
               __pdataBANK0 00E0               __pcstackBANK0 0060                    ?_HighISR 0001  
              ?_Timer0_init 0001                   __pintcode 0008                    _ADC_init 0532  
                  _LATAbits 000F79                    _LATBbits 000F7A                    _LATDbits 000F7C  
                  _LATFbits 000F7E                    _LATGbits 000F7F                    _LATHbits 000F80  
                  _PIE0bits 000E29                    _PIE2bits 000E2B                    _PIR0bits 000E33  
                  _PIR2bits 000E35                  _ADCON0bits 000F60                   main@month 00B6  
                 copy_data0 049A            __size_of_HighISR 0072       __end_of_LEDarray_init 0512  
                  __Hrparam 0000                  _ADC_getval 04BC                    __Lrparam 0000  
                _ANSELAbits 000E92                  _ANSELFbits 000EB4                  _T0CON0bits 000FD5  
                _T0CON1bits 000FD6     LEDarray_disp_bin@number 0002               __size_of_main 0340  
                  isa$xinst 000000    __size_of_Interrupts_init 000C                    int$flags 000E  
      __size_of_Timer0_init 0020                    main@hour 00B4                    main@secs 00AA  
                  main@temp 00A4                    main@year 00A8                  _INTCONbits 000FF2  
        main@set_brightness 00A0                    intlevel2 0000                 ?_ADC_getval 0002  
