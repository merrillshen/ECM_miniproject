

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Nov 01 21:15:01 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 05/05/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F67K40 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     _PIR2bits	set	3637
    56  0000                     _PIE2bits	set	3627
    57  0000                     _PIE0bits	set	3625
    58  0000                     _ANSELFbits	set	3764
    59  0000                     _PIR0bits	set	3635
    60  0000                     _ANSELAbits	set	3730
    61  0000                     _ADPCH	set	3935
    62  0000                     _ADREFbits	set	3928
    63  0000                     _INTCONbits	set	4082
    64  0000                     _TMR0L	set	4051
    65  0000                     _TMR0H	set	4052
    66  0000                     _T0CON0bits	set	4053
    67  0000                     _T0CON1bits	set	4054
    68  0000                     _TRISBbits	set	3970
    69  0000                     _LATBbits	set	3962
    70  0000                     _TRISFbits	set	3974
    71  0000                     _LATFbits	set	3966
    72  0000                     _LATAbits	set	3961
    73  0000                     _TRISGbits	set	3975
    74  0000                     _LATGbits	set	3967
    75  0000                     _TRISDbits	set	3972
    76  0000                     _LATDbits	set	3964
    77  0000                     _TRISHbits	set	3976
    78  0000                     _LATHbits	set	3968
    79  0000                     _ADRESH	set	3940
    80  0000                     _ADCON0bits	set	3936
    81  0000                     _TRISAbits	set	3969
    82                           
    83                           ; #config settings
    84                           
    85                           	psect	cinit
    86  0002C8                     __pcinit:
    87                           	callstack 0
    88  0002C8                     start_initialization:
    89                           	callstack 0
    90  0002C8                     __initialization:
    91                           	callstack 0
    92  0002C8                     end_of_initialization:
    93                           	callstack 0
    94  0002C8                     __end_of__initialization:
    95                           	callstack 0
    96  0002C8  9010               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    97  0002CA  9210               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    98  0002CC  0100               	movlb	0
    99  0002CE  EF3F  F000         	goto	_main	;jump to C main() function
   100                           
   101                           	psect	cstackCOMRAM
   102  000001                     __pcstackCOMRAM:
   103                           	callstack 0
   104  000001                     ??_HighISR:
   105                           
   106                           ; 1 bytes @ 0x0
   107  000001                     	ds	1
   108  000002                     ?_ADC_getval:
   109                           	callstack 0
   110  000002                     LEDarray_disp_bin@number:
   111                           	callstack 0
   112                           
   113                           ; 2 bytes @ 0x1
   114  000002                     	ds	2
   115  000004                     ADC_getval@tmpval:
   116                           	callstack 0
   117                           
   118                           ; 2 bytes @ 0x3
   119  000004                     	ds	2
   120  000006                     main@set_brightness:
   121                           	callstack 0
   122                           
   123                           ; 2 bytes @ 0x5
   124  000006                     	ds	2
   125  000008                     main@light_strength:
   126                           	callstack 0
   127                           
   128                           ; 2 bytes @ 0x7
   129  000008                     	ds	2
   130  00000A                     main@secs:
   131                           	callstack 0
   132                           
   133                           ; 2 bytes @ 0x9
   134  00000A                     	ds	2
   135  00000C                     main@minutes:
   136                           	callstack 0
   137                           
   138                           ; 2 bytes @ 0xB
   139  00000C                     	ds	2
   140  00000E                     main@hour:
   141                           	callstack 0
   142                           
   143                           ; 2 bytes @ 0xD
   144  00000E                     	ds	2
   145                           
   146 ;;
   147 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   148 ;;
   149 ;; *************** function _main *****************
   150 ;; Defined at:
   151 ;;		line 15 in file "main.c"
   152 ;; Parameters:    Size  Location     Type
   153 ;;		None
   154 ;; Auto vars:     Size  Location     Type
   155 ;;  hour            2   13[COMRAM] unsigned int 
   156 ;;  minutes         2   11[COMRAM] unsigned int 
   157 ;;  secs            2    9[COMRAM] unsigned int 
   158 ;;  light_streng    2    7[COMRAM] unsigned int 
   159 ;;  set_brightne    2    5[COMRAM] unsigned int 
   160 ;;  temp            2    0        unsigned int 
   161 ;; Return value:  Size  Location     Type
   162 ;;                  1    wreg      void 
   163 ;; Registers used:
   164 ;;		wreg, status,2, status,0, cstack
   165 ;; Tracked objects:
   166 ;;		On entry : 0/0
   167 ;;		On exit  : 0/0
   168 ;;		Unchanged: 0/0
   169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   171 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   173 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   174 ;;Total ram usage:       10 bytes
   175 ;; Hardware stack levels required when called: 2
   176 ;; This function calls:
   177 ;;		_ADC_getval
   178 ;;		_ADC_init
   179 ;;		_Interrupts_init
   180 ;;		_LEDarray_disp_bin
   181 ;;		_LEDarray_init
   182 ;;		_Timer0_init
   183 ;; This function is called by:
   184 ;;		Startup code after reset
   185 ;; This function uses a non-reentrant model
   186 ;;
   187                           
   188                           	psect	text0
   189  00007E                     __ptext0:
   190                           	callstack 0
   191  00007E                     _main:
   192                           	callstack 29
   193  00007E                     
   194                           ;main.c: 18:     LATHbits.LATH3=0;
   195  00007E  9680               	bcf	128,3,c	;volatile
   196                           
   197                           ;main.c: 19:     TRISHbits.TRISH3=0;
   198  000080  9688               	bcf	136,3,c	;volatile
   199                           
   200                           ;main.c: 21:     LATDbits.LATD7=0;
   201  000082  9E7C               	bcf	124,7,c	;volatile
   202                           
   203                           ;main.c: 22:     TRISDbits.TRISD7=0;
   204  000084  9E84               	bcf	132,7,c	;volatile
   205  000086                     
   206                           ;main.c: 25:     LEDarray_init();
   207  000086  EC2E  F001         	call	_LEDarray_init	;wreg free
   208  00008A                     
   209                           ;main.c: 26:     ADC_init();
   210  00008A  EC51  F001         	call	_ADC_init	;wreg free
   211  00008E                     
   212                           ;main.c: 27:     Timer0_init();
   213  00008E  EC41  F001         	call	_Timer0_init	;wreg free
   214                           
   215                           ;main.c: 28:     Interrupts_init();
   216  000092  EC5E  F001         	call	_Interrupts_init	;wreg free
   217  000096                     
   218                           ;main.c: 31:     unsigned int set_brightness=50;
   219  000096  0E00               	movlw	0
   220  000098  6E07               	movwf	(main@set_brightness+1)^0,c
   221  00009A  0E32               	movlw	50
   222  00009C  6E06               	movwf	main@set_brightness^0,c
   223  00009E                     
   224                           ;main.c: 33:     unsigned int secs=0;
   225  00009E  0E00               	movlw	0
   226  0000A0  6E0B               	movwf	(main@secs+1)^0,c
   227  0000A2  0E00               	movlw	0
   228  0000A4  6E0A               	movwf	main@secs^0,c
   229  0000A6                     
   230                           ;main.c: 34:     unsigned int minutes=0;
   231  0000A6  0E00               	movlw	0
   232  0000A8  6E0D               	movwf	(main@minutes+1)^0,c
   233  0000AA  0E00               	movlw	0
   234  0000AC  6E0C               	movwf	main@minutes^0,c
   235  0000AE                     
   236                           ;main.c: 35:     unsigned int hour=0;
   237  0000AE  0E00               	movlw	0
   238  0000B0  6E0F               	movwf	(main@hour+1)^0,c
   239  0000B2  0E00               	movlw	0
   240  0000B4  6E0E               	movwf	main@hour^0,c
   241  0000B6                     l1107:
   242                           
   243                           ;main.c: 37:         light_strength = ADC_getval();
   244  0000B6  EC16  F001         	call	_ADC_getval	;wreg free
   245  0000BA  C002  F008         	movff	?_ADC_getval,main@light_strength
   246  0000BE  C003  F009         	movff	?_ADC_getval+1,main@light_strength+1
   247                           
   248                           ;main.c: 38:         if (light_strength >= set_brightness) {
   249  0000C2  5006               	movf	main@set_brightness^0,w,c
   250  0000C4  5C08               	subwf	main@light_strength^0,w,c
   251  0000C6  5007               	movf	(main@set_brightness+1)^0,w,c
   252  0000C8  5809               	subwfb	(main@light_strength+1)^0,w,c
   253  0000CA  A0D8               	btfss	status,0,c
   254  0000CC  EF6A  F000         	goto	u691
   255  0000D0  EF6C  F000         	goto	u690
   256  0000D4                     u691:
   257  0000D4  EF6F  F000         	goto	l49
   258  0000D8                     u690:
   259  0000D8                     
   260                           ;main.c: 39:             LATHbits.LATH3 = 0;
   261  0000D8  9680               	bcf	128,3,c	;volatile
   262                           
   263                           ;main.c: 40:         }
   264  0000DA  EF70  F000         	goto	l50
   265  0000DE                     l49:
   266                           
   267                           ;main.c: 42:             LATHbits.LATH3 = 1;
   268  0000DE  8680               	bsf	128,3,c	;volatile
   269  0000E0                     l50:
   270                           
   271                           ;main.c: 44:         if (PIR0bits.TMR0IF == 1) {
   272  0000E0  010E               	movlb	14	; () banked
   273  0000E2  AB33               	btfss	51,5,b	;volatile
   274  0000E4  EF76  F000         	goto	u701
   275  0000E8  EF78  F000         	goto	u700
   276  0000EC                     u701:
   277  0000EC  EF7A  F000         	goto	l1113
   278  0000F0                     u700:
   279  0000F0                     
   280                           ; BSR set to: 14
   281                           ;main.c: 45:             secs += 1;
   282  0000F0  4A0A               	infsnz	main@secs^0,f,c
   283  0000F2  2A0B               	incf	(main@secs+1)^0,f,c
   284  0000F4                     l1113:
   285                           
   286                           ; BSR set to: 14
   287                           ;main.c: 47:         if (secs == 60) {
   288  0000F4  0E3C               	movlw	60
   289  0000F6  180A               	xorwf	main@secs^0,w,c
   290  0000F8  100B               	iorwf	(main@secs+1)^0,w,c
   291  0000FA  A4D8               	btfss	status,2,c
   292  0000FC  EF82  F000         	goto	u711
   293  000100  EF84  F000         	goto	u710
   294  000104                     u711:
   295  000104  EF8A  F000         	goto	l1119
   296  000108                     u710:
   297  000108                     
   298                           ; BSR set to: 14
   299                           ;main.c: 48:             minutes += 1;
   300  000108  4A0C               	infsnz	main@minutes^0,f,c
   301  00010A  2A0D               	incf	(main@minutes+1)^0,f,c
   302  00010C                     
   303                           ; BSR set to: 14
   304                           ;main.c: 49:             secs = 0;
   305  00010C  0E00               	movlw	0
   306  00010E  6E0B               	movwf	(main@secs+1)^0,c
   307  000110  0E00               	movlw	0
   308  000112  6E0A               	movwf	main@secs^0,c
   309  000114                     l1119:
   310                           
   311                           ; BSR set to: 14
   312                           ;main.c: 51:         if (minutes == 60) {
   313  000114  0E3C               	movlw	60
   314  000116  180C               	xorwf	main@minutes^0,w,c
   315  000118  100D               	iorwf	(main@minutes+1)^0,w,c
   316  00011A  A4D8               	btfss	status,2,c
   317  00011C  EF92  F000         	goto	u721
   318  000120  EF94  F000         	goto	u720
   319  000124                     u721:
   320  000124  EF9A  F000         	goto	l1125
   321  000128                     u720:
   322  000128                     
   323                           ; BSR set to: 14
   324                           ;main.c: 52:             hour += 1;
   325  000128  4A0E               	infsnz	main@hour^0,f,c
   326  00012A  2A0F               	incf	(main@hour+1)^0,f,c
   327  00012C                     
   328                           ; BSR set to: 14
   329                           ;main.c: 53:             minutes = 0;
   330  00012C  0E00               	movlw	0
   331  00012E  6E0D               	movwf	(main@minutes+1)^0,c
   332  000130  0E00               	movlw	0
   333  000132  6E0C               	movwf	main@minutes^0,c
   334  000134                     l1125:
   335                           
   336                           ; BSR set to: 14
   337                           ;main.c: 55:         if (hour == 24) {
   338  000134  0E18               	movlw	24
   339  000136  180E               	xorwf	main@hour^0,w,c
   340  000138  100F               	iorwf	(main@hour+1)^0,w,c
   341  00013A  A4D8               	btfss	status,2,c
   342  00013C  EFA2  F000         	goto	u731
   343  000140  EFA4  F000         	goto	u730
   344  000144                     u731:
   345  000144  EFA8  F000         	goto	l1129
   346  000148                     u730:
   347  000148                     
   348                           ; BSR set to: 14
   349                           ;main.c: 56:             hour = 0;
   350  000148  0E00               	movlw	0
   351  00014A  6E0F               	movwf	(main@hour+1)^0,c
   352  00014C  0E00               	movlw	0
   353  00014E  6E0E               	movwf	main@hour^0,c
   354  000150                     l1129:
   355                           
   356                           ; BSR set to: 14
   357                           ;main.c: 58:         LEDarray_disp_bin(hour);
   358  000150  C00E  F002         	movff	main@hour,LEDarray_disp_bin@number
   359  000154  C00F  F003         	movff	main@hour+1,LEDarray_disp_bin@number+1
   360  000158  ECB2  F000         	call	_LEDarray_disp_bin	;wreg free
   361  00015C  EF5B  F000         	goto	l1107
   362  000160  EF3D  F000         	goto	start
   363  000164                     __end_of_main:
   364                           	callstack 0
   365                           
   366 ;; *************** function _Timer0_init *****************
   367 ;; Defined at:
   368 ;;		line 7 in file "timers.c"
   369 ;; Parameters:    Size  Location     Type
   370 ;;		None
   371 ;; Auto vars:     Size  Location     Type
   372 ;;		None
   373 ;; Return value:  Size  Location     Type
   374 ;;                  1    wreg      void 
   375 ;; Registers used:
   376 ;;		wreg, status,2
   377 ;; Tracked objects:
   378 ;;		On entry : 0/0
   379 ;;		On exit  : 0/0
   380 ;;		Unchanged: 0/0
   381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   386 ;;Total ram usage:        0 bytes
   387 ;; Hardware stack levels used: 1
   388 ;; Hardware stack levels required when called: 1
   389 ;; This function calls:
   390 ;;		Nothing
   391 ;; This function is called by:
   392 ;;		_main
   393 ;; This function uses a non-reentrant model
   394 ;;
   395                           
   396                           	psect	text1
   397  000282                     __ptext1:
   398                           	callstack 0
   399  000282                     _Timer0_init:
   400                           	callstack 29
   401  000282                     
   402                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
   403  000282  50D6               	movf	214,w,c	;volatile
   404  000284  0B1F               	andlw	-225
   405  000286  0940               	iorlw	64
   406  000288  6ED6               	movwf	214,c	;volatile
   407  00028A                     
   408                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
   409  00028A  88D6               	bsf	214,4,c	;volatile
   410                           
   411                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1000;
   412  00028C  50D6               	movf	214,w,c	;volatile
   413  00028E  0BF0               	andlw	-16
   414  000290  0908               	iorlw	8
   415  000292  6ED6               	movwf	214,c	;volatile
   416  000294                     
   417                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
   418  000294  88D5               	bsf	213,4,c	;volatile
   419                           
   420                           ;timers.c: 16:     TMR0H=62500;
   421  000296  0E24               	movlw	36
   422  000298  6ED4               	movwf	212,c	;volatile
   423                           
   424                           ;timers.c: 17:     TMR0L=0;
   425  00029A  0E00               	movlw	0
   426  00029C  6ED3               	movwf	211,c	;volatile
   427  00029E                     
   428                           ;timers.c: 18:     T0CON0bits.T0EN=1;
   429  00029E  8ED5               	bsf	213,7,c	;volatile
   430  0002A0  0012               	return		;funcret
   431  0002A2                     __end_of_Timer0_init:
   432                           	callstack 0
   433                           
   434 ;; *************** function _LEDarray_init *****************
   435 ;; Defined at:
   436 ;;		line 8 in file "LEDarray.c"
   437 ;; Parameters:    Size  Location     Type
   438 ;;		None
   439 ;; Auto vars:     Size  Location     Type
   440 ;;		None
   441 ;; Return value:  Size  Location     Type
   442 ;;                  1    wreg      void 
   443 ;; Registers used:
   444 ;;		None
   445 ;; Tracked objects:
   446 ;;		On entry : 0/0
   447 ;;		On exit  : 0/0
   448 ;;		Unchanged: 0/0
   449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   454 ;;Total ram usage:        0 bytes
   455 ;; Hardware stack levels used: 1
   456 ;; Hardware stack levels required when called: 1
   457 ;; This function calls:
   458 ;;		Nothing
   459 ;; This function is called by:
   460 ;;		_main
   461 ;; This function uses a non-reentrant model
   462 ;;
   463                           
   464                           	psect	text2
   465  00025C                     __ptext2:
   466                           	callstack 0
   467  00025C                     _LEDarray_init:
   468                           	callstack 29
   469  00025C                     
   470                           ;LEDarray.c: 13:     LATGbits.LATG0=0;
   471  00025C  907F               	bcf	127,0,c	;volatile
   472                           
   473                           ;LEDarray.c: 14:     TRISGbits.TRISG0=0;
   474  00025E  9087               	bcf	135,0,c	;volatile
   475                           
   476                           ;LEDarray.c: 16:     LATGbits.LATG1=0;
   477  000260  927F               	bcf	127,1,c	;volatile
   478                           
   479                           ;LEDarray.c: 17:     TRISGbits.TRISG1=0;
   480  000262  9287               	bcf	135,1,c	;volatile
   481                           
   482                           ;LEDarray.c: 19:     LATAbits.LATA2=0;
   483  000264  9479               	bcf	121,2,c	;volatile
   484                           
   485                           ;LEDarray.c: 20:     TRISAbits.TRISA2=0;
   486  000266  9481               	bcf	129,2,c	;volatile
   487                           
   488                           ;LEDarray.c: 22:     LATFbits.LATF6=0;
   489  000268  9C7E               	bcf	126,6,c	;volatile
   490                           
   491                           ;LEDarray.c: 23:     TRISFbits.TRISF6=0;
   492  00026A  9C86               	bcf	134,6,c	;volatile
   493                           
   494                           ;LEDarray.c: 25:     LATAbits.LATA4=0;
   495  00026C  9879               	bcf	121,4,c	;volatile
   496                           
   497                           ;LEDarray.c: 26:     TRISAbits.TRISA4=0;
   498  00026E  9881               	bcf	129,4,c	;volatile
   499                           
   500                           ;LEDarray.c: 28:     LATAbits.LATA5=0;
   501  000270  9A79               	bcf	121,5,c	;volatile
   502                           
   503                           ;LEDarray.c: 29:     TRISAbits.TRISA5=0;
   504  000272  9A81               	bcf	129,5,c	;volatile
   505                           
   506                           ;LEDarray.c: 31:     LATFbits.LATF0=0;
   507  000274  907E               	bcf	126,0,c	;volatile
   508                           
   509                           ;LEDarray.c: 32:     TRISFbits.TRISF0=0;
   510  000276  9086               	bcf	134,0,c	;volatile
   511                           
   512                           ;LEDarray.c: 34:     LATBbits.LATB0=0;
   513  000278  907A               	bcf	122,0,c	;volatile
   514                           
   515                           ;LEDarray.c: 35:     TRISBbits.TRISB0=0;
   516  00027A  9082               	bcf	130,0,c	;volatile
   517                           
   518                           ;LEDarray.c: 37:     LATBbits.LATB1=0;
   519  00027C  927A               	bcf	122,1,c	;volatile
   520                           
   521                           ;LEDarray.c: 38:     TRISBbits.TRISB1=0;
   522  00027E  9282               	bcf	130,1,c	;volatile
   523  000280  0012               	return		;funcret
   524  000282                     __end_of_LEDarray_init:
   525                           	callstack 0
   526                           
   527 ;; *************** function _LEDarray_disp_bin *****************
   528 ;; Defined at:
   529 ;;		line 45 in file "LEDarray.c"
   530 ;; Parameters:    Size  Location     Type
   531 ;;  number          2    1[COMRAM] unsigned int 
   532 ;; Auto vars:     Size  Location     Type
   533 ;;		None
   534 ;; Return value:  Size  Location     Type
   535 ;;                  1    wreg      void 
   536 ;; Registers used:
   537 ;;		None
   538 ;; Tracked objects:
   539 ;;		On entry : 0/0
   540 ;;		On exit  : 0/0
   541 ;;		Unchanged: 0/0
   542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   543 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   546 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   547 ;;Total ram usage:        2 bytes
   548 ;; Hardware stack levels used: 1
   549 ;; Hardware stack levels required when called: 1
   550 ;; This function calls:
   551 ;;		Nothing
   552 ;; This function is called by:
   553 ;;		_main
   554 ;;		_LEDarray_disp_dec
   555 ;;		_LEDarray_disp_PPM
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559                           	psect	text3
   560  000164                     __ptext3:
   561                           	callstack 0
   562  000164                     _LEDarray_disp_bin:
   563                           	callstack 29
   564  000164                     
   565                           ;LEDarray.c: 45: void LEDarray_disp_bin(unsigned int number);LEDarray.c: 46: {;LEDarray.
      +                          c: 50:     if (number & 0b000000001) { LATGbits.LATG0=1;} else { LATGbits.LATG0=0;}
   566  000164  A002               	btfss	LEDarray_disp_bin@number^0,0,c
   567  000166  EFB7  F000         	goto	u601
   568  00016A  EFB9  F000         	goto	u600
   569  00016E                     u601:
   570  00016E  EFBC  F000         	goto	l81
   571  000172                     u600:
   572  000172  807F               	bsf	127,0,c	;volatile
   573  000174  EFBD  F000         	goto	l82
   574  000178                     l81:
   575  000178  907F               	bcf	127,0,c	;volatile
   576  00017A                     l82:
   577                           
   578                           ;LEDarray.c: 51:     if (number & 0b000000010) { LATGbits.LATG1=1;} else { LATGbits.LATG
      +                          1=0;}
   579  00017A  A202               	btfss	LEDarray_disp_bin@number^0,1,c
   580  00017C  EFC2  F000         	goto	u611
   581  000180  EFC4  F000         	goto	u610
   582  000184                     u611:
   583  000184  EFC7  F000         	goto	l83
   584  000188                     u610:
   585  000188  827F               	bsf	127,1,c	;volatile
   586  00018A  EFC8  F000         	goto	l84
   587  00018E                     l83:
   588  00018E  927F               	bcf	127,1,c	;volatile
   589  000190                     l84:
   590                           
   591                           ;LEDarray.c: 52:     if (number & 0b000000100) { LATAbits.LATA2=1;} else { LATAbits.LATA
      +                          2=0;}
   592  000190  A402               	btfss	LEDarray_disp_bin@number^0,2,c
   593  000192  EFCD  F000         	goto	u621
   594  000196  EFCF  F000         	goto	u620
   595  00019A                     u621:
   596  00019A  EFD2  F000         	goto	l85
   597  00019E                     u620:
   598  00019E  8479               	bsf	121,2,c	;volatile
   599  0001A0  EFD3  F000         	goto	l86
   600  0001A4                     l85:
   601  0001A4  9479               	bcf	121,2,c	;volatile
   602  0001A6                     l86:
   603                           
   604                           ;LEDarray.c: 53:     if (number & 0b000001000) { LATFbits.LATF6=1;} else { LATFbits.LATF
      +                          6=0;}
   605  0001A6  A602               	btfss	LEDarray_disp_bin@number^0,3,c
   606  0001A8  EFD8  F000         	goto	u631
   607  0001AC  EFDA  F000         	goto	u630
   608  0001B0                     u631:
   609  0001B0  EFDD  F000         	goto	l87
   610  0001B4                     u630:
   611  0001B4  8C7E               	bsf	126,6,c	;volatile
   612  0001B6  EFDE  F000         	goto	l88
   613  0001BA                     l87:
   614  0001BA  9C7E               	bcf	126,6,c	;volatile
   615  0001BC                     l88:
   616                           
   617                           ;LEDarray.c: 54:     if (number & 0b000010000) { LATAbits.LATA4=1;} else { LATAbits.LATA
      +                          4=0;}
   618  0001BC  A802               	btfss	LEDarray_disp_bin@number^0,4,c
   619  0001BE  EFE3  F000         	goto	u641
   620  0001C2  EFE5  F000         	goto	u640
   621  0001C6                     u641:
   622  0001C6  EFE8  F000         	goto	l89
   623  0001CA                     u640:
   624  0001CA  8879               	bsf	121,4,c	;volatile
   625  0001CC  EFE9  F000         	goto	l90
   626  0001D0                     l89:
   627  0001D0  9879               	bcf	121,4,c	;volatile
   628  0001D2                     l90:
   629                           
   630                           ;LEDarray.c: 55:     if (number & 0b000100000) { LATAbits.LATA5=1;} else { LATAbits.LATA
      +                          5=0;}
   631  0001D2  AA02               	btfss	LEDarray_disp_bin@number^0,5,c
   632  0001D4  EFEE  F000         	goto	u651
   633  0001D8  EFF0  F000         	goto	u650
   634  0001DC                     u651:
   635  0001DC  EFF3  F000         	goto	l91
   636  0001E0                     u650:
   637  0001E0  8A79               	bsf	121,5,c	;volatile
   638  0001E2  EFF4  F000         	goto	l92
   639  0001E6                     l91:
   640  0001E6  9A79               	bcf	121,5,c	;volatile
   641  0001E8                     l92:
   642                           
   643                           ;LEDarray.c: 56:     if (number & 0b001000000) { LATFbits.LATF0=1;} else { LATFbits.LATF
      +                          0=0;}
   644  0001E8  AC02               	btfss	LEDarray_disp_bin@number^0,6,c
   645  0001EA  EFF9  F000         	goto	u661
   646  0001EE  EFFB  F000         	goto	u660
   647  0001F2                     u661:
   648  0001F2  EFFE  F000         	goto	l93
   649  0001F6                     u660:
   650  0001F6  807E               	bsf	126,0,c	;volatile
   651  0001F8  EFFF  F000         	goto	l94
   652  0001FC                     l93:
   653  0001FC  907E               	bcf	126,0,c	;volatile
   654  0001FE                     l94:
   655                           
   656                           ;LEDarray.c: 57:     if (number & 0b010000000) { LATBbits.LATB0=1;} else { LATBbits.LATB
      +                          0=0;}
   657  0001FE  AE02               	btfss	LEDarray_disp_bin@number^0,7,c
   658  000200  EF04  F001         	goto	u671
   659  000204  EF06  F001         	goto	u670
   660  000208                     u671:
   661  000208  EF09  F001         	goto	l95
   662  00020C                     u670:
   663  00020C  807A               	bsf	122,0,c	;volatile
   664  00020E  EF0A  F001         	goto	l96
   665  000212                     l95:
   666  000212  907A               	bcf	122,0,c	;volatile
   667  000214                     l96:
   668                           
   669                           ;LEDarray.c: 58:     if (number & 0b100000000) { LATBbits.LATB1=1;} else { LATBbits.LATB
      +                          1=0;}
   670  000214  A003               	btfss	(LEDarray_disp_bin@number+1)^0,0,c
   671  000216  EF0F  F001         	goto	u681
   672  00021A  EF11  F001         	goto	u680
   673  00021E                     u681:
   674  00021E  EF14  F001         	goto	l97
   675  000222                     u680:
   676  000222  827A               	bsf	122,1,c	;volatile
   677  000224  EF15  F001         	goto	l99
   678  000228                     l97:
   679  000228  927A               	bcf	122,1,c	;volatile
   680  00022A                     l99:
   681  00022A  0012               	return		;funcret
   682  00022C                     __end_of_LEDarray_disp_bin:
   683                           	callstack 0
   684                           
   685 ;; *************** function _Interrupts_init *****************
   686 ;; Defined at:
   687 ;;		line 10 in file "interrupts.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;		None
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      void 
   694 ;; Registers used:
   695 ;;		None
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   705 ;;Total ram usage:        0 bytes
   706 ;; Hardware stack levels used: 1
   707 ;; Hardware stack levels required when called: 1
   708 ;; This function calls:
   709 ;;		Nothing
   710 ;; This function is called by:
   711 ;;		_main
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           	psect	text4
   716  0002BC                     __ptext4:
   717                           	callstack 0
   718  0002BC                     _Interrupts_init:
   719                           	callstack 29
   720  0002BC                     
   721                           ;interrupts.c: 14:     INTCONbits.PEIE=1;
   722  0002BC  8CF2               	bsf	242,6,c	;volatile
   723                           
   724                           ;interrupts.c: 15:     PIE0bits.TMR0IE=1;
   725  0002BE  010E               	movlb	14	; () banked
   726  0002C0  8B29               	bsf	41,5,b	;volatile
   727                           
   728                           ;interrupts.c: 16:     PIE2bits.C1IE=1;
   729  0002C2  812B               	bsf	43,0,b	;volatile
   730                           
   731                           ;interrupts.c: 17:     INTCONbits.GIE=1;
   732  0002C4  8EF2               	bsf	242,7,c	;volatile
   733  0002C6                     
   734                           ; BSR set to: 14
   735  0002C6  0012               	return		;funcret
   736  0002C8                     __end_of_Interrupts_init:
   737                           	callstack 0
   738                           
   739 ;; *************** function _ADC_init *****************
   740 ;; Defined at:
   741 ;;		line 9 in file "ADC.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;		None
   744 ;; Auto vars:     Size  Location     Type
   745 ;;		None
   746 ;; Return value:  Size  Location     Type
   747 ;;                  1    wreg      void 
   748 ;; Registers used:
   749 ;;		wreg, status,2
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   759 ;;Total ram usage:        0 bytes
   760 ;; Hardware stack levels used: 1
   761 ;; Hardware stack levels required when called: 1
   762 ;; This function calls:
   763 ;;		Nothing
   764 ;; This function is called by:
   765 ;;		_main
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769                           	psect	text5
   770  0002A2                     __ptext5:
   771                           	callstack 0
   772  0002A2                     _ADC_init:
   773                           	callstack 29
   774  0002A2                     
   775                           ;ADC.c: 11:     TRISAbits.TRISA3=1;
   776  0002A2  8681               	bsf	129,3,c	;volatile
   777                           
   778                           ;ADC.c: 12:     ANSELAbits.ANSELA3=1;
   779  0002A4  010E               	movlb	14	; () banked
   780  0002A6  8792               	bsf	146,3,b	;volatile
   781                           
   782                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
   783  0002A8  010F               	movlb	15	; () banked
   784  0002AA  9958               	bcf	88,4,b	;volatile
   785  0002AC                     
   786                           ; BSR set to: 15
   787                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
   788  0002AC  0EFC               	movlw	-4
   789  0002AE  1758               	andwf	88,f,b	;volatile
   790                           
   791                           ;ADC.c: 17:     ADPCH=0b11;
   792  0002B0  0E03               	movlw	3
   793  0002B2  6F5F               	movwf	95,b	;volatile
   794  0002B4                     
   795                           ; BSR set to: 15
   796                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
   797  0002B4  9460               	bcf	96,2,c	;volatile
   798  0002B6                     
   799                           ; BSR set to: 15
   800                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
   801  0002B6  8860               	bsf	96,4,c	;volatile
   802  0002B8                     
   803                           ; BSR set to: 15
   804                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
   805  0002B8  8E60               	bsf	96,7,c	;volatile
   806  0002BA                     
   807                           ; BSR set to: 15
   808  0002BA  0012               	return		;funcret
   809  0002BC                     __end_of_ADC_init:
   810                           	callstack 0
   811                           
   812 ;; *************** function _ADC_getval *****************
   813 ;; Defined at:
   814 ;;		line 23 in file "ADC.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;		None
   817 ;; Auto vars:     Size  Location     Type
   818 ;;  tmpval          2    3[COMRAM] unsigned int 
   819 ;; Return value:  Size  Location     Type
   820 ;;                  2    1[COMRAM] unsigned int 
   821 ;; Registers used:
   822 ;;		wreg, status,2, status,0
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   828 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   829 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   831 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   832 ;;Total ram usage:        4 bytes
   833 ;; Hardware stack levels used: 1
   834 ;; Hardware stack levels required when called: 1
   835 ;; This function calls:
   836 ;;		Nothing
   837 ;; This function is called by:
   838 ;;		_main
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842                           	psect	text6
   843  00022C                     __ptext6:
   844                           	callstack 0
   845  00022C                     _ADC_getval:
   846                           	callstack 29
   847  00022C                     
   848                           ;ADC.c: 25:     unsigned int tmpval;;ADC.c: 27:     ADCON0bits.GO = 1;
   849  00022C  8060               	bsf	96,0,c	;volatile
   850  00022E                     l18:
   851  00022E  B060               	btfsc	96,0,c	;volatile
   852  000230  EF1C  F001         	goto	u591
   853  000234  EF1E  F001         	goto	u590
   854  000238                     u591:
   855  000238  EF17  F001         	goto	l18
   856  00023C                     u590:
   857  00023C                     
   858                           ;ADC.c: 31:     tmpval = ADRESH;
   859  00023C  CF64 F004          	movff	3940,ADC_getval@tmpval	;volatile
   860  000240  6A05               	clrf	(ADC_getval@tmpval+1)^0,c
   861  000242                     
   862                           ;ADC.c: 35:     tmpval = 255 - tmpval;
   863  000242  5004               	movf	ADC_getval@tmpval^0,w,c
   864  000244  08FF               	sublw	255
   865  000246  6E04               	movwf	ADC_getval@tmpval^0,c
   866  000248  5005               	movf	(ADC_getval@tmpval+1)^0,w,c
   867  00024A  A0D8               	btfss	status,0,c
   868  00024C  2AE8               	incf	wreg,f,c
   869  00024E  0800               	sublw	0
   870  000250  6E05               	movwf	(ADC_getval@tmpval+1)^0,c
   871  000252                     
   872                           ;ADC.c: 37:     return tmpval;
   873  000252  C004  F002         	movff	ADC_getval@tmpval,?_ADC_getval
   874  000256  C005  F003         	movff	ADC_getval@tmpval+1,?_ADC_getval+1
   875  00025A  0012               	return		;funcret
   876  00025C                     __end_of_ADC_getval:
   877                           	callstack 0
   878                           
   879 ;; *************** function _HighISR *****************
   880 ;; Defined at:
   881 ;;		line 24 in file "interrupts.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;		None
   884 ;; Auto vars:     Size  Location     Type
   885 ;;		None
   886 ;; Return value:  Size  Location     Type
   887 ;;                  1    wreg      void 
   888 ;; Registers used:
   889 ;;		wreg, status,2, status,0
   890 ;; Tracked objects:
   891 ;;		On entry : 0/0
   892 ;;		On exit  : 0/0
   893 ;;		Unchanged: 0/0
   894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   897 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   898 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   899 ;;Total ram usage:        1 bytes
   900 ;; Hardware stack levels used: 1
   901 ;; This function calls:
   902 ;;		Nothing
   903 ;; This function is called by:
   904 ;;		Interrupt level 2
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908                           	psect	intcode
   909  000008                     __pintcode:
   910                           	callstack 0
   911  000008                     _HighISR:
   912                           	callstack 29
   913                           
   914                           ;incstack = 0
   915  000008  8210               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   916  00000A                     
   917                           ;interrupts.c: 26:     if (PIR2bits.C1IF == 1){
   918  00000A  010E               	movlb	14	; () banked
   919  00000C  A135               	btfss	53,0,b	;volatile
   920  00000E  EF0B  F000         	goto	i2u53_41
   921  000012  EF0D  F000         	goto	i2u53_40
   922  000016                     i2u53_41:
   923  000016  EF21  F000         	goto	i2l1053
   924  00001A                     i2u53_40:
   925  00001A                     
   926                           ; BSR set to: 14
   927                           ;interrupts.c: 27:         LATHbits.LATH3 = !LATHbits.LATH3;
   928  00001A  A680               	btfss	128,3,c	;volatile
   929  00001C  EF12  F000         	goto	i2u54_41
   930  000020  EF16  F000         	goto	i2u54_40
   931  000024                     i2u54_41:
   932  000024  6A01               	clrf	??_HighISR^0,c
   933  000026  2A01               	incf	??_HighISR^0,f,c
   934  000028  EF17  F000         	goto	i2u55_48
   935  00002C                     i2u54_40:
   936  00002C  6A01               	clrf	??_HighISR^0,c
   937  00002E                     i2u55_48:
   938  00002E  4601               	rlncf	??_HighISR^0,f,c
   939  000030  4601               	rlncf	??_HighISR^0,f,c
   940  000032  4601               	rlncf	??_HighISR^0,f,c
   941  000034  5080               	movf	128,w,c	;volatile
   942  000036  1801               	xorwf	??_HighISR^0,w,c
   943  000038  0BF7               	andlw	-9
   944  00003A  1801               	xorwf	??_HighISR^0,w,c
   945  00003C  6E80               	movwf	128,c	;volatile
   946  00003E                     
   947                           ;interrupts.c: 28:         PIR2bits.C1IF=0;
   948  00003E  010E               	movlb	14	; () banked
   949  000040  9135               	bcf	53,0,b	;volatile
   950  000042                     i2l1053:
   951                           
   952                           ; BSR set to: 14
   953                           ;interrupts.c: 31:     if (PIR0bits.TMR0IF == 1){
   954  000042  AB33               	btfss	51,5,b	;volatile
   955  000044  EF26  F000         	goto	i2u56_41
   956  000048  EF28  F000         	goto	i2u56_40
   957  00004C                     i2u56_41:
   958  00004C  EF3B  F000         	goto	i2l175
   959  000050                     i2u56_40:
   960  000050                     
   961                           ; BSR set to: 14
   962                           ;interrupts.c: 32:         LATDbits.LATD7 = !LATDbits.LATD7;
   963  000050  AE7C               	btfss	124,7,c	;volatile
   964  000052  EF2D  F000         	goto	i2u57_41
   965  000056  EF31  F000         	goto	i2u57_40
   966  00005A                     i2u57_41:
   967  00005A  6A01               	clrf	??_HighISR^0,c
   968  00005C  2A01               	incf	??_HighISR^0,f,c
   969  00005E  EF32  F000         	goto	i2u58_48
   970  000062                     i2u57_40:
   971  000062  6A01               	clrf	??_HighISR^0,c
   972  000064                     i2u58_48:
   973  000064  3201               	rrcf	??_HighISR^0,f,c
   974  000066  3201               	rrcf	??_HighISR^0,f,c
   975  000068  507C               	movf	124,w,c	;volatile
   976  00006A  1801               	xorwf	??_HighISR^0,w,c
   977  00006C  0B7F               	andlw	-129
   978  00006E  1801               	xorwf	??_HighISR^0,w,c
   979  000070  6E7C               	movwf	124,c	;volatile
   980  000072                     
   981                           ;interrupts.c: 34:         PIR0bits.TMR0IF=0;
   982  000072  010E               	movlb	14	; () banked
   983  000074  9B33               	bcf	51,5,b	;volatile
   984  000076                     i2l175:
   985                           
   986                           ; BSR set to: 14
   987  000076  9210               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   988  000078  0011               	retfie		f
   989  00007A                     __end_of_HighISR:
   990                           	callstack 0
   991  0000                     
   992                           	psect	rparam
   993  0000                     
   994                           	psect	temp
   995  000010                     btemp:
   996                           	callstack 0
   997  000010                     	ds	1
   998  0000                     int$flags	set	btemp
   999  0000                     wtemp8	set	btemp+1
  1000  0000                     ttemp5	set	btemp+1
  1001  0000                     ttemp6	set	btemp+4
  1002  0000                     ttemp7	set	btemp+8
  1003                           
  1004                           	psect	idloc
  1005                           
  1006                           ;Config register IDLOC0 @ 0x200000
  1007                           ;	unspecified, using default values
  1008  200000                     	org	2097152
  1009  200000  0FFF               	dw	4095
  1010                           
  1011                           ;Config register IDLOC1 @ 0x200002
  1012                           ;	unspecified, using default values
  1013  200002                     	org	2097154
  1014  200002  0FFF               	dw	4095
  1015                           
  1016                           ;Config register IDLOC2 @ 0x200004
  1017                           ;	unspecified, using default values
  1018  200004                     	org	2097156
  1019  200004  0FFF               	dw	4095
  1020                           
  1021                           ;Config register IDLOC3 @ 0x200006
  1022                           ;	unspecified, using default values
  1023  200006                     	org	2097158
  1024  200006  0FFF               	dw	4095
  1025                           
  1026                           ;Config register IDLOC4 @ 0x200008
  1027                           ;	unspecified, using default values
  1028  200008                     	org	2097160
  1029  200008  0FFF               	dw	4095
  1030                           
  1031                           ;Config register IDLOC5 @ 0x20000A
  1032                           ;	unspecified, using default values
  1033  20000A                     	org	2097162
  1034  20000A  0FFF               	dw	4095
  1035                           
  1036                           ;Config register IDLOC6 @ 0x20000C
  1037                           ;	unspecified, using default values
  1038  20000C                     	org	2097164
  1039  20000C  0FFF               	dw	4095
  1040                           
  1041                           ;Config register IDLOC7 @ 0x20000E
  1042                           ;	unspecified, using default values
  1043  20000E                     	org	2097166
  1044  20000E  0FFF               	dw	4095
  1045                           
  1046                           	psect	config
  1047                           
  1048                           ;Config register CONFIG1L @ 0x300000
  1049                           ;	External Oscillator mode Selection bits
  1050                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  1051                           ;	Power-up default value for COSC bits
  1052                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  1053  300000                     	org	3145728
  1054  300000  AA                 	db	170
  1055                           
  1056                           ;Config register CONFIG1H @ 0x300001
  1057                           ;	unspecified, using default values
  1058                           ;	Clock Out Enable bit
  1059                           ;	CLKOUTEN = 0x1, unprogrammed default
  1060                           ;	Clock Switch Enable bit
  1061                           ;	CSWEN = 0x1, unprogrammed default
  1062                           ;	Fail-Safe Clock Monitor Enable bit
  1063                           ;	FCMEN = 0x1, unprogrammed default
  1064  300001                     	org	3145729
  1065  300001  FF                 	db	255
  1066                           
  1067                           ;Config register CONFIG2L @ 0x300002
  1068                           ;	unspecified, using default values
  1069                           ;	Master Clear Enable bit
  1070                           ;	MCLRE = 0x1, unprogrammed default
  1071                           ;	Power-up Timer Enable bit
  1072                           ;	PWRTE = 0x1, unprogrammed default
  1073                           ;	Low-power BOR enable bit
  1074                           ;	LPBOREN = 0x1, unprogrammed default
  1075                           ;	Brown-out Reset Enable bits
  1076                           ;	BOREN = 0x3, unprogrammed default
  1077  300002                     	org	3145730
  1078  300002  FF                 	db	255
  1079                           
  1080                           ;Config register CONFIG2H @ 0x300003
  1081                           ;	unspecified, using default values
  1082                           ;	Brown Out Reset Voltage selection bits
  1083                           ;	BORV = 0x3, unprogrammed default
  1084                           ;	ZCD Disable bit
  1085                           ;	ZCD = 0x1, unprogrammed default
  1086                           ;	PPSLOCK bit One-Way Set Enable bit
  1087                           ;	PPS1WAY = 0x1, unprogrammed default
  1088                           ;	Stack Full/Underflow Reset Enable bit
  1089                           ;	STVREN = 0x1, unprogrammed default
  1090                           ;	Debugger Enable bit
  1091                           ;	DEBUG = 0x1, unprogrammed default
  1092                           ;	Extended Instruction Set Enable bit
  1093                           ;	XINST = 0x1, unprogrammed default
  1094  300003                     	org	3145731
  1095  300003  FF                 	db	255
  1096                           
  1097                           ;Config register CONFIG3L @ 0x300004
  1098                           ;	WDT Period Select bits
  1099                           ;	WDTCPS = 0x1F, unprogrammed default
  1100                           ;	WDT operating mode
  1101                           ;	WDTE = OFF, WDT Disabled
  1102  300004                     	org	3145732
  1103  300004  9F                 	db	159
  1104                           
  1105                           ;Config register CONFIG3H @ 0x300005
  1106                           ;	unspecified, using default values
  1107                           ;	WDT Window Select bits
  1108                           ;	WDTCWS = 0x7, unprogrammed default
  1109                           ;	WDT input clock selector
  1110                           ;	WDTCCS = 0x7, unprogrammed default
  1111  300005                     	org	3145733
  1112  300005  FF                 	db	255
  1113                           
  1114                           ;Config register CONFIG4L @ 0x300006
  1115                           ;	unspecified, using default values
  1116                           ;	Write Protection Block 0
  1117                           ;	WRT0 = 0x1, unprogrammed default
  1118                           ;	Write Protection Block 1
  1119                           ;	WRT1 = 0x1, unprogrammed default
  1120                           ;	Write Protection Block 2
  1121                           ;	WRT2 = 0x1, unprogrammed default
  1122                           ;	Write Protection Block 3
  1123                           ;	WRT3 = 0x1, unprogrammed default
  1124                           ;	Write Protection Block 3
  1125                           ;	WRT4 = 0x1, unprogrammed default
  1126                           ;	Write Protection Block 3
  1127                           ;	WRT5 = 0x1, unprogrammed default
  1128                           ;	Write Protection Block 3
  1129                           ;	WRT6 = 0x1, unprogrammed default
  1130                           ;	Write Protection Block 3
  1131                           ;	WRT7 = 0x1, unprogrammed default
  1132  300006                     	org	3145734
  1133  300006  FF                 	db	255
  1134                           
  1135                           ;Config register CONFIG4H @ 0x300007
  1136                           ;	unspecified, using default values
  1137                           ;	Configuration Register Write Protection bit
  1138                           ;	WRTC = 0x1, unprogrammed default
  1139                           ;	Boot Block Write Protection bit
  1140                           ;	WRTB = 0x1, unprogrammed default
  1141                           ;	Data EEPROM Write Protection bit
  1142                           ;	WRTD = 0x1, unprogrammed default
  1143                           ;	Scanner Enable bit
  1144                           ;	SCANE = 0x1, unprogrammed default
  1145                           ;	Low Voltage Programming Enable bit
  1146                           ;	LVP = 0x1, unprogrammed default
  1147  300007                     	org	3145735
  1148  300007  FF                 	db	255
  1149                           
  1150                           ;Config register CONFIG5L @ 0x300008
  1151                           ;	unspecified, using default values
  1152                           ;	UserNVM Program Memory Code Protection bit
  1153                           ;	CP = 0x1, unprogrammed default
  1154                           ;	DataNVM Memory Code Protection bit
  1155                           ;	CPD = 0x1, unprogrammed default
  1156  300008                     	org	3145736
  1157  300008  FF                 	db	255
  1158                           
  1159                           ;Config register CONFIG5H @ 0x300009
  1160                           ;	unspecified, using default values
  1161  300009                     	org	3145737
  1162  300009  FF                 	db	255
  1163                           
  1164                           ;Config register CONFIG6L @ 0x30000A
  1165                           ;	unspecified, using default values
  1166                           ;	Table Read Protection Block 0
  1167                           ;	EBTR0 = 0x1, unprogrammed default
  1168                           ;	Table Read Protection Block 1
  1169                           ;	EBTR1 = 0x1, unprogrammed default
  1170                           ;	Table Read Protection Block 2
  1171                           ;	EBTR2 = 0x1, unprogrammed default
  1172                           ;	Table Read Protection Block 3
  1173                           ;	EBTR3 = 0x1, unprogrammed default
  1174                           ;	Table Read Protection Block 4
  1175                           ;	EBTR4 = 0x1, unprogrammed default
  1176                           ;	Table Read Protection Block 5
  1177                           ;	EBTR5 = 0x1, unprogrammed default
  1178                           ;	Table Read Protection Block 6
  1179                           ;	EBTR6 = 0x1, unprogrammed default
  1180                           ;	Table Read Protection Block 7
  1181                           ;	EBTR7 = 0x1, unprogrammed default
  1182  30000A                     	org	3145738
  1183  30000A  FF                 	db	255
  1184                           
  1185                           ;Config register CONFIG6H @ 0x30000B
  1186                           ;	unspecified, using default values
  1187                           ;	Boot Block Table Read Protection bit
  1188                           ;	EBTRB = 0x1, unprogrammed default
  1189  30000B                     	org	3145739
  1190  30000B  FF                 	db	255
  1191                           tosu	equ	0xFFF
  1192                           tosh	equ	0xFFE
  1193                           tosl	equ	0xFFD
  1194                           stkptr	equ	0xFFC
  1195                           pclatu	equ	0xFFB
  1196                           pclath	equ	0xFFA
  1197                           pcl	equ	0xFF9
  1198                           tblptru	equ	0xFF8
  1199                           tblptrh	equ	0xFF7
  1200                           tblptrl	equ	0xFF6
  1201                           tablat	equ	0xFF5
  1202                           prodh	equ	0xFF4
  1203                           prodl	equ	0xFF3
  1204                           indf0	equ	0xFEF
  1205                           postinc0	equ	0xFEE
  1206                           postdec0	equ	0xFED
  1207                           preinc0	equ	0xFEC
  1208                           plusw0	equ	0xFEB
  1209                           fsr0h	equ	0xFEA
  1210                           fsr0l	equ	0xFE9
  1211                           wreg	equ	0xFE8
  1212                           indf1	equ	0xFE7
  1213                           postinc1	equ	0xFE6
  1214                           postdec1	equ	0xFE5
  1215                           preinc1	equ	0xFE4
  1216                           plusw1	equ	0xFE3
  1217                           fsr1h	equ	0xFE2
  1218                           fsr1l	equ	0xFE1
  1219                           bsr	equ	0xFE0
  1220                           indf2	equ	0xFDF
  1221                           postinc2	equ	0xFDE
  1222                           postdec2	equ	0xFDD
  1223                           preinc2	equ	0xFDC
  1224                           plusw2	equ	0xFDB
  1225                           fsr2h	equ	0xFDA
  1226                           fsr2l	equ	0xFD9
  1227                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     15      15
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_ADC_getval

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0     693
                                              5 COMRAM    10    10      0
                         _ADC_getval
                           _ADC_init
                    _Interrupts_init
                  _LEDarray_disp_bin
                      _LEDarray_init
                        _Timer0_init
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     502
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_getval                                           4     2      2      46
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _HighISR                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_getval
   _ADC_init
   _Interrupts_init
   _LEDarray_disp_bin
   _LEDarray_init
   _Timer0_init

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      F       F       1       16.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BIGRAM             DE9      0       0      33        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Nov 01 21:15:01 2021

                        l20 023C                          l21 025A                          l15 02BA  
                        l18 022E                          l50 00E0                          l81 0178  
                        l49 00DE                          l90 01D2                          l82 017A  
                        l91 01E6                          l83 018E                          l92 01E8  
                        l84 0190                          l93 01FC                          l85 01A4  
                        l94 01FE                          l86 01A6                          l78 0280  
                        l95 0212                          l87 01BA                          l96 0214  
                        l88 01BC                          l97 0228                          l89 01D0  
                        l99 022A           ??_Interrupts_init 0002                         l148 02A0  
                       l168 02C6                         l851 02A2                         l853 02AC  
                       l855 02B4                         l871 0282                         l857 02B6  
                       l873 028A                         l859 02B8                         l875 0294  
                       l869 025C                         l877 029E                         l879 02BC  
                       u600 0172                         u601 016E                         u610 0188  
                       u611 0184                         u620 019E                         u700 00F0  
                       u621 019A                         u701 00EC                         u630 01B4  
                       u710 0108                         u631 01B0                         u711 0104  
                       u640 01CA                         u720 0128                         u641 01C6  
                       u721 0124                         u650 01E0                         u730 0148  
                       u651 01DC                         u731 0144                         u660 01F6  
                       u661 01F2                         u590 023C                         u670 020C  
                       u591 0238                         u671 0208                         u680 0222  
                       u681 021E                         u690 00D8                         u691 00D4  
                       wreg 000FE8         __size_of_ADC_getval 0030          main@light_strength 0008  
                      l1101 009E                        l1111 00F0                        l1103 00A6  
                      l1121 0128                        l1113 00F4                        l1105 00AE  
                      l1123 012C                        l1115 0108                        l1107 00B6  
                      l1061 0242                        l1125 0134                        l1117 010C  
                      l1109 00D8                        l1063 0252                        l1071 0188  
                      l1127 0148                        l1119 0114                        l1081 01F6  
                      l1073 019E                        l1129 0150                        l1059 022C  
                      l1083 020C                        l1075 01B4                        l1067 0164  
                      l1091 008A                        l1085 0222                        l1077 01CA  
                      l1069 0172                        l1093 008E                        l1079 01E0  
                      l1095 0096                        l1087 007E                        l1097 0096  
                      l1089 0086                        l1099 009E                 main@minutes 000C  
                      _main 007E                        btemp 0010                        start 007A  
          __end_of_ADC_init 02BC             __end_of_HighISR 007A                ___param_bank 000000  
                     ?_main 0001                       _ADPCH 000F5F                       i2l175 0076  
                     _TMR0H 000FD4                       _TMR0L 000FD3                       ttemp5 0011  
                     ttemp6 0014                       ttemp7 0018                       status 000FD8  
                     wtemp8 0011             __initialization 02C8                __end_of_main 0164  
                    ??_main 0006               __activetblptr 000000      __size_of_LEDarray_init 0026  
                    _ADRESH 000F64                      i2l1051 003E                      i2l1053 0042  
                    i2l1055 0050                      i2l1047 000A                      i2l1057 0072  
                    i2l1049 001A                   ??_HighISR 0001           _LEDarray_disp_bin 0164  
        ?_LEDarray_disp_bin 0002                ??_ADC_getval 0004               ??_Timer0_init 0002  
       ??_LEDarray_disp_bin 0004                      isa$std 000001                   ?_ADC_init 0001  
        __end_of_ADC_getval 025C   __end_of_LEDarray_disp_bin 022C                  __accesstop 0060  
   __end_of__initialization 02C8               ___rparam_used 000001               _LEDarray_init 025C  
           _Interrupts_init 02BC              __pcstackCOMRAM 0001         __end_of_Timer0_init 02A2  
                ??_ADC_init 0002              ?_LEDarray_init 0001                     i2u53_40 001A  
                   i2u53_41 0016                     i2u54_40 002C                     i2u54_41 0024  
                   i2u56_40 0050                     i2u55_48 002E                     i2u56_41 004C  
                   i2u57_40 0062                     i2u57_41 005A                     i2u58_48 0064  
__size_of_LEDarray_disp_bin 00C8     __end_of_Interrupts_init 02C8                     _HighISR 0008  
                 _ADREFbits 000F58                     __Hparam 0000                     __Lparam 0000  
               _Timer0_init 0282                     __pcinit 02C8                     __ramtop 0E00  
                   __ptext0 007E                     __ptext1 0282                     __ptext2 025C  
                   __ptext3 0164                     __ptext4 02BC                     __ptext5 02A2  
                   __ptext6 022C        end_of_initialization 02C8            ADC_getval@tmpval 0004  
           ??_LEDarray_init 0002                   _TRISAbits 000F81                   _TRISBbits 000F82  
                 _TRISDbits 000F84                   _TRISFbits 000F86                   _TRISGbits 000F87  
                 _TRISHbits 000F88           __size_of_ADC_init 001A            ?_Interrupts_init 0001  
       start_initialization 02C8                    ?_HighISR 0001                ?_Timer0_init 0001  
                 __pintcode 0008                    _ADC_init 02A2                    _LATAbits 000F79  
                  _LATBbits 000F7A                    _LATDbits 000F7C                    _LATFbits 000F7E  
                  _LATGbits 000F7F                    _LATHbits 000F80                    _PIE0bits 000E29  
                  _PIE2bits 000E2B                    _PIR0bits 000E33                    _PIR2bits 000E35  
                _ADCON0bits 000F60            __size_of_HighISR 0072       __end_of_LEDarray_init 0282  
                  __Hrparam 0000                  _ADC_getval 022C                    __Lrparam 0000  
                _ANSELAbits 000E92                  _ANSELFbits 000EB4                  _T0CON0bits 000FD5  
                _T0CON1bits 000FD6     LEDarray_disp_bin@number 0002               __size_of_main 00E6  
                  isa$xinst 000000    __size_of_Interrupts_init 000C                    int$flags 0010  
      __size_of_Timer0_init 0020                    main@hour 000E                    main@secs 000A  
                _INTCONbits 000FF2          main@set_brightness 0006                    intlevel2 0000  
               ?_ADC_getval 0002  
