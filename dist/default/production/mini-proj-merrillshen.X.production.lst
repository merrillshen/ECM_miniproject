

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Nov 01 21:38:43 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 05/05/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F67K40 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     _PIR0bits	set	3635
    56  0000                     _PIR2bits	set	3637
    57  0000                     _PIE2bits	set	3627
    58  0000                     _PIE0bits	set	3625
    59  0000                     _ANSELFbits	set	3764
    60  0000                     _ANSELAbits	set	3730
    61  0000                     _ADPCH	set	3935
    62  0000                     _ADREFbits	set	3928
    63  0000                     _INTCONbits	set	4082
    64  0000                     _TMR0L	set	4051
    65  0000                     _TMR0H	set	4052
    66  0000                     _T0CON0bits	set	4053
    67  0000                     _T0CON1bits	set	4054
    68  0000                     _TRISBbits	set	3970
    69  0000                     _LATBbits	set	3962
    70  0000                     _TRISFbits	set	3974
    71  0000                     _LATFbits	set	3966
    72  0000                     _LATAbits	set	3961
    73  0000                     _TRISGbits	set	3975
    74  0000                     _LATGbits	set	3967
    75  0000                     _TRISDbits	set	3972
    76  0000                     _LATDbits	set	3964
    77  0000                     _TRISHbits	set	3976
    78  0000                     _LATHbits	set	3968
    79  0000                     _ADRESH	set	3940
    80  0000                     _ADCON0bits	set	3936
    81  0000                     _TRISAbits	set	3969
    82                           
    83                           ; #config settings
    84                           
    85                           	psect	cinit
    86  000308                     __pcinit:
    87                           	callstack 0
    88  000308                     start_initialization:
    89                           	callstack 0
    90  000308                     __initialization:
    91                           	callstack 0
    92  000308                     end_of_initialization:
    93                           	callstack 0
    94  000308                     __end_of__initialization:
    95                           	callstack 0
    96  000308  9014               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    97  00030A  9214               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    98  00030C  0100               	movlb	0
    99  00030E  EF3F  F000         	goto	_main	;jump to C main() function
   100                           
   101                           	psect	cstackCOMRAM
   102  000001                     __pcstackCOMRAM:
   103                           	callstack 0
   104  000001                     ??_HighISR:
   105                           
   106                           ; 1 bytes @ 0x0
   107  000001                     	ds	1
   108  000002                     ?_ADC_getval:
   109                           	callstack 0
   110  000002                     LEDarray_disp_bin@number:
   111                           	callstack 0
   112                           
   113                           ; 2 bytes @ 0x1
   114  000002                     	ds	2
   115  000004                     ADC_getval@tmpval:
   116                           	callstack 0
   117                           
   118                           ; 2 bytes @ 0x3
   119  000004                     	ds	2
   120  000006                     ??_main:
   121                           
   122                           ; 1 bytes @ 0x5
   123  000006                     	ds	2
   124  000008                     main@set_brightness:
   125                           	callstack 0
   126                           
   127                           ; 2 bytes @ 0x7
   128  000008                     	ds	2
   129  00000A                     main@light_strength:
   130                           	callstack 0
   131                           
   132                           ; 2 bytes @ 0x9
   133  00000A                     	ds	2
   134  00000C                     main@temp:
   135                           	callstack 0
   136                           
   137                           ; 2 bytes @ 0xB
   138  00000C                     	ds	2
   139  00000E                     main@secs:
   140                           	callstack 0
   141                           
   142                           ; 2 bytes @ 0xD
   143  00000E                     	ds	2
   144  000010                     main@minutes:
   145                           	callstack 0
   146                           
   147                           ; 2 bytes @ 0xF
   148  000010                     	ds	2
   149  000012                     main@hour:
   150                           	callstack 0
   151                           
   152                           ; 2 bytes @ 0x11
   153  000012                     	ds	2
   154                           
   155 ;;
   156 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   157 ;;
   158 ;; *************** function _main *****************
   159 ;; Defined at:
   160 ;;		line 13 in file "main.c"
   161 ;; Parameters:    Size  Location     Type
   162 ;;		None
   163 ;; Auto vars:     Size  Location     Type
   164 ;;  hour            2   17[COMRAM] unsigned int 
   165 ;;  minutes         2   15[COMRAM] unsigned int 
   166 ;;  secs            2   13[COMRAM] unsigned int 
   167 ;;  temp            2   11[COMRAM] unsigned int 
   168 ;;  light_streng    2    9[COMRAM] unsigned int 
   169 ;;  set_brightne    2    7[COMRAM] unsigned int 
   170 ;; Return value:  Size  Location     Type
   171 ;;                  1    wreg      void 
   172 ;; Registers used:
   173 ;;		wreg, status,2, status,0, cstack
   174 ;; Tracked objects:
   175 ;;		On entry : 0/0
   176 ;;		On exit  : 0/0
   177 ;;		Unchanged: 0/0
   178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   180 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   181 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   182 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   183 ;;Total ram usage:       14 bytes
   184 ;; Hardware stack levels required when called: 2
   185 ;; This function calls:
   186 ;;		_ADC_getval
   187 ;;		_ADC_init
   188 ;;		_Interrupts_init
   189 ;;		_LEDarray_disp_bin
   190 ;;		_LEDarray_init
   191 ;;		_Timer0_init
   192 ;; This function is called by:
   193 ;;		Startup code after reset
   194 ;; This function uses a non-reentrant model
   195 ;;
   196                           
   197                           	psect	text0
   198  00007E                     __ptext0:
   199                           	callstack 0
   200  00007E                     _main:
   201                           	callstack 29
   202  00007E                     
   203                           ;main.c: 16:     LATHbits.LATH3=0;
   204  00007E  9680               	bcf	128,3,c	;volatile
   205                           
   206                           ;main.c: 17:     TRISHbits.TRISH3=0;
   207  000080  9688               	bcf	136,3,c	;volatile
   208                           
   209                           ;main.c: 20:     LATDbits.LATD7=0;
   210  000082  9E7C               	bcf	124,7,c	;volatile
   211                           
   212                           ;main.c: 21:     TRISDbits.TRISD7=0;
   213  000084  9E84               	bcf	132,7,c	;volatile
   214  000086                     
   215                           ;main.c: 24:     LEDarray_init();
   216  000086  EC4E  F001         	call	_LEDarray_init	;wreg free
   217  00008A                     
   218                           ;main.c: 25:     ADC_init();
   219  00008A  EC71  F001         	call	_ADC_init	;wreg free
   220  00008E                     
   221                           ;main.c: 26:     Timer0_init();
   222  00008E  EC61  F001         	call	_Timer0_init	;wreg free
   223                           
   224                           ;main.c: 27:     Interrupts_init();
   225  000092  EC7E  F001         	call	_Interrupts_init	;wreg free
   226  000096                     
   227                           ;main.c: 30:     unsigned int set_brightness=50;
   228  000096  0E00               	movlw	0
   229  000098  6E09               	movwf	(main@set_brightness+1)^0,c
   230  00009A  0E32               	movlw	50
   231  00009C  6E08               	movwf	main@set_brightness^0,c
   232  00009E                     
   233                           ;main.c: 31:     unsigned int temp=0;
   234  00009E  0E00               	movlw	0
   235  0000A0  6E0D               	movwf	(main@temp+1)^0,c
   236  0000A2  0E00               	movlw	0
   237  0000A4  6E0C               	movwf	main@temp^0,c
   238  0000A6                     
   239                           ;main.c: 32:     unsigned int secs=0;
   240  0000A6  0E00               	movlw	0
   241  0000A8  6E0F               	movwf	(main@secs+1)^0,c
   242  0000AA  0E00               	movlw	0
   243  0000AC  6E0E               	movwf	main@secs^0,c
   244  0000AE                     
   245                           ;main.c: 33:     unsigned int minutes=0;
   246  0000AE  0E00               	movlw	0
   247  0000B0  6E11               	movwf	(main@minutes+1)^0,c
   248  0000B2  0E00               	movlw	0
   249  0000B4  6E10               	movwf	main@minutes^0,c
   250  0000B6                     
   251                           ;main.c: 34:     unsigned int hour=0;
   252  0000B6  0E00               	movlw	0
   253  0000B8  6E13               	movwf	(main@hour+1)^0,c
   254  0000BA  0E00               	movlw	0
   255  0000BC  6E12               	movwf	main@hour^0,c
   256  0000BE                     l1109:
   257                           
   258                           ;main.c: 36:         light_strength = ADC_getval();
   259  0000BE  EC36  F001         	call	_ADC_getval	;wreg free
   260  0000C2  C002  F00A         	movff	?_ADC_getval,main@light_strength
   261  0000C6  C003  F00B         	movff	?_ADC_getval+1,main@light_strength+1
   262                           
   263                           ;main.c: 37:         if (light_strength >= set_brightness) {
   264  0000CA  5008               	movf	main@set_brightness^0,w,c
   265  0000CC  5C0A               	subwf	main@light_strength^0,w,c
   266  0000CE  5009               	movf	(main@set_brightness+1)^0,w,c
   267  0000D0  580B               	subwfb	(main@light_strength+1)^0,w,c
   268  0000D2  A0D8               	btfss	status,0,c
   269  0000D4  EF6E  F000         	goto	u721
   270  0000D8  EF70  F000         	goto	u720
   271  0000DC                     u721:
   272  0000DC  EF73  F000         	goto	l47
   273  0000E0                     u720:
   274  0000E0                     
   275                           ;main.c: 38:             LATHbits.LATH3 = 0;
   276  0000E0  9680               	bcf	128,3,c	;volatile
   277                           
   278                           ;main.c: 39:         }
   279  0000E2  EF74  F000         	goto	l1113
   280  0000E6                     l47:
   281                           
   282                           ;main.c: 41:             LATHbits.LATH3 = 1;
   283  0000E6  8680               	bsf	128,3,c	;volatile
   284  0000E8                     l1113:
   285                           
   286                           ;main.c: 44:         if (LATDbits.LATD7 != temp) {
   287  0000E8  BE7C               	btfsc	124,7,c	;volatile
   288  0000EA  EF79  F000         	goto	u731
   289  0000EE  EF7C  F000         	goto	u730
   290  0000F2                     u731:
   291  0000F2  0E01               	movlw	1
   292  0000F4  EF7D  F000         	goto	u740
   293  0000F8                     u730:
   294  0000F8  0E00               	movlw	0
   295  0000FA                     u740:
   296  0000FA  6E06               	movwf	??_main^0,c
   297  0000FC  6A07               	clrf	(??_main+1)^0,c
   298  0000FE  500C               	movf	main@temp^0,w,c
   299  000100  1806               	xorwf	??_main^0,w,c
   300  000102  E109               	bnz	u750
   301  000104  500D               	movf	(main@temp+1)^0,w,c
   302  000106  1807               	xorwf	(??_main+1)^0,w,c
   303  000108  B4D8               	btfsc	status,2,c
   304  00010A  EF89  F000         	goto	u751
   305  00010E  EF8B  F000         	goto	u750
   306  000112                     u751:
   307  000112  EF9A  F000         	goto	l1119
   308  000116                     u750:
   309  000116                     
   310                           ;main.c: 45:             secs += 1;
   311  000116  4A0E               	infsnz	main@secs^0,f,c
   312  000118  2A0F               	incf	(main@secs+1)^0,f,c
   313  00011A                     
   314                           ;main.c: 46:             temp = LATDbits.LATD7;
   315  00011A  BE7C               	btfsc	124,7,c	;volatile
   316  00011C  EF92  F000         	goto	u761
   317  000120  EF96  F000         	goto	u760
   318  000124                     u761:
   319  000124  6A06               	clrf	??_main^0,c
   320  000126  2A06               	incf	??_main^0,f,c
   321  000128  EF97  F000         	goto	u768
   322  00012C                     u760:
   323  00012C  6A06               	clrf	??_main^0,c
   324  00012E                     u768:
   325  00012E  5006               	movf	??_main^0,w,c
   326  000130  6E0C               	movwf	main@temp^0,c
   327  000132  6A0D               	clrf	(main@temp+1)^0,c
   328  000134                     l1119:
   329                           
   330                           ;main.c: 48:         if (secs == 60) {
   331  000134  0E3C               	movlw	60
   332  000136  180E               	xorwf	main@secs^0,w,c
   333  000138  100F               	iorwf	(main@secs+1)^0,w,c
   334  00013A  A4D8               	btfss	status,2,c
   335  00013C  EFA2  F000         	goto	u771
   336  000140  EFA4  F000         	goto	u770
   337  000144                     u771:
   338  000144  EFAA  F000         	goto	l1125
   339  000148                     u770:
   340  000148                     
   341                           ;main.c: 49:             minutes += 1;
   342  000148  4A10               	infsnz	main@minutes^0,f,c
   343  00014A  2A11               	incf	(main@minutes+1)^0,f,c
   344  00014C                     
   345                           ;main.c: 50:             secs = 0;
   346  00014C  0E00               	movlw	0
   347  00014E  6E0F               	movwf	(main@secs+1)^0,c
   348  000150  0E00               	movlw	0
   349  000152  6E0E               	movwf	main@secs^0,c
   350  000154                     l1125:
   351                           
   352                           ;main.c: 52:         if (minutes == 60) {
   353  000154  0E3C               	movlw	60
   354  000156  1810               	xorwf	main@minutes^0,w,c
   355  000158  1011               	iorwf	(main@minutes+1)^0,w,c
   356  00015A  A4D8               	btfss	status,2,c
   357  00015C  EFB2  F000         	goto	u781
   358  000160  EFB4  F000         	goto	u780
   359  000164                     u781:
   360  000164  EFBA  F000         	goto	l1131
   361  000168                     u780:
   362  000168                     
   363                           ;main.c: 53:             hour += 1;
   364  000168  4A12               	infsnz	main@hour^0,f,c
   365  00016A  2A13               	incf	(main@hour+1)^0,f,c
   366  00016C                     
   367                           ;main.c: 54:             minutes = 0;
   368  00016C  0E00               	movlw	0
   369  00016E  6E11               	movwf	(main@minutes+1)^0,c
   370  000170  0E00               	movlw	0
   371  000172  6E10               	movwf	main@minutes^0,c
   372  000174                     l1131:
   373                           
   374                           ;main.c: 56:         if (hour == 24) {
   375  000174  0E18               	movlw	24
   376  000176  1812               	xorwf	main@hour^0,w,c
   377  000178  1013               	iorwf	(main@hour+1)^0,w,c
   378  00017A  A4D8               	btfss	status,2,c
   379  00017C  EFC2  F000         	goto	u791
   380  000180  EFC4  F000         	goto	u790
   381  000184                     u791:
   382  000184  EFC8  F000         	goto	l1135
   383  000188                     u790:
   384  000188                     
   385                           ;main.c: 57:             hour = 0;
   386  000188  0E00               	movlw	0
   387  00018A  6E13               	movwf	(main@hour+1)^0,c
   388  00018C  0E00               	movlw	0
   389  00018E  6E12               	movwf	main@hour^0,c
   390  000190                     l1135:
   391                           
   392                           ;main.c: 59:         LEDarray_disp_bin(hour);
   393  000190  C012  F002         	movff	main@hour,LEDarray_disp_bin@number
   394  000194  C013  F003         	movff	main@hour+1,LEDarray_disp_bin@number+1
   395  000198  ECD2  F000         	call	_LEDarray_disp_bin	;wreg free
   396  00019C  EF5F  F000         	goto	l1109
   397  0001A0  EF3D  F000         	goto	start
   398  0001A4                     __end_of_main:
   399                           	callstack 0
   400                           
   401 ;; *************** function _Timer0_init *****************
   402 ;; Defined at:
   403 ;;		line 7 in file "timers.c"
   404 ;; Parameters:    Size  Location     Type
   405 ;;		None
   406 ;; Auto vars:     Size  Location     Type
   407 ;;		None
   408 ;; Return value:  Size  Location     Type
   409 ;;                  1    wreg      void 
   410 ;; Registers used:
   411 ;;		wreg, status,2
   412 ;; Tracked objects:
   413 ;;		On entry : 0/0
   414 ;;		On exit  : 0/0
   415 ;;		Unchanged: 0/0
   416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   421 ;;Total ram usage:        0 bytes
   422 ;; Hardware stack levels used: 1
   423 ;; Hardware stack levels required when called: 1
   424 ;; This function calls:
   425 ;;		Nothing
   426 ;; This function is called by:
   427 ;;		_main
   428 ;; This function uses a non-reentrant model
   429 ;;
   430                           
   431                           	psect	text1
   432  0002C2                     __ptext1:
   433                           	callstack 0
   434  0002C2                     _Timer0_init:
   435                           	callstack 29
   436  0002C2                     
   437                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
   438  0002C2  50D6               	movf	214,w,c	;volatile
   439  0002C4  0B1F               	andlw	-225
   440  0002C6  0940               	iorlw	64
   441  0002C8  6ED6               	movwf	214,c	;volatile
   442  0002CA                     
   443                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
   444  0002CA  88D6               	bsf	214,4,c	;volatile
   445                           
   446                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
   447  0002CC  50D6               	movf	214,w,c	;volatile
   448  0002CE  0BF0               	andlw	-16
   449  0002D0  0908               	iorlw	8
   450  0002D2  6ED6               	movwf	214,c	;volatile
   451  0002D4                     
   452                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
   453  0002D4  88D5               	bsf	213,4,c	;volatile
   454                           
   455                           ;timers.c: 15:     TMR0H=62500;
   456  0002D6  0E24               	movlw	36
   457  0002D8  6ED4               	movwf	212,c	;volatile
   458                           
   459                           ;timers.c: 16:     TMR0L=0;
   460  0002DA  0E00               	movlw	0
   461  0002DC  6ED3               	movwf	211,c	;volatile
   462  0002DE                     
   463                           ;timers.c: 17:     T0CON0bits.T0EN=1;
   464  0002DE  8ED5               	bsf	213,7,c	;volatile
   465  0002E0  0012               	return		;funcret
   466  0002E2                     __end_of_Timer0_init:
   467                           	callstack 0
   468                           
   469 ;; *************** function _LEDarray_init *****************
   470 ;; Defined at:
   471 ;;		line 8 in file "LEDarray.c"
   472 ;; Parameters:    Size  Location     Type
   473 ;;		None
   474 ;; Auto vars:     Size  Location     Type
   475 ;;		None
   476 ;; Return value:  Size  Location     Type
   477 ;;                  1    wreg      void 
   478 ;; Registers used:
   479 ;;		None
   480 ;; Tracked objects:
   481 ;;		On entry : 0/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   489 ;;Total ram usage:        0 bytes
   490 ;; Hardware stack levels used: 1
   491 ;; Hardware stack levels required when called: 1
   492 ;; This function calls:
   493 ;;		Nothing
   494 ;; This function is called by:
   495 ;;		_main
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499                           	psect	text2
   500  00029C                     __ptext2:
   501                           	callstack 0
   502  00029C                     _LEDarray_init:
   503                           	callstack 29
   504  00029C                     
   505                           ;LEDarray.c: 13:     LATGbits.LATG0=0;
   506  00029C  907F               	bcf	127,0,c	;volatile
   507                           
   508                           ;LEDarray.c: 14:     TRISGbits.TRISG0=0;
   509  00029E  9087               	bcf	135,0,c	;volatile
   510                           
   511                           ;LEDarray.c: 16:     LATGbits.LATG1=0;
   512  0002A0  927F               	bcf	127,1,c	;volatile
   513                           
   514                           ;LEDarray.c: 17:     TRISGbits.TRISG1=0;
   515  0002A2  9287               	bcf	135,1,c	;volatile
   516                           
   517                           ;LEDarray.c: 19:     LATAbits.LATA2=0;
   518  0002A4  9479               	bcf	121,2,c	;volatile
   519                           
   520                           ;LEDarray.c: 20:     TRISAbits.TRISA2=0;
   521  0002A6  9481               	bcf	129,2,c	;volatile
   522                           
   523                           ;LEDarray.c: 22:     LATFbits.LATF6=0;
   524  0002A8  9C7E               	bcf	126,6,c	;volatile
   525                           
   526                           ;LEDarray.c: 23:     TRISFbits.TRISF6=0;
   527  0002AA  9C86               	bcf	134,6,c	;volatile
   528                           
   529                           ;LEDarray.c: 25:     LATAbits.LATA4=0;
   530  0002AC  9879               	bcf	121,4,c	;volatile
   531                           
   532                           ;LEDarray.c: 26:     TRISAbits.TRISA4=0;
   533  0002AE  9881               	bcf	129,4,c	;volatile
   534                           
   535                           ;LEDarray.c: 28:     LATAbits.LATA5=0;
   536  0002B0  9A79               	bcf	121,5,c	;volatile
   537                           
   538                           ;LEDarray.c: 29:     TRISAbits.TRISA5=0;
   539  0002B2  9A81               	bcf	129,5,c	;volatile
   540                           
   541                           ;LEDarray.c: 31:     LATFbits.LATF0=0;
   542  0002B4  907E               	bcf	126,0,c	;volatile
   543                           
   544                           ;LEDarray.c: 32:     TRISFbits.TRISF0=0;
   545  0002B6  9086               	bcf	134,0,c	;volatile
   546                           
   547                           ;LEDarray.c: 34:     LATBbits.LATB0=0;
   548  0002B8  907A               	bcf	122,0,c	;volatile
   549                           
   550                           ;LEDarray.c: 35:     TRISBbits.TRISB0=0;
   551  0002BA  9082               	bcf	130,0,c	;volatile
   552                           
   553                           ;LEDarray.c: 37:     LATBbits.LATB1=0;
   554  0002BC  927A               	bcf	122,1,c	;volatile
   555                           
   556                           ;LEDarray.c: 38:     TRISBbits.TRISB1=0;
   557  0002BE  9282               	bcf	130,1,c	;volatile
   558  0002C0  0012               	return		;funcret
   559  0002C2                     __end_of_LEDarray_init:
   560                           	callstack 0
   561                           
   562 ;; *************** function _LEDarray_disp_bin *****************
   563 ;; Defined at:
   564 ;;		line 45 in file "LEDarray.c"
   565 ;; Parameters:    Size  Location     Type
   566 ;;  number          2    1[COMRAM] unsigned int 
   567 ;; Auto vars:     Size  Location     Type
   568 ;;		None
   569 ;; Return value:  Size  Location     Type
   570 ;;                  1    wreg      void 
   571 ;; Registers used:
   572 ;;		None
   573 ;; Tracked objects:
   574 ;;		On entry : 0/0
   575 ;;		On exit  : 0/0
   576 ;;		Unchanged: 0/0
   577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   578 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   581 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   582 ;;Total ram usage:        2 bytes
   583 ;; Hardware stack levels used: 1
   584 ;; Hardware stack levels required when called: 1
   585 ;; This function calls:
   586 ;;		Nothing
   587 ;; This function is called by:
   588 ;;		_main
   589 ;;		_LEDarray_disp_dec
   590 ;;		_LEDarray_disp_PPM
   591 ;; This function uses a non-reentrant model
   592 ;;
   593                           
   594                           	psect	text3
   595  0001A4                     __ptext3:
   596                           	callstack 0
   597  0001A4                     _LEDarray_disp_bin:
   598                           	callstack 29
   599  0001A4                     
   600                           ;LEDarray.c: 45: void LEDarray_disp_bin(unsigned int number);LEDarray.c: 46: {;LEDarray.
      +                          c: 50:     if (number & 0b000000001) { LATGbits.LATG0=1;} else { LATGbits.LATG0=0;}
   601  0001A4  A002               	btfss	LEDarray_disp_bin@number^0,0,c
   602  0001A6  EFD7  F000         	goto	u631
   603  0001AA  EFD9  F000         	goto	u630
   604  0001AE                     u631:
   605  0001AE  EFDC  F000         	goto	l79
   606  0001B2                     u630:
   607  0001B2  807F               	bsf	127,0,c	;volatile
   608  0001B4  EFDD  F000         	goto	l80
   609  0001B8                     l79:
   610  0001B8  907F               	bcf	127,0,c	;volatile
   611  0001BA                     l80:
   612                           
   613                           ;LEDarray.c: 51:     if (number & 0b000000010) { LATGbits.LATG1=1;} else { LATGbits.LATG
      +                          1=0;}
   614  0001BA  A202               	btfss	LEDarray_disp_bin@number^0,1,c
   615  0001BC  EFE2  F000         	goto	u641
   616  0001C0  EFE4  F000         	goto	u640
   617  0001C4                     u641:
   618  0001C4  EFE7  F000         	goto	l81
   619  0001C8                     u640:
   620  0001C8  827F               	bsf	127,1,c	;volatile
   621  0001CA  EFE8  F000         	goto	l82
   622  0001CE                     l81:
   623  0001CE  927F               	bcf	127,1,c	;volatile
   624  0001D0                     l82:
   625                           
   626                           ;LEDarray.c: 52:     if (number & 0b000000100) { LATAbits.LATA2=1;} else { LATAbits.LATA
      +                          2=0;}
   627  0001D0  A402               	btfss	LEDarray_disp_bin@number^0,2,c
   628  0001D2  EFED  F000         	goto	u651
   629  0001D6  EFEF  F000         	goto	u650
   630  0001DA                     u651:
   631  0001DA  EFF2  F000         	goto	l83
   632  0001DE                     u650:
   633  0001DE  8479               	bsf	121,2,c	;volatile
   634  0001E0  EFF3  F000         	goto	l84
   635  0001E4                     l83:
   636  0001E4  9479               	bcf	121,2,c	;volatile
   637  0001E6                     l84:
   638                           
   639                           ;LEDarray.c: 53:     if (number & 0b000001000) { LATFbits.LATF6=1;} else { LATFbits.LATF
      +                          6=0;}
   640  0001E6  A602               	btfss	LEDarray_disp_bin@number^0,3,c
   641  0001E8  EFF8  F000         	goto	u661
   642  0001EC  EFFA  F000         	goto	u660
   643  0001F0                     u661:
   644  0001F0  EFFD  F000         	goto	l85
   645  0001F4                     u660:
   646  0001F4  8C7E               	bsf	126,6,c	;volatile
   647  0001F6  EFFE  F000         	goto	l86
   648  0001FA                     l85:
   649  0001FA  9C7E               	bcf	126,6,c	;volatile
   650  0001FC                     l86:
   651                           
   652                           ;LEDarray.c: 54:     if (number & 0b000010000) { LATAbits.LATA4=1;} else { LATAbits.LATA
      +                          4=0;}
   653  0001FC  A802               	btfss	LEDarray_disp_bin@number^0,4,c
   654  0001FE  EF03  F001         	goto	u671
   655  000202  EF05  F001         	goto	u670
   656  000206                     u671:
   657  000206  EF08  F001         	goto	l87
   658  00020A                     u670:
   659  00020A  8879               	bsf	121,4,c	;volatile
   660  00020C  EF09  F001         	goto	l88
   661  000210                     l87:
   662  000210  9879               	bcf	121,4,c	;volatile
   663  000212                     l88:
   664                           
   665                           ;LEDarray.c: 55:     if (number & 0b000100000) { LATAbits.LATA5=1;} else { LATAbits.LATA
      +                          5=0;}
   666  000212  AA02               	btfss	LEDarray_disp_bin@number^0,5,c
   667  000214  EF0E  F001         	goto	u681
   668  000218  EF10  F001         	goto	u680
   669  00021C                     u681:
   670  00021C  EF13  F001         	goto	l89
   671  000220                     u680:
   672  000220  8A79               	bsf	121,5,c	;volatile
   673  000222  EF14  F001         	goto	l90
   674  000226                     l89:
   675  000226  9A79               	bcf	121,5,c	;volatile
   676  000228                     l90:
   677                           
   678                           ;LEDarray.c: 56:     if (number & 0b001000000) { LATFbits.LATF0=1;} else { LATFbits.LATF
      +                          0=0;}
   679  000228  AC02               	btfss	LEDarray_disp_bin@number^0,6,c
   680  00022A  EF19  F001         	goto	u691
   681  00022E  EF1B  F001         	goto	u690
   682  000232                     u691:
   683  000232  EF1E  F001         	goto	l91
   684  000236                     u690:
   685  000236  807E               	bsf	126,0,c	;volatile
   686  000238  EF1F  F001         	goto	l92
   687  00023C                     l91:
   688  00023C  907E               	bcf	126,0,c	;volatile
   689  00023E                     l92:
   690                           
   691                           ;LEDarray.c: 57:     if (number & 0b010000000) { LATBbits.LATB0=1;} else { LATBbits.LATB
      +                          0=0;}
   692  00023E  AE02               	btfss	LEDarray_disp_bin@number^0,7,c
   693  000240  EF24  F001         	goto	u701
   694  000244  EF26  F001         	goto	u700
   695  000248                     u701:
   696  000248  EF29  F001         	goto	l93
   697  00024C                     u700:
   698  00024C  807A               	bsf	122,0,c	;volatile
   699  00024E  EF2A  F001         	goto	l94
   700  000252                     l93:
   701  000252  907A               	bcf	122,0,c	;volatile
   702  000254                     l94:
   703                           
   704                           ;LEDarray.c: 58:     if (number & 0b100000000) { LATBbits.LATB1=1;} else { LATBbits.LATB
      +                          1=0;}
   705  000254  A003               	btfss	(LEDarray_disp_bin@number+1)^0,0,c
   706  000256  EF2F  F001         	goto	u711
   707  00025A  EF31  F001         	goto	u710
   708  00025E                     u711:
   709  00025E  EF34  F001         	goto	l95
   710  000262                     u710:
   711  000262  827A               	bsf	122,1,c	;volatile
   712  000264  EF35  F001         	goto	l97
   713  000268                     l95:
   714  000268  927A               	bcf	122,1,c	;volatile
   715  00026A                     l97:
   716  00026A  0012               	return		;funcret
   717  00026C                     __end_of_LEDarray_disp_bin:
   718                           	callstack 0
   719                           
   720 ;; *************** function _Interrupts_init *****************
   721 ;; Defined at:
   722 ;;		line 8 in file "interrupts.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;		None
   725 ;; Auto vars:     Size  Location     Type
   726 ;;		None
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      void 
   729 ;; Registers used:
   730 ;;		None
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   740 ;;Total ram usage:        0 bytes
   741 ;; Hardware stack levels used: 1
   742 ;; Hardware stack levels required when called: 1
   743 ;; This function calls:
   744 ;;		Nothing
   745 ;; This function is called by:
   746 ;;		_main
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           	psect	text4
   751  0002FC                     __ptext4:
   752                           	callstack 0
   753  0002FC                     _Interrupts_init:
   754                           	callstack 29
   755  0002FC                     
   756                           ;interrupts.c: 12:     INTCONbits.PEIE=1;
   757  0002FC  8CF2               	bsf	242,6,c	;volatile
   758                           
   759                           ;interrupts.c: 13:     PIE0bits.TMR0IE=1;
   760  0002FE  010E               	movlb	14	; () banked
   761  000300  8B29               	bsf	41,5,b	;volatile
   762                           
   763                           ;interrupts.c: 14:     PIE2bits.C1IE=1;
   764  000302  812B               	bsf	43,0,b	;volatile
   765                           
   766                           ;interrupts.c: 15:     INTCONbits.GIE=1;
   767  000304  8EF2               	bsf	242,7,c	;volatile
   768  000306                     
   769                           ; BSR set to: 14
   770  000306  0012               	return		;funcret
   771  000308                     __end_of_Interrupts_init:
   772                           	callstack 0
   773                           
   774 ;; *************** function _ADC_init *****************
   775 ;; Defined at:
   776 ;;		line 9 in file "ADC.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;		None
   779 ;; Auto vars:     Size  Location     Type
   780 ;;		None
   781 ;; Return value:  Size  Location     Type
   782 ;;                  1    wreg      void 
   783 ;; Registers used:
   784 ;;		wreg, status,2
   785 ;; Tracked objects:
   786 ;;		On entry : 0/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   794 ;;Total ram usage:        0 bytes
   795 ;; Hardware stack levels used: 1
   796 ;; Hardware stack levels required when called: 1
   797 ;; This function calls:
   798 ;;		Nothing
   799 ;; This function is called by:
   800 ;;		_main
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           	psect	text5
   805  0002E2                     __ptext5:
   806                           	callstack 0
   807  0002E2                     _ADC_init:
   808                           	callstack 29
   809  0002E2                     
   810                           ;ADC.c: 11:     TRISAbits.TRISA3=1;
   811  0002E2  8681               	bsf	129,3,c	;volatile
   812                           
   813                           ;ADC.c: 12:     ANSELAbits.ANSELA3=1;
   814  0002E4  010E               	movlb	14	; () banked
   815  0002E6  8792               	bsf	146,3,b	;volatile
   816                           
   817                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
   818  0002E8  010F               	movlb	15	; () banked
   819  0002EA  9958               	bcf	88,4,b	;volatile
   820  0002EC                     
   821                           ; BSR set to: 15
   822                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
   823  0002EC  0EFC               	movlw	-4
   824  0002EE  1758               	andwf	88,f,b	;volatile
   825                           
   826                           ;ADC.c: 17:     ADPCH=0b11;
   827  0002F0  0E03               	movlw	3
   828  0002F2  6F5F               	movwf	95,b	;volatile
   829  0002F4                     
   830                           ; BSR set to: 15
   831                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
   832  0002F4  9460               	bcf	96,2,c	;volatile
   833  0002F6                     
   834                           ; BSR set to: 15
   835                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
   836  0002F6  8860               	bsf	96,4,c	;volatile
   837  0002F8                     
   838                           ; BSR set to: 15
   839                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
   840  0002F8  8E60               	bsf	96,7,c	;volatile
   841  0002FA                     
   842                           ; BSR set to: 15
   843  0002FA  0012               	return		;funcret
   844  0002FC                     __end_of_ADC_init:
   845                           	callstack 0
   846                           
   847 ;; *************** function _ADC_getval *****************
   848 ;; Defined at:
   849 ;;		line 23 in file "ADC.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;		None
   852 ;; Auto vars:     Size  Location     Type
   853 ;;  tmpval          2    3[COMRAM] unsigned int 
   854 ;; Return value:  Size  Location     Type
   855 ;;                  2    1[COMRAM] unsigned int 
   856 ;; Registers used:
   857 ;;		wreg, status,2, status,0
   858 ;; Tracked objects:
   859 ;;		On entry : 0/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   863 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   864 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   866 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   867 ;;Total ram usage:        4 bytes
   868 ;; Hardware stack levels used: 1
   869 ;; Hardware stack levels required when called: 1
   870 ;; This function calls:
   871 ;;		Nothing
   872 ;; This function is called by:
   873 ;;		_main
   874 ;; This function uses a non-reentrant model
   875 ;;
   876                           
   877                           	psect	text6
   878  00026C                     __ptext6:
   879                           	callstack 0
   880  00026C                     _ADC_getval:
   881                           	callstack 29
   882  00026C                     
   883                           ;ADC.c: 25:     unsigned int tmpval;;ADC.c: 27:     ADCON0bits.GO = 1;
   884  00026C  8060               	bsf	96,0,c	;volatile
   885  00026E                     l18:
   886  00026E  B060               	btfsc	96,0,c	;volatile
   887  000270  EF3C  F001         	goto	u621
   888  000274  EF3E  F001         	goto	u620
   889  000278                     u621:
   890  000278  EF37  F001         	goto	l18
   891  00027C                     u620:
   892  00027C                     
   893                           ;ADC.c: 31:     tmpval = ADRESH;
   894  00027C  CF64 F004          	movff	3940,ADC_getval@tmpval	;volatile
   895  000280  6A05               	clrf	(ADC_getval@tmpval+1)^0,c
   896  000282                     
   897                           ;ADC.c: 35:     tmpval = 255 - tmpval;
   898  000282  5004               	movf	ADC_getval@tmpval^0,w,c
   899  000284  08FF               	sublw	255
   900  000286  6E04               	movwf	ADC_getval@tmpval^0,c
   901  000288  5005               	movf	(ADC_getval@tmpval+1)^0,w,c
   902  00028A  A0D8               	btfss	status,0,c
   903  00028C  2AE8               	incf	wreg,f,c
   904  00028E  0800               	sublw	0
   905  000290  6E05               	movwf	(ADC_getval@tmpval+1)^0,c
   906  000292                     
   907                           ;ADC.c: 37:     return tmpval;
   908  000292  C004  F002         	movff	ADC_getval@tmpval,?_ADC_getval
   909  000296  C005  F003         	movff	ADC_getval@tmpval+1,?_ADC_getval+1
   910  00029A  0012               	return		;funcret
   911  00029C                     __end_of_ADC_getval:
   912                           	callstack 0
   913                           
   914 ;; *************** function _HighISR *****************
   915 ;; Defined at:
   916 ;;		line 22 in file "interrupts.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;		None
   919 ;; Auto vars:     Size  Location     Type
   920 ;;		None
   921 ;; Return value:  Size  Location     Type
   922 ;;                  1    wreg      void 
   923 ;; Registers used:
   924 ;;		wreg, status,2, status,0
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   932 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   933 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   934 ;;Total ram usage:        1 bytes
   935 ;; Hardware stack levels used: 1
   936 ;; This function calls:
   937 ;;		Nothing
   938 ;; This function is called by:
   939 ;;		Interrupt level 2
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           	psect	intcode
   944  000008                     __pintcode:
   945                           	callstack 0
   946  000008                     _HighISR:
   947                           	callstack 29
   948                           
   949                           ;incstack = 0
   950  000008  8214               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   951  00000A                     
   952                           ;interrupts.c: 24:     if (PIR2bits.C1IF == 1){
   953  00000A  010E               	movlb	14	; () banked
   954  00000C  A135               	btfss	53,0,b	;volatile
   955  00000E  EF0B  F000         	goto	i2u56_41
   956  000012  EF0D  F000         	goto	i2u56_40
   957  000016                     i2u56_41:
   958  000016  EF21  F000         	goto	i2l1055
   959  00001A                     i2u56_40:
   960  00001A                     
   961                           ; BSR set to: 14
   962                           ;interrupts.c: 25:         LATHbits.LATH3 = !LATHbits.LATH3;
   963  00001A  A680               	btfss	128,3,c	;volatile
   964  00001C  EF12  F000         	goto	i2u57_41
   965  000020  EF16  F000         	goto	i2u57_40
   966  000024                     i2u57_41:
   967  000024  6A01               	clrf	??_HighISR^0,c
   968  000026  2A01               	incf	??_HighISR^0,f,c
   969  000028  EF17  F000         	goto	i2u58_48
   970  00002C                     i2u57_40:
   971  00002C  6A01               	clrf	??_HighISR^0,c
   972  00002E                     i2u58_48:
   973  00002E  4601               	rlncf	??_HighISR^0,f,c
   974  000030  4601               	rlncf	??_HighISR^0,f,c
   975  000032  4601               	rlncf	??_HighISR^0,f,c
   976  000034  5080               	movf	128,w,c	;volatile
   977  000036  1801               	xorwf	??_HighISR^0,w,c
   978  000038  0BF7               	andlw	-9
   979  00003A  1801               	xorwf	??_HighISR^0,w,c
   980  00003C  6E80               	movwf	128,c	;volatile
   981  00003E                     
   982                           ;interrupts.c: 26:         PIR2bits.C1IF=0;
   983  00003E  010E               	movlb	14	; () banked
   984  000040  9135               	bcf	53,0,b	;volatile
   985  000042                     i2l1055:
   986                           
   987                           ; BSR set to: 14
   988                           ;interrupts.c: 29:     if (PIR0bits.TMR0IF == 1){
   989  000042  AB33               	btfss	51,5,b	;volatile
   990  000044  EF26  F000         	goto	i2u59_41
   991  000048  EF28  F000         	goto	i2u59_40
   992  00004C                     i2u59_41:
   993  00004C  EF3B  F000         	goto	i2l173
   994  000050                     i2u59_40:
   995  000050                     
   996                           ; BSR set to: 14
   997                           ;interrupts.c: 30:         LATDbits.LATD7 = !LATDbits.LATD7;
   998  000050  AE7C               	btfss	124,7,c	;volatile
   999  000052  EF2D  F000         	goto	i2u60_41
  1000  000056  EF31  F000         	goto	i2u60_40
  1001  00005A                     i2u60_41:
  1002  00005A  6A01               	clrf	??_HighISR^0,c
  1003  00005C  2A01               	incf	??_HighISR^0,f,c
  1004  00005E  EF32  F000         	goto	i2u61_48
  1005  000062                     i2u60_40:
  1006  000062  6A01               	clrf	??_HighISR^0,c
  1007  000064                     i2u61_48:
  1008  000064  3201               	rrcf	??_HighISR^0,f,c
  1009  000066  3201               	rrcf	??_HighISR^0,f,c
  1010  000068  507C               	movf	124,w,c	;volatile
  1011  00006A  1801               	xorwf	??_HighISR^0,w,c
  1012  00006C  0B7F               	andlw	-129
  1013  00006E  1801               	xorwf	??_HighISR^0,w,c
  1014  000070  6E7C               	movwf	124,c	;volatile
  1015  000072                     
  1016                           ;interrupts.c: 31:         PIR0bits.TMR0IF=0;
  1017  000072  010E               	movlb	14	; () banked
  1018  000074  9B33               	bcf	51,5,b	;volatile
  1019  000076                     i2l173:
  1020                           
  1021                           ; BSR set to: 14
  1022  000076  9214               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1023  000078  0011               	retfie		f
  1024  00007A                     __end_of_HighISR:
  1025                           	callstack 0
  1026  0000                     
  1027                           	psect	rparam
  1028  0000                     
  1029                           	psect	temp
  1030  000014                     btemp:
  1031                           	callstack 0
  1032  000014                     	ds	1
  1033  0000                     int$flags	set	btemp
  1034  0000                     wtemp8	set	btemp+1
  1035  0000                     ttemp5	set	btemp+1
  1036  0000                     ttemp6	set	btemp+4
  1037  0000                     ttemp7	set	btemp+8
  1038                           
  1039                           	psect	idloc
  1040                           
  1041                           ;Config register IDLOC0 @ 0x200000
  1042                           ;	unspecified, using default values
  1043  200000                     	org	2097152
  1044  200000  0FFF               	dw	4095
  1045                           
  1046                           ;Config register IDLOC1 @ 0x200002
  1047                           ;	unspecified, using default values
  1048  200002                     	org	2097154
  1049  200002  0FFF               	dw	4095
  1050                           
  1051                           ;Config register IDLOC2 @ 0x200004
  1052                           ;	unspecified, using default values
  1053  200004                     	org	2097156
  1054  200004  0FFF               	dw	4095
  1055                           
  1056                           ;Config register IDLOC3 @ 0x200006
  1057                           ;	unspecified, using default values
  1058  200006                     	org	2097158
  1059  200006  0FFF               	dw	4095
  1060                           
  1061                           ;Config register IDLOC4 @ 0x200008
  1062                           ;	unspecified, using default values
  1063  200008                     	org	2097160
  1064  200008  0FFF               	dw	4095
  1065                           
  1066                           ;Config register IDLOC5 @ 0x20000A
  1067                           ;	unspecified, using default values
  1068  20000A                     	org	2097162
  1069  20000A  0FFF               	dw	4095
  1070                           
  1071                           ;Config register IDLOC6 @ 0x20000C
  1072                           ;	unspecified, using default values
  1073  20000C                     	org	2097164
  1074  20000C  0FFF               	dw	4095
  1075                           
  1076                           ;Config register IDLOC7 @ 0x20000E
  1077                           ;	unspecified, using default values
  1078  20000E                     	org	2097166
  1079  20000E  0FFF               	dw	4095
  1080                           
  1081                           	psect	config
  1082                           
  1083                           ;Config register CONFIG1L @ 0x300000
  1084                           ;	External Oscillator mode Selection bits
  1085                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  1086                           ;	Power-up default value for COSC bits
  1087                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  1088  300000                     	org	3145728
  1089  300000  AA                 	db	170
  1090                           
  1091                           ;Config register CONFIG1H @ 0x300001
  1092                           ;	unspecified, using default values
  1093                           ;	Clock Out Enable bit
  1094                           ;	CLKOUTEN = 0x1, unprogrammed default
  1095                           ;	Clock Switch Enable bit
  1096                           ;	CSWEN = 0x1, unprogrammed default
  1097                           ;	Fail-Safe Clock Monitor Enable bit
  1098                           ;	FCMEN = 0x1, unprogrammed default
  1099  300001                     	org	3145729
  1100  300001  FF                 	db	255
  1101                           
  1102                           ;Config register CONFIG2L @ 0x300002
  1103                           ;	unspecified, using default values
  1104                           ;	Master Clear Enable bit
  1105                           ;	MCLRE = 0x1, unprogrammed default
  1106                           ;	Power-up Timer Enable bit
  1107                           ;	PWRTE = 0x1, unprogrammed default
  1108                           ;	Low-power BOR enable bit
  1109                           ;	LPBOREN = 0x1, unprogrammed default
  1110                           ;	Brown-out Reset Enable bits
  1111                           ;	BOREN = 0x3, unprogrammed default
  1112  300002                     	org	3145730
  1113  300002  FF                 	db	255
  1114                           
  1115                           ;Config register CONFIG2H @ 0x300003
  1116                           ;	unspecified, using default values
  1117                           ;	Brown Out Reset Voltage selection bits
  1118                           ;	BORV = 0x3, unprogrammed default
  1119                           ;	ZCD Disable bit
  1120                           ;	ZCD = 0x1, unprogrammed default
  1121                           ;	PPSLOCK bit One-Way Set Enable bit
  1122                           ;	PPS1WAY = 0x1, unprogrammed default
  1123                           ;	Stack Full/Underflow Reset Enable bit
  1124                           ;	STVREN = 0x1, unprogrammed default
  1125                           ;	Debugger Enable bit
  1126                           ;	DEBUG = 0x1, unprogrammed default
  1127                           ;	Extended Instruction Set Enable bit
  1128                           ;	XINST = 0x1, unprogrammed default
  1129  300003                     	org	3145731
  1130  300003  FF                 	db	255
  1131                           
  1132                           ;Config register CONFIG3L @ 0x300004
  1133                           ;	WDT Period Select bits
  1134                           ;	WDTCPS = 0x1F, unprogrammed default
  1135                           ;	WDT operating mode
  1136                           ;	WDTE = OFF, WDT Disabled
  1137  300004                     	org	3145732
  1138  300004  9F                 	db	159
  1139                           
  1140                           ;Config register CONFIG3H @ 0x300005
  1141                           ;	unspecified, using default values
  1142                           ;	WDT Window Select bits
  1143                           ;	WDTCWS = 0x7, unprogrammed default
  1144                           ;	WDT input clock selector
  1145                           ;	WDTCCS = 0x7, unprogrammed default
  1146  300005                     	org	3145733
  1147  300005  FF                 	db	255
  1148                           
  1149                           ;Config register CONFIG4L @ 0x300006
  1150                           ;	unspecified, using default values
  1151                           ;	Write Protection Block 0
  1152                           ;	WRT0 = 0x1, unprogrammed default
  1153                           ;	Write Protection Block 1
  1154                           ;	WRT1 = 0x1, unprogrammed default
  1155                           ;	Write Protection Block 2
  1156                           ;	WRT2 = 0x1, unprogrammed default
  1157                           ;	Write Protection Block 3
  1158                           ;	WRT3 = 0x1, unprogrammed default
  1159                           ;	Write Protection Block 3
  1160                           ;	WRT4 = 0x1, unprogrammed default
  1161                           ;	Write Protection Block 3
  1162                           ;	WRT5 = 0x1, unprogrammed default
  1163                           ;	Write Protection Block 3
  1164                           ;	WRT6 = 0x1, unprogrammed default
  1165                           ;	Write Protection Block 3
  1166                           ;	WRT7 = 0x1, unprogrammed default
  1167  300006                     	org	3145734
  1168  300006  FF                 	db	255
  1169                           
  1170                           ;Config register CONFIG4H @ 0x300007
  1171                           ;	unspecified, using default values
  1172                           ;	Configuration Register Write Protection bit
  1173                           ;	WRTC = 0x1, unprogrammed default
  1174                           ;	Boot Block Write Protection bit
  1175                           ;	WRTB = 0x1, unprogrammed default
  1176                           ;	Data EEPROM Write Protection bit
  1177                           ;	WRTD = 0x1, unprogrammed default
  1178                           ;	Scanner Enable bit
  1179                           ;	SCANE = 0x1, unprogrammed default
  1180                           ;	Low Voltage Programming Enable bit
  1181                           ;	LVP = 0x1, unprogrammed default
  1182  300007                     	org	3145735
  1183  300007  FF                 	db	255
  1184                           
  1185                           ;Config register CONFIG5L @ 0x300008
  1186                           ;	unspecified, using default values
  1187                           ;	UserNVM Program Memory Code Protection bit
  1188                           ;	CP = 0x1, unprogrammed default
  1189                           ;	DataNVM Memory Code Protection bit
  1190                           ;	CPD = 0x1, unprogrammed default
  1191  300008                     	org	3145736
  1192  300008  FF                 	db	255
  1193                           
  1194                           ;Config register CONFIG5H @ 0x300009
  1195                           ;	unspecified, using default values
  1196  300009                     	org	3145737
  1197  300009  FF                 	db	255
  1198                           
  1199                           ;Config register CONFIG6L @ 0x30000A
  1200                           ;	unspecified, using default values
  1201                           ;	Table Read Protection Block 0
  1202                           ;	EBTR0 = 0x1, unprogrammed default
  1203                           ;	Table Read Protection Block 1
  1204                           ;	EBTR1 = 0x1, unprogrammed default
  1205                           ;	Table Read Protection Block 2
  1206                           ;	EBTR2 = 0x1, unprogrammed default
  1207                           ;	Table Read Protection Block 3
  1208                           ;	EBTR3 = 0x1, unprogrammed default
  1209                           ;	Table Read Protection Block 4
  1210                           ;	EBTR4 = 0x1, unprogrammed default
  1211                           ;	Table Read Protection Block 5
  1212                           ;	EBTR5 = 0x1, unprogrammed default
  1213                           ;	Table Read Protection Block 6
  1214                           ;	EBTR6 = 0x1, unprogrammed default
  1215                           ;	Table Read Protection Block 7
  1216                           ;	EBTR7 = 0x1, unprogrammed default
  1217  30000A                     	org	3145738
  1218  30000A  FF                 	db	255
  1219                           
  1220                           ;Config register CONFIG6H @ 0x30000B
  1221                           ;	unspecified, using default values
  1222                           ;	Boot Block Table Read Protection bit
  1223                           ;	EBTRB = 0x1, unprogrammed default
  1224  30000B                     	org	3145739
  1225  30000B  FF                 	db	255
  1226                           tosu	equ	0xFFF
  1227                           tosh	equ	0xFFE
  1228                           tosl	equ	0xFFD
  1229                           stkptr	equ	0xFFC
  1230                           pclatu	equ	0xFFB
  1231                           pclath	equ	0xFFA
  1232                           pcl	equ	0xFF9
  1233                           tblptru	equ	0xFF8
  1234                           tblptrh	equ	0xFF7
  1235                           tblptrl	equ	0xFF6
  1236                           tablat	equ	0xFF5
  1237                           prodh	equ	0xFF4
  1238                           prodl	equ	0xFF3
  1239                           indf0	equ	0xFEF
  1240                           postinc0	equ	0xFEE
  1241                           postdec0	equ	0xFED
  1242                           preinc0	equ	0xFEC
  1243                           plusw0	equ	0xFEB
  1244                           fsr0h	equ	0xFEA
  1245                           fsr0l	equ	0xFE9
  1246                           wreg	equ	0xFE8
  1247                           indf1	equ	0xFE7
  1248                           postinc1	equ	0xFE6
  1249                           postdec1	equ	0xFE5
  1250                           preinc1	equ	0xFE4
  1251                           plusw1	equ	0xFE3
  1252                           fsr1h	equ	0xFE2
  1253                           fsr1l	equ	0xFE1
  1254                           bsr	equ	0xFE0
  1255                           indf2	equ	0xFDF
  1256                           postinc2	equ	0xFDE
  1257                           postdec2	equ	0xFDD
  1258                           preinc2	equ	0xFDC
  1259                           plusw2	equ	0xFDB
  1260                           fsr2h	equ	0xFDA
  1261                           fsr2l	equ	0xFD9
  1262                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     19      19
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_ADC_getval

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0     716
                                              5 COMRAM    14    14      0
                         _ADC_getval
                           _ADC_init
                    _Interrupts_init
                  _LEDarray_disp_bin
                      _LEDarray_init
                        _Timer0_init
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     502
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_getval                                           4     2      2      46
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _HighISR                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_getval
   _ADC_init
   _Interrupts_init
   _LEDarray_disp_bin
   _LEDarray_init
   _Timer0_init

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     13      13       1       20.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BIGRAM             DE9      0       0      33        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Nov 01 21:38:43 2021

                        l20 027C                          l21 029A                          l15 02FA  
                        l18 026E                          l47 00E6                          l80 01BA  
                        l81 01CE                          l90 0228                          l82 01D0  
                        l91 023C                          l83 01E4                          l92 023E  
                        l84 01E6                          l76 02C0                          l93 0252  
                        l85 01FA                          l94 0254                          l86 01FC  
                        l95 0268                          l87 0210                          l79 01B8  
                        l88 0212                          l97 026A                          l89 0226  
         ??_Interrupts_init 0002                         l146 02E0                         l166 0306  
                       l851 02EC                         l853 02F4                         l855 02F6  
                       l871 02CA                         l857 02F8                         l849 02E2  
                       l873 02D4                         l867 029C                         l875 02DE  
                       l877 02FC                         l869 02C2                         u620 027C  
                       u700 024C                         u621 0278                         u701 0248  
                       u710 0262                         u630 01B2                         u711 025E  
                       u631 01AE                         u640 01C8                         u720 00E0  
                       u641 01C4                         u721 00DC                         u650 01DE  
                       u730 00F8                         u651 01DA                         u731 00F2  
                       u660 01F4                         u740 00FA                         u661 01F0  
                       u670 020A                         u750 0116                         u671 0206  
                       u751 0112                         u680 0220                         u760 012C  
                       u681 021C                         u761 0124                         u690 0236  
                       u770 0148                         u691 0232                         u771 0144  
                       u780 0168                         u781 0164                         u790 0188  
                       u791 0184                         u768 012E                         wreg 000FE8  
       __size_of_ADC_getval 0030          main@light_strength 000A                        l1101 009E  
                      l1111 00E0                        l1103 00A6                        l1121 0148  
                      l1113 00E8                        l1105 00AE                        l1131 0174  
                      l1123 014C                        l1115 0116                        l1107 00B6  
                      l1061 026C                        l1133 0188                        l1125 0154  
                      l1117 011A                        l1109 00BE                        l1063 0282  
                      l1071 01B2                        l1135 0190                        l1127 0168  
                      l1119 0134                        l1065 0292                        l1081 0220  
                      l1073 01C8                        l1129 016C                        l1083 0236  
                      l1075 01DE                        l1091 0086                        l1085 024C  
                      l1077 01F4                        l1069 01A4                        l1093 008A  
                      l1087 0262                        l1079 020A                        l1095 008E  
                      l1097 0096                        l1089 007E                        l1099 0096  
               main@minutes 0010                        _main 007E                        btemp 0014  
                      start 007A            __end_of_ADC_init 02FC             __end_of_HighISR 007A  
              ___param_bank 000000                       ?_main 0001                       _ADPCH 000F5F  
                     i2l173 0076                       _TMR0H 000FD4                       _TMR0L 000FD3  
                     ttemp5 0015                       ttemp6 0018                       ttemp7 001C  
                     status 000FD8                       wtemp8 0015             __initialization 0308  
              __end_of_main 01A4                      ??_main 0006               __activetblptr 000000  
    __size_of_LEDarray_init 0026                      _ADRESH 000F64                      i2l1051 001A  
                    i2l1053 003E                      i2l1055 0042                      i2l1057 0050  
                    i2l1049 000A                      i2l1059 0072                   ??_HighISR 0001  
         _LEDarray_disp_bin 01A4          ?_LEDarray_disp_bin 0002                ??_ADC_getval 0004  
             ??_Timer0_init 0002         ??_LEDarray_disp_bin 0004                      isa$std 000001  
                 ?_ADC_init 0001          __end_of_ADC_getval 029C   __end_of_LEDarray_disp_bin 026C  
                __accesstop 0060     __end_of__initialization 0308               ___rparam_used 000001  
             _LEDarray_init 029C             _Interrupts_init 02FC              __pcstackCOMRAM 0001  
       __end_of_Timer0_init 02E2                  ??_ADC_init 0002              ?_LEDarray_init 0001  
                   i2u60_40 0062                     i2u60_41 005A                     i2u61_48 0064  
                   i2u56_40 001A                     i2u56_41 0016                     i2u57_40 002C  
                   i2u57_41 0024                     i2u59_40 0050                     i2u58_48 002E  
                   i2u59_41 004C  __size_of_LEDarray_disp_bin 00C8     __end_of_Interrupts_init 0308  
                   _HighISR 0008                   _ADREFbits 000F58                     __Hparam 0000  
                   __Lparam 0000                 _Timer0_init 02C2                     __pcinit 0308  
                   __ramtop 0E00                     __ptext0 007E                     __ptext1 02C2  
                   __ptext2 029C                     __ptext3 01A4                     __ptext4 02FC  
                   __ptext5 02E2                     __ptext6 026C        end_of_initialization 0308  
          ADC_getval@tmpval 0004             ??_LEDarray_init 0002                   _TRISAbits 000F81  
                 _TRISBbits 000F82                   _TRISDbits 000F84                   _TRISFbits 000F86  
                 _TRISGbits 000F87                   _TRISHbits 000F88           __size_of_ADC_init 001A  
          ?_Interrupts_init 0001         start_initialization 0308                    ?_HighISR 0001  
              ?_Timer0_init 0001                   __pintcode 0008                    _ADC_init 02E2  
                  _LATAbits 000F79                    _LATBbits 000F7A                    _LATDbits 000F7C  
                  _LATFbits 000F7E                    _LATGbits 000F7F                    _LATHbits 000F80  
                  _PIE0bits 000E29                    _PIE2bits 000E2B                    _PIR0bits 000E33  
                  _PIR2bits 000E35                  _ADCON0bits 000F60            __size_of_HighISR 0072  
     __end_of_LEDarray_init 02C2                    __Hrparam 0000                  _ADC_getval 026C  
                  __Lrparam 0000                  _ANSELAbits 000E92                  _ANSELFbits 000EB4  
                _T0CON0bits 000FD5                  _T0CON1bits 000FD6     LEDarray_disp_bin@number 0002  
             __size_of_main 0126                    isa$xinst 000000    __size_of_Interrupts_init 000C  
                  int$flags 0014        __size_of_Timer0_init 0020                    main@hour 0012  
                  main@secs 000E                    main@temp 000C                  _INTCONbits 000FF2  
        main@set_brightness 0008                    intlevel2 0000                 ?_ADC_getval 0002  
