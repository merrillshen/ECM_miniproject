

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Nov 08 00:39:12 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    47                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    49  0000                     
    50                           ; Version 2.20
    51                           ; Generated 05/05/2020 GMT
    52                           ; 
    53                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F67K40 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     
    85                           	psect	idataBANK0
    86  00263A                     __pidataBANK0:
    87                           	callstack 0
    88                           
    89                           ;initializer for main@F14546
    90  00263A  001F               	dw	31
    91  00263C  001C               	dw	28
    92  00263E  001F               	dw	31
    93  002640  001E               	dw	30
    94  002642  001F               	dw	31
    95  002644  001E               	dw	30
    96  002646  001F               	dw	31
    97  002648  001F               	dw	31
    98  00264A  001E               	dw	30
    99  00264C  001F               	dw	31
   100  00264E  001E               	dw	30
   101  002650  001F               	dw	31
   102  0000                     _PIR0bits	set	3635
   103  0000                     _PIR2bits	set	3637
   104  0000                     _PIE2bits	set	3627
   105  0000                     _PIE0bits	set	3625
   106  0000                     _ANSELFbits	set	3764
   107  0000                     _ANSELAbits	set	3730
   108  0000                     _ADPCH	set	3935
   109  0000                     _ADREFbits	set	3928
   110  0000                     _TRISEbits	set	3973
   111  0000                     _TRISCbits	set	3971
   112  0000                     _LATEbits	set	3965
   113  0000                     _LATCbits	set	3963
   114  0000                     _T0CON0bits	set	4053
   115  0000                     _T0CON1bits	set	4054
   116  0000                     _TMR0L	set	4051
   117  0000                     _TMR0H	set	4052
   118  0000                     _INTCONbits	set	4082
   119  0000                     _TRISBbits	set	3970
   120  0000                     _LATBbits	set	3962
   121  0000                     _TRISFbits	set	3974
   122  0000                     _LATFbits	set	3966
   123  0000                     _LATAbits	set	3961
   124  0000                     _TRISGbits	set	3975
   125  0000                     _LATGbits	set	3967
   126  0000                     _TRISDbits	set	3972
   127  0000                     _LATDbits	set	3964
   128  0000                     _TRISHbits	set	3976
   129  0000                     _LATHbits	set	3968
   130  0000                     _ADRESH	set	3940
   131  0000                     _ADCON0bits	set	3936
   132  0000                     _TRISAbits	set	3969
   133                           
   134                           	psect	smallconst
   135  000E00                     __psmallconst:
   136                           	callstack 0
   137  000E00  00                 	db	0
   138  000E01                     
   139                           ; BSR set to: 14
   140  000E01  56                 	db	86	;'V'
   141  000E02  6F                 	db	111	;'o'
   142  000E03  6C                 	db	108	;'l'
   143  000E04  74                 	db	116	;'t'
   144  000E05  61                 	db	97	;'a'
   145  000E06  67                 	db	103	;'g'
   146  000E07  65                 	db	101	;'e'
   147  000E08  3A                 	db	58	;':'
   148  000E09  20                 	db	32
   149  000E0A  25                 	db	37
   150  000E0B  64                 	db	100	;'d'
   151  000E0C  2E                 	db	46
   152  000E0D  25                 	db	37
   153  000E0E  30                 	db	48	;'0'
   154  000E0F  32                 	db	50	;'2'
   155  000E10  64                 	db	100	;'d'
   156  000E11  56                 	db	86	;'V'
   157  000E12  00                 	db	0
   158  000E13                     STR_1:
   159                           
   160                           ; BSR set to: 14
   161  000E13  25                 	db	37
   162  000E14  64                 	db	100	;'d'
   163  000E15  3A                 	db	58	;':'
   164  000E16  25                 	db	37
   165  000E17  64                 	db	100	;'d'
   166  000E18  20                 	db	32
   167  000E19  25                 	db	37
   168  000E1A  64                 	db	100	;'d'
   169  000E1B  2D                 	db	45
   170  000E1C  25                 	db	37
   171  000E1D  64                 	db	100	;'d'
   172  000E1E  2D                 	db	45
   173  000E1F  25                 	db	37
   174  000E20  64                 	db	100	;'d'
   175  000E21  00                 	db	0
   176  000E22  00                 	db	0	; dummy byte at the end
   177  0000                     
   178                           ; #config settings
   179                           
   180                           	psect	cinit
   181  0023E8                     __pcinit:
   182                           	callstack 0
   183  0023E8                     start_initialization:
   184                           	callstack 0
   185  0023E8                     __initialization:
   186                           	callstack 0
   187                           
   188                           ; Initialize objects allocated to BANK0 (24 bytes)
   189                           ; load TBLPTR registers with __pidataBANK0
   190  0023E8  0E3A               	movlw	low __pidataBANK0
   191  0023EA  6EF6               	movwf	tblptrl,c
   192  0023EC  0E26               	movlw	high __pidataBANK0
   193  0023EE  6EF7               	movwf	tblptrh,c
   194  0023F0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   195  0023F2  6EF8               	movwf	tblptru,c
   196  0023F4  EE00  F0D7         	lfsr	0,__pdataBANK0
   197  0023F8  EE10 F018          	lfsr	1,24
   198  0023FC                     copy_data0:
   199  0023FC  0009               	tblrd		*+
   200  0023FE  CFF5 FFEE          	movff	tablat,postinc0
   201  002402  50E5               	movf	postdec1,w,c
   202  002404  50E1               	movf	fsr1l,w,c
   203  002406  E1FA               	bnz	copy_data0
   204                           
   205                           ; Clear objects allocated to BANK1 (32 bytes)
   206  002408  EE01  F000         	lfsr	0,__pbssBANK1
   207  00240C  0E20               	movlw	32
   208  00240E                     clear_0:
   209  00240E  6AEE               	clrf	postinc0,c
   210  002410  06E8               	decf	wreg,f,c
   211  002412  E1FD               	bnz	clear_0
   212                           
   213                           ; Clear objects allocated to BANK0 (10 bytes)
   214  002414  EE00  F0EF         	lfsr	0,__pbssBANK0
   215  002418  0E0A               	movlw	10
   216  00241A                     clear_1:
   217  00241A  6AEE               	clrf	postinc0,c
   218  00241C  06E8               	decf	wreg,f,c
   219  00241E  E1FD               	bnz	clear_1
   220                           
   221                           ; Clear objects allocated to COMRAM (2 bytes)
   222  002420  6A5A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   223  002422  6A59               	clrf	__pbssCOMRAM& (0+255),c
   224  002424                     end_of_initialization:
   225                           	callstack 0
   226  002424                     __end_of__initialization:
   227                           	callstack 0
   228  002424  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   229  002426  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   230  002428  0100               	movlb	0
   231  00242A  EF12  F007         	goto	_main	;jump to C main() function
   232                           
   233                           	psect	bssCOMRAM
   234  000059                     __pbssCOMRAM:
   235                           	callstack 0
   236  000059                     _flags:
   237                           	callstack 0
   238  000059                     	ds	2
   239                           
   240                           	psect	bssBANK0
   241  0000EF                     __pbssBANK0:
   242                           	callstack 0
   243  0000EF                     	ds	4
   244  0000F3                     _nout:
   245                           	callstack 0
   246  0000F3                     	ds	2
   247  0000F5                     _width:
   248                           	callstack 0
   249  0000F5                     	ds	2
   250  0000F7                     _prec:
   251                           	callstack 0
   252  0000F7                     	ds	2
   253                           
   254                           	psect	dataBANK0
   255  0000D7                     __pdataBANK0:
   256                           	callstack 0
   257  0000D7                     main@F14546:
   258                           	callstack 0
   259  0000D7                     	ds	24
   260                           
   261                           	psect	bssBANK1
   262  000100                     __pbssBANK1:
   263                           	callstack 0
   264  000100                     _dbuf:
   265                           	callstack 0
   266  000100                     	ds	32
   267                           
   268                           	psect	cstackBANK0
   269  000060                     __pcstackBANK0:
   270                           	callstack 0
   271  000060                     ?_vfprintf:
   272                           	callstack 0
   273  000060                     vfprintf@fp:
   274                           	callstack 0
   275                           
   276                           ; 2 bytes @ 0x0
   277  000060                     	ds	2
   278  000062                     vfprintf@fmt:
   279                           	callstack 0
   280                           
   281                           ; 2 bytes @ 0x2
   282  000062                     	ds	2
   283  000064                     vfprintf@ap:
   284                           	callstack 0
   285                           
   286                           ; 2 bytes @ 0x4
   287  000064                     	ds	2
   288  000066                     ?_sprintf:
   289                           	callstack 0
   290  000066                     sprintf@s:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0x6
   294  000066                     	ds	2
   295  000068                     sprintf@fmt:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0x8
   299  000068                     	ds	12
   300  000074                     sprintf@ap:
   301                           	callstack 0
   302                           
   303                           ; 2 bytes @ 0x14
   304  000074                     	ds	2
   305  000076                     sprintf@f:
   306                           	callstack 0
   307                           
   308                           ; 6 bytes @ 0x16
   309  000076                     	ds	6
   310  00007C                     ??_main:
   311                           
   312                           ; 1 bytes @ 0x1C
   313  00007C                     	ds	8
   314  000084                     main@buf:
   315                           	callstack 0
   316                           
   317                           ; 25 bytes @ 0x24
   318  000084                     	ds	25
   319  00009D                     main@monthdays:
   320                           	callstack 0
   321                           
   322                           ; 24 bytes @ 0x3D
   323  00009D                     	ds	24
   324  0000B5                     main@midtime:
   325                           	callstack 0
   326                           
   327                           ; 2 bytes @ 0x55
   328  0000B5                     	ds	2
   329  0000B7                     main@diff:
   330                           	callstack 0
   331                           
   332                           ; 2 bytes @ 0x57
   333  0000B7                     	ds	2
   334  0000B9                     main@temp:
   335                           	callstack 0
   336                           
   337                           ; 2 bytes @ 0x59
   338  0000B9                     	ds	2
   339  0000BB                     main@leap_year:
   340                           	callstack 0
   341                           
   342                           ; 2 bytes @ 0x5B
   343  0000BB                     	ds	2
   344  0000BD                     main@secs:
   345                           	callstack 0
   346                           
   347                           ; 2 bytes @ 0x5D
   348  0000BD                     	ds	2
   349  0000BF                     main@curtime:
   350                           	callstack 0
   351                           
   352                           ; 2 bytes @ 0x5F
   353  0000BF                     	ds	2
   354  0000C1                     main@day_of_week:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0x61
   358  0000C1                     	ds	2
   359  0000C3                     main@year:
   360                           	callstack 0
   361                           
   362                           ; 2 bytes @ 0x63
   363  0000C3                     	ds	2
   364  0000C5                     main@daylight_flag:
   365                           	callstack 0
   366                           
   367                           ; 2 bytes @ 0x65
   368  0000C5                     	ds	2
   369  0000C7                     main@set_brightness:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0x67
   373  0000C7                     	ds	2
   374  0000C9                     main@light_strength:
   375                           	callstack 0
   376                           
   377                           ; 2 bytes @ 0x69
   378  0000C9                     	ds	2
   379  0000CB                     main@dawn_dusk:
   380                           	callstack 0
   381                           
   382                           ; 4 bytes @ 0x6B
   383  0000CB                     	ds	4
   384  0000CF                     main@daydate:
   385                           	callstack 0
   386                           
   387                           ; 2 bytes @ 0x6F
   388  0000CF                     	ds	2
   389  0000D1                     main@minutes:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0x71
   393  0000D1                     	ds	2
   394  0000D3                     main@month:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x73
   398  0000D3                     	ds	2
   399  0000D5                     main@hour:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0x75
   403  0000D5                     	ds	2
   404                           
   405                           	psect	cstackCOMRAM
   406  000001                     __pcstackCOMRAM:
   407                           	callstack 0
   408  000001                     ??_HighISR:
   409  000001                     
   410                           ; 1 bytes @ 0x0
   411  000001                     	ds	1
   412  000002                     ?_strlen:
   413                           	callstack 0
   414  000002                     ?_isdigit:
   415                           	callstack 0
   416  000002                     ?_isspace:
   417                           	callstack 0
   418  000002                     ?_ADC_getval:
   419                           	callstack 0
   420  000002                     ?___wmul:
   421                           	callstack 0
   422  000002                     ?___lwdiv:
   423                           	callstack 0
   424  000002                     ?___aodiv:
   425                           	callstack 0
   426  000002                     ?___aomod:
   427                           	callstack 0
   428  000002                     LCD_sendnibble@number:
   429                           	callstack 0
   430  000002                     LEDarray_disp_bin@number:
   431                           	callstack 0
   432  000002                     ___wmul@multiplier:
   433                           	callstack 0
   434  000002                     ___lwdiv@dividend:
   435                           	callstack 0
   436  000002                     isdigit@c:
   437                           	callstack 0
   438  000002                     isspace@c:
   439                           	callstack 0
   440  000002                     fputc@c:
   441                           	callstack 0
   442  000002                     strlen@s:
   443                           	callstack 0
   444  000002                     ___aodiv@dividend:
   445                           	callstack 0
   446  000002                     ___aomod@dividend:
   447                           	callstack 0
   448                           
   449                           ; 8 bytes @ 0x1
   450  000002                     	ds	1
   451  000003                     LCD_sendbyte@type:
   452                           	callstack 0
   453                           
   454                           ; 1 bytes @ 0x2
   455  000003                     	ds	1
   456  000004                     ??_isdigit:
   457  000004                     ??_isspace:
   458  000004                     LCD_sendbyte@MSB:
   459                           	callstack 0
   460  000004                     ADC_getval@tmpval:
   461                           	callstack 0
   462  000004                     ___wmul@multiplicand:
   463                           	callstack 0
   464  000004                     ___lwdiv@divisor:
   465                           	callstack 0
   466  000004                     fputc@fp:
   467                           	callstack 0
   468  000004                     strlen@a:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x3
   472  000004                     	ds	1
   473  000005                     LCD_sendbyte@LSB:
   474                           	callstack 0
   475                           
   476                           ; 1 bytes @ 0x4
   477  000005                     	ds	1
   478  000006                     ??_fputc:
   479  000006                     LCD_sendbyte@Byte:
   480                           	callstack 0
   481  000006                     ___wmul@product:
   482                           	callstack 0
   483  000006                     ___lwdiv@quotient:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0x5
   487  000006                     	ds	1
   488  000007                     ??_LCD_Init:
   489  000007                     LCD_sendstring@string:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x6
   493  000007                     	ds	1
   494  000008                     ___lwdiv@counter:
   495                           	callstack 0
   496  000008                     _isspace$1800:
   497                           	callstack 0
   498                           
   499                           ; 1 bytes @ 0x7
   500  000008                     	ds	1
   501  000009                     ?_atoi:
   502                           	callstack 0
   503  000009                     atoi@s:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x8
   507  000009                     	ds	1
   508  00000A                     ___aodiv@divisor:
   509                           	callstack 0
   510  00000A                     ___aomod@divisor:
   511                           	callstack 0
   512                           
   513                           ; 8 bytes @ 0x9
   514  00000A                     	ds	1
   515  00000B                     ??_atoi:
   516  00000B                     fputs@s:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0xA
   520  00000B                     	ds	2
   521  00000D                     fputs@fp:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0xC
   525  00000D                     	ds	2
   526  00000F                     fputs@c:
   527                           	callstack 0
   528  00000F                     atoi@neg:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0xE
   532  00000F                     	ds	1
   533  000010                     fputs@i:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0xF
   537  000010                     	ds	1
   538  000011                     _atoi$1782:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x10
   542  000011                     	ds	1
   543  000012                     ?_pad:
   544                           	callstack 0
   545  000012                     ___aodiv@counter:
   546                           	callstack 0
   547  000012                     ___aomod@counter:
   548                           	callstack 0
   549  000012                     pad@fp:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x11
   553  000012                     	ds	1
   554  000013                     ___aodiv@sign:
   555                           	callstack 0
   556  000013                     ___aomod@sign:
   557                           	callstack 0
   558  000013                     _atoi$1784:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x12
   562  000013                     	ds	1
   563  000014                     ?_abs:
   564                           	callstack 0
   565  000014                     pad@buf:
   566                           	callstack 0
   567  000014                     abs@a:
   568                           	callstack 0
   569  000014                     ___aodiv@quotient:
   570                           	callstack 0
   571                           
   572                           ; 8 bytes @ 0x13
   573  000014                     	ds	1
   574  000015                     _atoi$1783:
   575                           	callstack 0
   576                           
   577                           ; 1 bytes @ 0x14
   578  000015                     	ds	1
   579  000016                     ??_abs:
   580  000016                     pad@p:
   581                           	callstack 0
   582  000016                     atoi@n:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x15
   586  000016                     	ds	2
   587  000018                     ??_pad:
   588                           
   589                           ; 1 bytes @ 0x17
   590  000018                     	ds	1
   591  000019                     pad@i:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x18
   595  000019                     	ds	2
   596  00001B                     pad@w:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x1A
   600  00001B                     	ds	2
   601  00001D                     ?_dtoa:
   602                           	callstack 0
   603  00001D                     dtoa@fp:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x1C
   607  00001D                     	ds	2
   608  00001F                     dtoa@d:
   609                           	callstack 0
   610                           
   611                           ; 8 bytes @ 0x1E
   612  00001F                     	ds	8
   613  000027                     ??_dtoa:
   614                           
   615                           ; 1 bytes @ 0x26
   616  000027                     	ds	8
   617  00002F                     _dtoa$1747:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0x2E
   621  00002F                     	ds	2
   622  000031                     dtoa@p:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x30
   626  000031                     	ds	2
   627  000033                     dtoa@w:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x32
   631  000033                     	ds	2
   632  000035                     dtoa@s:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x34
   636  000035                     	ds	2
   637  000037                     dtoa@n:
   638                           	callstack 0
   639                           
   640                           ; 8 bytes @ 0x36
   641  000037                     	ds	8
   642  00003F                     dtoa@i:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x3E
   646  00003F                     	ds	2
   647  000041                     ?_vfpfcnvrt:
   648                           	callstack 0
   649  000041                     vfpfcnvrt@fp:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x40
   653  000041                     	ds	2
   654  000043                     vfpfcnvrt@fmt:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x42
   658  000043                     	ds	2
   659  000045                     vfpfcnvrt@ap:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x44
   663  000045                     	ds	2
   664  000047                     ??_vfpfcnvrt:
   665                           
   666                           ; 1 bytes @ 0x46
   667  000047                     	ds	4
   668  00004B                     vfpfcnvrt@ll:
   669                           	callstack 0
   670                           
   671                           ; 8 bytes @ 0x4A
   672  00004B                     	ds	8
   673  000053                     vfpfcnvrt@done:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x52
   677  000053                     	ds	2
   678  000055                     _vfpfcnvrt$1762:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0x54
   682  000055                     	ds	2
   683  000057                     vfprintf@cfmt:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x56
   687  000057                     	ds	2
   688  000059                     
   689                           ; 1 bytes @ 0x58
   690 ;;
   691 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   692 ;;
   693 ;; *************** function _main *****************
   694 ;; Defined at:
   695 ;;		line 15 in file "main.c"
   696 ;; Parameters:    Size  Location     Type
   697 ;;		None
   698 ;; Auto vars:     Size  Location     Type
   699 ;;  curtime         2   95[BANK0 ] unsigned int 
   700 ;;  diff            2   87[BANK0 ] int 
   701 ;;  midtime         2   85[BANK0 ] unsigned int 
   702 ;;  buf            25   36[BANK0 ] unsigned char [25]
   703 ;;  monthdays      24   61[BANK0 ] unsigned int [12]
   704 ;;  dawn_dusk       4  107[BANK0 ] unsigned int [2]
   705 ;;  hour            2  117[BANK0 ] unsigned int 
   706 ;;  month           2  115[BANK0 ] unsigned int 
   707 ;;  minutes         2  113[BANK0 ] int 
   708 ;;  daydate         2  111[BANK0 ] unsigned int 
   709 ;;  light_streng    2  105[BANK0 ] unsigned int 
   710 ;;  set_brightne    2  103[BANK0 ] unsigned int 
   711 ;;  daylight_fla    2  101[BANK0 ] unsigned int 
   712 ;;  year            2   99[BANK0 ] unsigned int 
   713 ;;  day_of_week     2   97[BANK0 ] unsigned int 
   714 ;;  secs            2   93[BANK0 ] unsigned int 
   715 ;;  leap_year       2   91[BANK0 ] unsigned int 
   716 ;;  temp            2   89[BANK0 ] unsigned int 
   717 ;; Return value:  Size  Location     Type
   718 ;;                  1    wreg      void 
   719 ;; Registers used:
   720 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   727 ;;      Locals:         0      83       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   728 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   729 ;;      Totals:         0      91       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   730 ;;Total ram usage:       91 bytes
   731 ;; Hardware stack levels required when called: 9
   732 ;; This function calls:
   733 ;;		_ADC_getval
   734 ;;		_ADC_init
   735 ;;		_Interrupts_init
   736 ;;		_LCD_Init
   737 ;;		_LCD_sendbyte
   738 ;;		_LCD_sendstring
   739 ;;		_LEDarray_disp_bin
   740 ;;		_LEDarray_init
   741 ;;		_Timer0_init
   742 ;;		___lwdiv
   743 ;;		___wmul
   744 ;;		_sprintf
   745 ;; This function is called by:
   746 ;;		Startup code after reset
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           	psect	text0
   751  000E24                     __ptext0:
   752                           	callstack 0
   753  000E24                     _main:
   754                           	callstack 22
   755  000E24                     
   756                           ;main.c: 18:     LATHbits.LATH3=0;
   757  000E24  9680               	bcf	128,3,c	;volatile
   758                           
   759                           ;main.c: 19:     TRISHbits.TRISH3=0;
   760  000E26  9688               	bcf	136,3,c	;volatile
   761                           
   762                           ;main.c: 22:     LATDbits.LATD7=0;
   763  000E28  9E7C               	bcf	124,7,c	;volatile
   764                           
   765                           ;main.c: 23:     TRISDbits.TRISD7=0;
   766  000E2A  9E84               	bcf	132,7,c	;volatile
   767  000E2C                     
   768                           ;main.c: 26:     LEDarray_init();
   769  000E2C  ECED  F012         	call	_LEDarray_init	;wreg free
   770  000E30                     
   771                           ;main.c: 27:     ADC_init();
   772  000E30  EC10  F013         	call	_ADC_init	;wreg free
   773  000E34                     
   774                           ;main.c: 28:     Timer0_init();
   775  000E34  EC00  F013         	call	_Timer0_init	;wreg free
   776                           
   777                           ;main.c: 29:     Interrupts_init();
   778  000E38  EC34  F013         	call	_Interrupts_init	;wreg free
   779  000E3C                     
   780                           ;main.c: 30:     LCD_Init();
   781  000E3C  EC6A  F00F         	call	_LCD_Init	;wreg free
   782  000E40                     
   783                           ;main.c: 34:     unsigned int temp=0;
   784  000E40  0E00               	movlw	0
   785  000E42  0100               	movlb	0	; () banked
   786  000E44  6FBA               	movwf	(main@temp+1)& (0+255),b
   787  000E46  0E00               	movlw	0
   788  000E48  6FB9               	movwf	main@temp& (0+255),b
   789  000E4A                     
   790                           ; BSR set to: 0
   791                           ;main.c: 35:     unsigned int secs=0;
   792  000E4A  0E00               	movlw	0
   793  000E4C  6FBE               	movwf	(main@secs+1)& (0+255),b
   794  000E4E  0E00               	movlw	0
   795  000E50  6FBD               	movwf	main@secs& (0+255),b
   796  000E52                     
   797                           ; BSR set to: 0
   798                           ;main.c: 37:     unsigned int monthdays[12] = {31,28,31,30,31,30,31,31,30,31,30,31};
   799  000E52  EE20  F0D7         	lfsr	2,main@F14546
   800  000E56  EE10  F09D         	lfsr	1,main@monthdays
   801  000E5A  0E17               	movlw	23
   802  000E5C                     u3731:
   803  000E5C  CFDB FFE3          	movff	plusw2,plusw1
   804  000E60  06E8               	decf	wreg,f,c
   805  000E62  E2FC               	bc	u3731
   806  000E64                     
   807                           ; BSR set to: 0
   808                           ;main.c: 38:     unsigned int daylight_flag = 0;
   809  000E64  0E00               	movlw	0
   810  000E66  6FC6               	movwf	(main@daylight_flag+1)& (0+255),b
   811  000E68  0E00               	movlw	0
   812  000E6A  6FC5               	movwf	main@daylight_flag& (0+255),b
   813  000E6C                     
   814                           ; BSR set to: 0
   815                           ;main.c: 39:     unsigned int dawn_dusk[2] = {0,0};
   816  000E6C  0E00               	movlw	0
   817  000E6E  6FCB               	movwf	main@dawn_dusk& (0+255),b
   818  000E70  0E00               	movlw	0
   819  000E72  6FCC               	movwf	(main@dawn_dusk+1)& (0+255),b
   820  000E74  0E00               	movlw	0
   821  000E76  6FCD               	movwf	(main@dawn_dusk+2)& (0+255),b
   822  000E78  0E00               	movlw	0
   823  000E7A  6FCE               	movwf	(main@dawn_dusk+3)& (0+255),b
   824  000E7C                     
   825                           ; BSR set to: 0
   826                           ;main.c: 40:     char buf[25];;main.c: 43:     unsigned int set_brightness=50;
   827  000E7C  0E00               	movlw	0
   828  000E7E  6FC8               	movwf	(main@set_brightness+1)& (0+255),b
   829  000E80  0E32               	movlw	50
   830  000E82  6FC7               	movwf	main@set_brightness& (0+255),b
   831  000E84                     
   832                           ; BSR set to: 0
   833                           ;main.c: 44:     int minutes=39;
   834  000E84  0E00               	movlw	0
   835  000E86  6FD2               	movwf	(main@minutes+1)& (0+255),b
   836  000E88  0E27               	movlw	39
   837  000E8A  6FD1               	movwf	main@minutes& (0+255),b
   838  000E8C                     
   839                           ; BSR set to: 0
   840                           ;main.c: 45:     unsigned int hour=0;
   841  000E8C  0E00               	movlw	0
   842  000E8E  6FD6               	movwf	(main@hour+1)& (0+255),b
   843  000E90  0E00               	movlw	0
   844  000E92  6FD5               	movwf	main@hour& (0+255),b
   845  000E94                     
   846                           ; BSR set to: 0
   847                           ;main.c: 46:     unsigned int day_of_week = 1;
   848  000E94  0E00               	movlw	0
   849  000E96  6FC2               	movwf	(main@day_of_week+1)& (0+255),b
   850  000E98  0E01               	movlw	1
   851  000E9A  6FC1               	movwf	main@day_of_week& (0+255),b
   852  000E9C                     
   853                           ; BSR set to: 0
   854                           ;main.c: 47:     unsigned int daydate = 8;
   855  000E9C  0E00               	movlw	0
   856  000E9E  6FD0               	movwf	(main@daydate+1)& (0+255),b
   857  000EA0  0E08               	movlw	8
   858  000EA2  6FCF               	movwf	main@daydate& (0+255),b
   859  000EA4                     
   860                           ; BSR set to: 0
   861                           ;main.c: 48:     unsigned int month = 11;
   862  000EA4  0E00               	movlw	0
   863  000EA6  6FD4               	movwf	(main@month+1)& (0+255),b
   864  000EA8  0E0B               	movlw	11
   865  000EAA  6FD3               	movwf	main@month& (0+255),b
   866  000EAC                     
   867                           ; BSR set to: 0
   868                           ;main.c: 49:     unsigned int year = 2021;
   869  000EAC  0E07               	movlw	7
   870  000EAE  6FC4               	movwf	(main@year+1)& (0+255),b
   871  000EB0  0EE5               	movlw	229
   872  000EB2  6FC3               	movwf	main@year& (0+255),b
   873  000EB4                     l3305:
   874                           
   875                           ;main.c: 52:         light_strength = ADC_getval();
   876  000EB4  ECC2  F012         	call	_ADC_getval	;wreg free
   877  000EB8  C002  F0C9         	movff	?_ADC_getval,main@light_strength
   878  000EBC  C003  F0CA         	movff	?_ADC_getval+1,main@light_strength+1
   879  000EC0                     
   880                           ;main.c: 53:         if (light_strength >= set_brightness || (1<hour && hour<5 ) ) {
   881  000EC0  0100               	movlb	0	; () banked
   882  000EC2  51C7               	movf	main@set_brightness& (0+255),w,b
   883  000EC4  5DC9               	subwf	main@light_strength& (0+255),w,b
   884  000EC6  51C8               	movf	(main@set_brightness+1)& (0+255),w,b
   885  000EC8  59CA               	subwfb	(main@light_strength+1)& (0+255),w,b
   886  000ECA  B0D8               	btfsc	status,0,c
   887  000ECC  EF6A  F007         	goto	u3741
   888  000ED0  EF6C  F007         	goto	u3740
   889  000ED4                     u3741:
   890  000ED4  EF82  F007         	goto	l63
   891  000ED8                     u3740:
   892  000ED8                     
   893                           ; BSR set to: 0
   894  000ED8  51D6               	movf	(main@hour+1)& (0+255),w,b
   895  000EDA  E109               	bnz	u3750
   896  000EDC  0E02               	movlw	2
   897  000EDE  5DD5               	subwf	main@hour& (0+255),w,b
   898  000EE0  A0D8               	btfss	status,0,c
   899  000EE2  EF75  F007         	goto	u3751
   900  000EE6  EF77  F007         	goto	u3750
   901  000EEA                     u3751:
   902  000EEA  EF85  F007         	goto	l61
   903  000EEE                     u3750:
   904  000EEE                     
   905                           ; BSR set to: 0
   906  000EEE  51D6               	movf	(main@hour+1)& (0+255),w,b
   907  000EF0  E107               	bnz	u3761
   908  000EF2  0E05               	movlw	5
   909  000EF4  5DD5               	subwf	main@hour& (0+255),w,b
   910  000EF6  B0D8               	btfsc	status,0,c
   911  000EF8  EF80  F007         	goto	u3761
   912  000EFC  EF82  F007         	goto	u3760
   913  000F00                     u3761:
   914  000F00  EF85  F007         	goto	l61
   915  000F04                     u3760:
   916  000F04                     l63:
   917                           
   918                           ; BSR set to: 0
   919                           ;main.c: 54:             LATHbits.LATH3 = 0;}
   920  000F04  9680               	bcf	128,3,c	;volatile
   921  000F06  EF86  F007         	goto	l3313
   922  000F0A                     l61:
   923                           
   924                           ; BSR set to: 0
   925  000F0A  8680               	bsf	128,3,c	;volatile
   926  000F0C                     l3313:
   927                           
   928                           ; BSR set to: 0
   929                           ;main.c: 58:         leap_year = year % 4;
   930  000F0C  0E03               	movlw	3
   931  000F0E  15C3               	andwf	main@year& (0+255),w,b
   932  000F10  6FBB               	movwf	main@leap_year& (0+255),b
   933  000F12  6BBC               	clrf	(main@leap_year+1)& (0+255),b
   934                           
   935                           ;main.c: 59:         if (leap_year == 0) { monthdays[1] = 29;}
   936  000F14  51BB               	movf	main@leap_year& (0+255),w,b
   937  000F16  11BC               	iorwf	(main@leap_year+1)& (0+255),w,b
   938  000F18  A4D8               	btfss	status,2,c
   939  000F1A  EF91  F007         	goto	u3771
   940  000F1E  EF93  F007         	goto	u3770
   941  000F22                     u3771:
   942  000F22  EF99  F007         	goto	l3317
   943  000F26                     u3770:
   944  000F26                     
   945                           ; BSR set to: 0
   946  000F26  0E00               	movlw	0
   947  000F28  6FA0               	movwf	(main@monthdays+3)& (0+255),b
   948  000F2A  0E1D               	movlw	29
   949  000F2C  6F9F               	movwf	(main@monthdays+2)& (0+255),b
   950  000F2E  EF9D  F007         	goto	l3319
   951  000F32                     l3317:
   952                           
   953                           ; BSR set to: 0
   954  000F32  0E00               	movlw	0
   955  000F34  6FA0               	movwf	(main@monthdays+3)& (0+255),b
   956  000F36  0E1C               	movlw	28
   957  000F38  6F9F               	movwf	(main@monthdays+2)& (0+255),b
   958  000F3A                     l3319:
   959                           
   960                           ; BSR set to: 0
   961                           ;main.c: 63:         if (LATDbits.LATD7 != temp) { secs += 1; temp = LATDbits.LATD7;}
   962  000F3A  BE7C               	btfsc	124,7,c	;volatile
   963  000F3C  EFA2  F007         	goto	u3781
   964  000F40  EFA5  F007         	goto	u3780
   965  000F44                     u3781:
   966  000F44  0E01               	movlw	1
   967  000F46  EFA6  F007         	goto	u3790
   968  000F4A                     u3780:
   969  000F4A  0E00               	movlw	0
   970  000F4C                     u3790:
   971  000F4C  6F7C               	movwf	??_main& (0+255),b
   972  000F4E  6B7D               	clrf	(??_main+1)& (0+255),b
   973  000F50  51B9               	movf	main@temp& (0+255),w,b
   974  000F52  197C               	xorwf	??_main& (0+255),w,b
   975  000F54  E109               	bnz	u3800
   976  000F56  51BA               	movf	(main@temp+1)& (0+255),w,b
   977  000F58  197D               	xorwf	(??_main+1)& (0+255),w,b
   978  000F5A  B4D8               	btfsc	status,2,c
   979  000F5C  EFB2  F007         	goto	u3801
   980  000F60  EFB4  F007         	goto	u3800
   981  000F64                     u3801:
   982  000F64  EFC4  F007         	goto	l3325
   983  000F68                     u3800:
   984  000F68                     
   985                           ; BSR set to: 0
   986  000F68  4BBD               	infsnz	main@secs& (0+255),f,b
   987  000F6A  2BBE               	incf	(main@secs+1)& (0+255),f,b
   988  000F6C                     
   989                           ; BSR set to: 0
   990  000F6C  BE7C               	btfsc	124,7,c	;volatile
   991  000F6E  EFBB  F007         	goto	u3811
   992  000F72  EFBF  F007         	goto	u3810
   993  000F76                     u3811:
   994  000F76  6B7C               	clrf	??_main& (0+255),b
   995  000F78  2B7C               	incf	??_main& (0+255),f,b
   996  000F7A  EFC1  F007         	goto	u3818
   997  000F7E                     u3810:
   998  000F7E  0100               	movlb	0	; () banked
   999  000F80  6B7C               	clrf	??_main& (0+255),b
  1000  000F82                     u3818:
  1001  000F82  517C               	movf	??_main& (0+255),w,b
  1002  000F84  6FB9               	movwf	main@temp& (0+255),b
  1003  000F86  6BBA               	clrf	(main@temp+1)& (0+255),b
  1004  000F88                     l3325:
  1005                           
  1006                           ; BSR set to: 0
  1007                           ;main.c: 64:         if (secs >= 60) { minutes += 1; secs = 0;}
  1008  000F88  51BE               	movf	(main@secs+1)& (0+255),w,b
  1009  000F8A  E109               	bnz	u3820
  1010  000F8C  0E3C               	movlw	60
  1011  000F8E  5DBD               	subwf	main@secs& (0+255),w,b
  1012  000F90  A0D8               	btfss	status,0,c
  1013  000F92  EFCD  F007         	goto	u3821
  1014  000F96  EFCF  F007         	goto	u3820
  1015  000F9A                     u3821:
  1016  000F9A  EFD5  F007         	goto	l3331
  1017  000F9E                     u3820:
  1018  000F9E                     
  1019                           ; BSR set to: 0
  1020  000F9E  4BD1               	infsnz	main@minutes& (0+255),f,b
  1021  000FA0  2BD2               	incf	(main@minutes+1)& (0+255),f,b
  1022  000FA2                     
  1023                           ; BSR set to: 0
  1024  000FA2  0E00               	movlw	0
  1025  000FA4  6FBE               	movwf	(main@secs+1)& (0+255),b
  1026  000FA6  0E00               	movlw	0
  1027  000FA8  6FBD               	movwf	main@secs& (0+255),b
  1028  000FAA                     l3331:
  1029                           
  1030                           ; BSR set to: 0
  1031                           ;main.c: 65:         if (minutes >= 60) { hour += 1; minutes = 0;}
  1032  000FAA  BFD2               	btfsc	(main@minutes+1)& (0+255),7,b
  1033  000FAC  EFE1  F007         	goto	u3831
  1034  000FB0  51D2               	movf	(main@minutes+1)& (0+255),w,b
  1035  000FB2  E109               	bnz	u3830
  1036  000FB4  0E3C               	movlw	60
  1037  000FB6  5DD1               	subwf	main@minutes& (0+255),w,b
  1038  000FB8  A0D8               	btfss	status,0,c
  1039  000FBA  EFE1  F007         	goto	u3831
  1040  000FBE  EFE3  F007         	goto	u3830
  1041  000FC2                     u3831:
  1042  000FC2  EFE9  F007         	goto	l3337
  1043  000FC6                     u3830:
  1044  000FC6                     
  1045                           ; BSR set to: 0
  1046  000FC6  4BD5               	infsnz	main@hour& (0+255),f,b
  1047  000FC8  2BD6               	incf	(main@hour+1)& (0+255),f,b
  1048  000FCA                     
  1049                           ; BSR set to: 0
  1050  000FCA  0E00               	movlw	0
  1051  000FCC  6FD2               	movwf	(main@minutes+1)& (0+255),b
  1052  000FCE  0E00               	movlw	0
  1053  000FD0  6FD1               	movwf	main@minutes& (0+255),b
  1054  000FD2                     l3337:
  1055                           
  1056                           ; BSR set to: 0
  1057                           ;main.c: 66:         if (hour >= 24) {hour = 0; daydate += 1; day_of_week+=1;}
  1058  000FD2  51D6               	movf	(main@hour+1)& (0+255),w,b
  1059  000FD4  E109               	bnz	u3840
  1060  000FD6  0E18               	movlw	24
  1061  000FD8  5DD5               	subwf	main@hour& (0+255),w,b
  1062  000FDA  A0D8               	btfss	status,0,c
  1063  000FDC  EFF2  F007         	goto	u3841
  1064  000FE0  EFF4  F007         	goto	u3840
  1065  000FE4                     u3841:
  1066  000FE4  EFFC  F007         	goto	l3345
  1067  000FE8                     u3840:
  1068  000FE8                     
  1069                           ; BSR set to: 0
  1070  000FE8  0E00               	movlw	0
  1071  000FEA  6FD6               	movwf	(main@hour+1)& (0+255),b
  1072  000FEC  0E00               	movlw	0
  1073  000FEE  6FD5               	movwf	main@hour& (0+255),b
  1074  000FF0                     
  1075                           ; BSR set to: 0
  1076  000FF0  4BCF               	infsnz	main@daydate& (0+255),f,b
  1077  000FF2  2BD0               	incf	(main@daydate+1)& (0+255),f,b
  1078  000FF4                     
  1079                           ; BSR set to: 0
  1080  000FF4  4BC1               	infsnz	main@day_of_week& (0+255),f,b
  1081  000FF6  2BC2               	incf	(main@day_of_week+1)& (0+255),f,b
  1082  000FF8                     l3345:
  1083                           
  1084                           ; BSR set to: 0
  1085                           ;main.c: 67:         if (day_of_week > 7) {day_of_week=1;}
  1086  000FF8  51C2               	movf	(main@day_of_week+1)& (0+255),w,b
  1087  000FFA  E109               	bnz	u3850
  1088  000FFC  0E08               	movlw	8
  1089  000FFE  5DC1               	subwf	main@day_of_week& (0+255),w,b
  1090  001000  A0D8               	btfss	status,0,c
  1091  001002  EF05  F008         	goto	u3851
  1092  001006  EF07  F008         	goto	u3850
  1093  00100A                     u3851:
  1094  00100A  EF0B  F008         	goto	l3349
  1095  00100E                     u3850:
  1096  00100E                     
  1097                           ; BSR set to: 0
  1098  00100E  0E00               	movlw	0
  1099  001010  6FC2               	movwf	(main@day_of_week+1)& (0+255),b
  1100  001012  0E01               	movlw	1
  1101  001014  6FC1               	movwf	main@day_of_week& (0+255),b
  1102  001016                     l3349:
  1103                           
  1104                           ; BSR set to: 0
  1105                           ;main.c: 68:         if (month > 12) { year += 1; month = 1; daydate=1;}
  1106  001016  51D4               	movf	(main@month+1)& (0+255),w,b
  1107  001018  E109               	bnz	u3860
  1108  00101A  0E0D               	movlw	13
  1109  00101C  5DD3               	subwf	main@month& (0+255),w,b
  1110  00101E  A0D8               	btfss	status,0,c
  1111  001020  EF14  F008         	goto	u3861
  1112  001024  EF16  F008         	goto	u3860
  1113  001028                     u3861:
  1114  001028  EF20  F008         	goto	l3357
  1115  00102C                     u3860:
  1116  00102C                     
  1117                           ; BSR set to: 0
  1118  00102C  4BC3               	infsnz	main@year& (0+255),f,b
  1119  00102E  2BC4               	incf	(main@year+1)& (0+255),f,b
  1120  001030                     
  1121                           ; BSR set to: 0
  1122  001030  0E00               	movlw	0
  1123  001032  6FD4               	movwf	(main@month+1)& (0+255),b
  1124  001034  0E01               	movlw	1
  1125  001036  6FD3               	movwf	main@month& (0+255),b
  1126  001038                     
  1127                           ; BSR set to: 0
  1128  001038  0E00               	movlw	0
  1129  00103A  6FD0               	movwf	(main@daydate+1)& (0+255),b
  1130  00103C  0E01               	movlw	1
  1131  00103E  6FCF               	movwf	main@daydate& (0+255),b
  1132  001040                     l3357:
  1133                           
  1134                           ; BSR set to: 0
  1135                           ;main.c: 69:         if (daydate > monthdays[month-1]) { month += 1; daydate = 1;
  1136  001040  0EFE               	movlw	254
  1137  001042  6F7C               	movwf	??_main& (0+255),b
  1138  001044  0EFF               	movlw	255
  1139  001046  6F7D               	movwf	(??_main+1)& (0+255),b
  1140  001048  C0D3  F07E         	movff	main@month,??_main+2
  1141  00104C  C0D4  F07F         	movff	main@month+1,??_main+3
  1142  001050  90D8               	bcf	status,0,c
  1143  001052  377E               	rlcf	(??_main+2)& (0+255),f,b
  1144  001054  377F               	rlcf	(??_main+3)& (0+255),f,b
  1145  001056  517C               	movf	??_main& (0+255),w,b
  1146  001058  277E               	addwf	(??_main+2)& (0+255),f,b
  1147  00105A  517D               	movf	(??_main+1)& (0+255),w,b
  1148  00105C  237F               	addwfc	(??_main+3)& (0+255),f,b
  1149  00105E  0E9D               	movlw	low main@monthdays
  1150  001060  257E               	addwf	(??_main+2)& (0+255),w,b
  1151  001062  6ED9               	movwf	fsr2l,c
  1152  001064  0E00               	movlw	high main@monthdays
  1153  001066  217F               	addwfc	(??_main+3)& (0+255),w,b
  1154  001068  6EDA               	movwf	fsr2h,c
  1155  00106A  51CF               	movf	main@daydate& (0+255),w,b
  1156  00106C  5CDE               	subwf	postinc2,w,c
  1157  00106E  51D0               	movf	(main@daydate+1)& (0+255),w,b
  1158  001070  58DE               	subwfb	postinc2,w,c
  1159  001072  B0D8               	btfsc	status,0,c
  1160  001074  EF3E  F008         	goto	u3871
  1161  001078  EF40  F008         	goto	u3870
  1162  00107C                     u3871:
  1163  00107C  EF52  F008         	goto	l3369
  1164  001080                     u3870:
  1165  001080                     
  1166                           ; BSR set to: 0
  1167  001080  4BD3               	infsnz	main@month& (0+255),f,b
  1168  001082  2BD4               	incf	(main@month+1)& (0+255),f,b
  1169  001084                     
  1170                           ; BSR set to: 0
  1171  001084  0E00               	movlw	0
  1172  001086  6FD0               	movwf	(main@daydate+1)& (0+255),b
  1173  001088  0E01               	movlw	1
  1174  00108A  6FCF               	movwf	main@daydate& (0+255),b
  1175  00108C                     
  1176                           ; BSR set to: 0
  1177                           ;main.c: 70:             daylight_flag=0; dawn_dusk[0]=0; dawn_dusk[1]=0;}
  1178  00108C  0E00               	movlw	0
  1179  00108E  6FC6               	movwf	(main@daylight_flag+1)& (0+255),b
  1180  001090  0E00               	movlw	0
  1181  001092  6FC5               	movwf	main@daylight_flag& (0+255),b
  1182  001094                     
  1183                           ; BSR set to: 0
  1184  001094  0E00               	movlw	0
  1185  001096  6FCC               	movwf	(main@dawn_dusk+1)& (0+255),b
  1186  001098  0E00               	movlw	0
  1187  00109A  6FCB               	movwf	main@dawn_dusk& (0+255),b
  1188  00109C                     
  1189                           ; BSR set to: 0
  1190  00109C  0E00               	movlw	0
  1191  00109E  6FCE               	movwf	(main@dawn_dusk+3)& (0+255),b
  1192  0010A0  0E00               	movlw	0
  1193  0010A2  6FCD               	movwf	(main@dawn_dusk+2)& (0+255),b
  1194  0010A4                     l3369:
  1195                           
  1196                           ; BSR set to: 0
  1197                           ;main.c: 71:         if (month>12) { year+=1; month=1; daydate=1;}
  1198  0010A4  51D4               	movf	(main@month+1)& (0+255),w,b
  1199  0010A6  E109               	bnz	u3880
  1200  0010A8  0E0D               	movlw	13
  1201  0010AA  5DD3               	subwf	main@month& (0+255),w,b
  1202  0010AC  A0D8               	btfss	status,0,c
  1203  0010AE  EF5B  F008         	goto	u3881
  1204  0010B2  EF5D  F008         	goto	u3880
  1205  0010B6                     u3881:
  1206  0010B6  EF67  F008         	goto	l3377
  1207  0010BA                     u3880:
  1208  0010BA                     
  1209                           ; BSR set to: 0
  1210  0010BA  4BC3               	infsnz	main@year& (0+255),f,b
  1211  0010BC  2BC4               	incf	(main@year+1)& (0+255),f,b
  1212  0010BE                     
  1213                           ; BSR set to: 0
  1214  0010BE  0E00               	movlw	0
  1215  0010C0  6FD4               	movwf	(main@month+1)& (0+255),b
  1216  0010C2  0E01               	movlw	1
  1217  0010C4  6FD3               	movwf	main@month& (0+255),b
  1218  0010C6                     
  1219                           ; BSR set to: 0
  1220  0010C6  0E00               	movlw	0
  1221  0010C8  6FD0               	movwf	(main@daydate+1)& (0+255),b
  1222  0010CA  0E01               	movlw	1
  1223  0010CC  6FCF               	movwf	main@daydate& (0+255),b
  1224  0010CE                     l3377:
  1225                           
  1226                           ; BSR set to: 0
  1227                           ;main.c: 72:         LEDarray_disp_bin(hour);
  1228  0010CE  C0D5  F002         	movff	main@hour,LEDarray_disp_bin@number
  1229  0010D2  C0D6  F003         	movff	main@hour+1,LEDarray_disp_bin@number+1
  1230  0010D6  EC3C  F010         	call	_LEDarray_disp_bin	;wreg free
  1231  0010DA                     
  1232                           ;main.c: 75:         if (day_of_week == 7) {
  1233  0010DA  0E07               	movlw	7
  1234  0010DC  0100               	movlb	0	; () banked
  1235  0010DE  19C1               	xorwf	main@day_of_week& (0+255),w,b
  1236  0010E0  11C2               	iorwf	(main@day_of_week+1)& (0+255),w,b
  1237  0010E2  A4D8               	btfss	status,2,c
  1238  0010E4  EF76  F008         	goto	u3891
  1239  0010E8  EF78  F008         	goto	u3890
  1240  0010EC                     u3891:
  1241  0010EC  EFDC  F008         	goto	l3401
  1242  0010F0                     u3890:
  1243  0010F0                     
  1244                           ; BSR set to: 0
  1245                           ;main.c: 76:             if ((daydate+7) > monthdays[month-1]) {
  1246  0010F0  0E07               	movlw	7
  1247  0010F2  25CF               	addwf	main@daydate& (0+255),w,b
  1248  0010F4  6F7C               	movwf	??_main& (0+255),b
  1249  0010F6  0E00               	movlw	0
  1250  0010F8  21D0               	addwfc	(main@daydate+1)& (0+255),w,b
  1251  0010FA  6F7D               	movwf	(??_main+1)& (0+255),b
  1252  0010FC  0EFE               	movlw	254
  1253  0010FE  6F7E               	movwf	(??_main+2)& (0+255),b
  1254  001100  0EFF               	movlw	255
  1255  001102  6F7F               	movwf	(??_main+3)& (0+255),b
  1256  001104  C0D3  F080         	movff	main@month,??_main+4
  1257  001108  C0D4  F081         	movff	main@month+1,??_main+5
  1258  00110C  90D8               	bcf	status,0,c
  1259  00110E  3780               	rlcf	(??_main+4)& (0+255),f,b
  1260  001110  3781               	rlcf	(??_main+5)& (0+255),f,b
  1261  001112  517E               	movf	(??_main+2)& (0+255),w,b
  1262  001114  2780               	addwf	(??_main+4)& (0+255),f,b
  1263  001116  517F               	movf	(??_main+3)& (0+255),w,b
  1264  001118  2381               	addwfc	(??_main+5)& (0+255),f,b
  1265  00111A  0E9D               	movlw	low main@monthdays
  1266  00111C  2580               	addwf	(??_main+4)& (0+255),w,b
  1267  00111E  6ED9               	movwf	fsr2l,c
  1268  001120  0E00               	movlw	high main@monthdays
  1269  001122  2181               	addwfc	(??_main+5)& (0+255),w,b
  1270  001124  6EDA               	movwf	fsr2h,c
  1271  001126  517C               	movf	??_main& (0+255),w,b
  1272  001128  5CDE               	subwf	postinc2,w,c
  1273  00112A  517D               	movf	(??_main+1)& (0+255),w,b
  1274  00112C  58DE               	subwfb	postinc2,w,c
  1275  00112E  B0D8               	btfsc	status,0,c
  1276  001130  EF9C  F008         	goto	u3901
  1277  001134  EF9E  F008         	goto	u3900
  1278  001138                     u3901:
  1279  001138  EFDC  F008         	goto	l3401
  1280  00113C                     u3900:
  1281  00113C                     
  1282                           ; BSR set to: 0
  1283                           ;main.c: 77:                 if (month == 3){
  1284  00113C  0E03               	movlw	3
  1285  00113E  19D3               	xorwf	main@month& (0+255),w,b
  1286  001140  11D4               	iorwf	(main@month+1)& (0+255),w,b
  1287  001142  A4D8               	btfss	status,2,c
  1288  001144  EFA6  F008         	goto	u3911
  1289  001148  EFA8  F008         	goto	u3910
  1290  00114C                     u3911:
  1291  00114C  EFB7  F008         	goto	l3391
  1292  001150                     u3910:
  1293  001150                     
  1294                           ; BSR set to: 0
  1295                           ;main.c: 78:                     if (daylight_flag==0){
  1296  001150  51C5               	movf	main@daylight_flag& (0+255),w,b
  1297  001152  11C6               	iorwf	(main@daylight_flag+1)& (0+255),w,b
  1298  001154  A4D8               	btfss	status,2,c
  1299  001156  EFAF  F008         	goto	u3921
  1300  00115A  EFB1  F008         	goto	u3920
  1301  00115E                     u3921:
  1302  00115E  EFB7  F008         	goto	l3391
  1303  001162                     u3920:
  1304  001162                     
  1305                           ; BSR set to: 0
  1306                           ;main.c: 79:                         hour+=1;
  1307  001162  4BD5               	infsnz	main@hour& (0+255),f,b
  1308  001164  2BD6               	incf	(main@hour+1)& (0+255),f,b
  1309  001166                     
  1310                           ; BSR set to: 0
  1311                           ;main.c: 80:                         daylight_flag=1;
  1312  001166  0E00               	movlw	0
  1313  001168  6FC6               	movwf	(main@daylight_flag+1)& (0+255),b
  1314  00116A  0E01               	movlw	1
  1315  00116C  6FC5               	movwf	main@daylight_flag& (0+255),b
  1316  00116E                     l3391:
  1317                           
  1318                           ; BSR set to: 0
  1319                           ;main.c: 83:                 if (month ==10) {
  1320  00116E  0E0A               	movlw	10
  1321  001170  19D3               	xorwf	main@month& (0+255),w,b
  1322  001172  11D4               	iorwf	(main@month+1)& (0+255),w,b
  1323  001174  A4D8               	btfss	status,2,c
  1324  001176  EFBF  F008         	goto	u3931
  1325  00117A  EFC1  F008         	goto	u3930
  1326  00117E                     u3931:
  1327  00117E  EFDC  F008         	goto	l3401
  1328  001182                     u3930:
  1329  001182                     
  1330                           ; BSR set to: 0
  1331                           ;main.c: 84:                     if (daylight_flag==0 && hour==1){
  1332  001182  51C5               	movf	main@daylight_flag& (0+255),w,b
  1333  001184  11C6               	iorwf	(main@daylight_flag+1)& (0+255),w,b
  1334  001186  A4D8               	btfss	status,2,c
  1335  001188  EFC8  F008         	goto	u3941
  1336  00118C  EFCA  F008         	goto	u3940
  1337  001190                     u3941:
  1338  001190  EFDC  F008         	goto	l76
  1339  001194                     u3940:
  1340  001194                     
  1341                           ; BSR set to: 0
  1342  001194  05D5               	decf	main@hour& (0+255),w,b
  1343  001196  11D6               	iorwf	(main@hour+1)& (0+255),w,b
  1344  001198  A4D8               	btfss	status,2,c
  1345  00119A  EFD1  F008         	goto	u3951
  1346  00119E  EFD3  F008         	goto	u3950
  1347  0011A2                     u3951:
  1348  0011A2  EFDC  F008         	goto	l76
  1349  0011A6                     u3950:
  1350  0011A6                     
  1351                           ; BSR set to: 0
  1352                           ;main.c: 85:                         hour-=1;
  1353  0011A6  07D5               	decf	main@hour& (0+255),f,b
  1354  0011A8  A0D8               	btfss	status,0,c
  1355  0011AA  07D6               	decf	(main@hour+1)& (0+255),f,b
  1356  0011AC                     
  1357                           ; BSR set to: 0
  1358                           ;main.c: 86:                         daylight_flag=1;
  1359  0011AC  0E00               	movlw	0
  1360  0011AE  6FC6               	movwf	(main@daylight_flag+1)& (0+255),b
  1361  0011B0  0E01               	movlw	1
  1362  0011B2  6FC5               	movwf	main@daylight_flag& (0+255),b
  1363  0011B4  EFDC  F008         	goto	l3401
  1364  0011B8                     l76:
  1365  0011B8                     l3401:
  1366                           
  1367                           ; BSR set to: 0
  1368                           ;main.c: 93:         if (daydate == 25){
  1369  0011B8  0E19               	movlw	25
  1370  0011BA  19CF               	xorwf	main@daydate& (0+255),w,b
  1371  0011BC  11D0               	iorwf	(main@daydate+1)& (0+255),w,b
  1372  0011BE  A4D8               	btfss	status,2,c
  1373  0011C0  EFE4  F008         	goto	u3961
  1374  0011C4  EFE6  F008         	goto	u3960
  1375  0011C8                     u3961:
  1376  0011C8  EFA5  F009         	goto	l3433
  1377  0011CC                     u3960:
  1378  0011CC                     
  1379                           ; BSR set to: 0
  1380                           ;main.c: 94:             if (dawn_dusk[0] == 0){
  1381  0011CC  51CB               	movf	main@dawn_dusk& (0+255),w,b
  1382  0011CE  11CC               	iorwf	(main@dawn_dusk+1)& (0+255),w,b
  1383  0011D0  A4D8               	btfss	status,2,c
  1384  0011D2  EFED  F008         	goto	u3971
  1385  0011D6  EFEF  F008         	goto	u3970
  1386  0011DA                     u3971:
  1387  0011DA  EF21  F009         	goto	l3413
  1388  0011DE                     u3970:
  1389  0011DE                     
  1390                           ; BSR set to: 0
  1391                           ;main.c: 95:                 if (light_strength >= set_brightness){
  1392  0011DE  51C7               	movf	main@set_brightness& (0+255),w,b
  1393  0011E0  5DC9               	subwf	main@light_strength& (0+255),w,b
  1394  0011E2  51C8               	movf	(main@set_brightness+1)& (0+255),w,b
  1395  0011E4  59CA               	subwfb	(main@light_strength+1)& (0+255),w,b
  1396  0011E6  A0D8               	btfss	status,0,c
  1397  0011E8  EFF8  F008         	goto	u3981
  1398  0011EC  EFFA  F008         	goto	u3980
  1399  0011F0                     u3981:
  1400  0011F0  EF21  F009         	goto	l3413
  1401  0011F4                     u3980:
  1402  0011F4                     
  1403                           ; BSR set to: 0
  1404                           ;main.c: 96:                     if (hour>4 && hour<9){
  1405  0011F4  51D6               	movf	(main@hour+1)& (0+255),w,b
  1406  0011F6  E109               	bnz	u3990
  1407  0011F8  0E05               	movlw	5
  1408  0011FA  5DD5               	subwf	main@hour& (0+255),w,b
  1409  0011FC  A0D8               	btfss	status,0,c
  1410  0011FE  EF03  F009         	goto	u3991
  1411  001202  EF05  F009         	goto	u3990
  1412  001206                     u3991:
  1413  001206  EF21  F009         	goto	l3413
  1414  00120A                     u3990:
  1415  00120A                     
  1416                           ; BSR set to: 0
  1417  00120A  51D6               	movf	(main@hour+1)& (0+255),w,b
  1418  00120C  E107               	bnz	u4001
  1419  00120E  0E09               	movlw	9
  1420  001210  5DD5               	subwf	main@hour& (0+255),w,b
  1421  001212  B0D8               	btfsc	status,0,c
  1422  001214  EF0E  F009         	goto	u4001
  1423  001218  EF10  F009         	goto	u4000
  1424  00121C                     u4001:
  1425  00121C  EF21  F009         	goto	l3413
  1426  001220                     u4000:
  1427  001220                     
  1428                           ; BSR set to: 0
  1429                           ;main.c: 97:                         dawn_dusk[0] = hour*60 + minutes;
  1430  001220  C0D5  F002         	movff	main@hour,___wmul@multiplier
  1431  001224  C0D6  F003         	movff	main@hour+1,___wmul@multiplier+1
  1432  001228  0E00               	movlw	0
  1433  00122A  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  1434  00122C  0E3C               	movlw	60
  1435  00122E  6E04               	movwf	___wmul@multiplicand^0,c
  1436  001230  ECDA  F012         	call	___wmul	;wreg free
  1437  001234  0100               	movlb	0	; () banked
  1438  001236  51D1               	movf	main@minutes& (0+255),w,b
  1439  001238  2402               	addwf	?___wmul^0,w,c
  1440  00123A  6FCB               	movwf	main@dawn_dusk& (0+255),b
  1441  00123C  51D2               	movf	(main@minutes+1)& (0+255),w,b
  1442  00123E  2003               	addwfc	(?___wmul+1)^0,w,c
  1443  001240  6FCC               	movwf	(main@dawn_dusk+1)& (0+255),b
  1444  001242                     l3413:
  1445                           
  1446                           ; BSR set to: 0
  1447                           ;main.c: 101:             if (dawn_dusk[1] == 0){
  1448  001242  51CD               	movf	(main@dawn_dusk+2)& (0+255),w,b
  1449  001244  11CE               	iorwf	(main@dawn_dusk+3)& (0+255),w,b
  1450  001246  A4D8               	btfss	status,2,c
  1451  001248  EF28  F009         	goto	u4011
  1452  00124C  EF2A  F009         	goto	u4010
  1453  001250                     u4011:
  1454  001250  EF5C  F009         	goto	l3423
  1455  001254                     u4010:
  1456  001254                     
  1457                           ; BSR set to: 0
  1458                           ;main.c: 102:                 if (light_strength <= set_brightness){
  1459  001254  51C9               	movf	main@light_strength& (0+255),w,b
  1460  001256  5DC7               	subwf	main@set_brightness& (0+255),w,b
  1461  001258  51CA               	movf	(main@light_strength+1)& (0+255),w,b
  1462  00125A  59C8               	subwfb	(main@set_brightness+1)& (0+255),w,b
  1463  00125C  A0D8               	btfss	status,0,c
  1464  00125E  EF33  F009         	goto	u4021
  1465  001262  EF35  F009         	goto	u4020
  1466  001266                     u4021:
  1467  001266  EF5C  F009         	goto	l3423
  1468  00126A                     u4020:
  1469  00126A                     
  1470                           ; BSR set to: 0
  1471                           ;main.c: 103:                     if (hour>15 && hour<22){
  1472  00126A  51D6               	movf	(main@hour+1)& (0+255),w,b
  1473  00126C  E109               	bnz	u4030
  1474  00126E  0E10               	movlw	16
  1475  001270  5DD5               	subwf	main@hour& (0+255),w,b
  1476  001272  A0D8               	btfss	status,0,c
  1477  001274  EF3E  F009         	goto	u4031
  1478  001278  EF40  F009         	goto	u4030
  1479  00127C                     u4031:
  1480  00127C  EF5C  F009         	goto	l3423
  1481  001280                     u4030:
  1482  001280                     
  1483                           ; BSR set to: 0
  1484  001280  51D6               	movf	(main@hour+1)& (0+255),w,b
  1485  001282  E107               	bnz	u4041
  1486  001284  0E16               	movlw	22
  1487  001286  5DD5               	subwf	main@hour& (0+255),w,b
  1488  001288  B0D8               	btfsc	status,0,c
  1489  00128A  EF49  F009         	goto	u4041
  1490  00128E  EF4B  F009         	goto	u4040
  1491  001292                     u4041:
  1492  001292  EF5C  F009         	goto	l3423
  1493  001296                     u4040:
  1494  001296                     
  1495                           ; BSR set to: 0
  1496                           ;main.c: 104:                         dawn_dusk[1] = hour*60 + minutes;
  1497  001296  C0D5  F002         	movff	main@hour,___wmul@multiplier
  1498  00129A  C0D6  F003         	movff	main@hour+1,___wmul@multiplier+1
  1499  00129E  0E00               	movlw	0
  1500  0012A0  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  1501  0012A2  0E3C               	movlw	60
  1502  0012A4  6E04               	movwf	___wmul@multiplicand^0,c
  1503  0012A6  ECDA  F012         	call	___wmul	;wreg free
  1504  0012AA  0100               	movlb	0	; () banked
  1505  0012AC  51D1               	movf	main@minutes& (0+255),w,b
  1506  0012AE  2402               	addwf	?___wmul^0,w,c
  1507  0012B0  6FCD               	movwf	(main@dawn_dusk+2)& (0+255),b
  1508  0012B2  51D2               	movf	(main@minutes+1)& (0+255),w,b
  1509  0012B4  2003               	addwfc	(?___wmul+1)^0,w,c
  1510  0012B6  6FCE               	movwf	(main@dawn_dusk+3)& (0+255),b
  1511  0012B8                     l3423:
  1512                           
  1513                           ; BSR set to: 0
  1514                           ;main.c: 108:             unsigned int midtime = (dawn_dusk[0]+dawn_dusk[1])/2;
  1515  0012B8  51CB               	movf	main@dawn_dusk& (0+255),w,b
  1516  0012BA  25CD               	addwf	(main@dawn_dusk+2)& (0+255),w,b
  1517  0012BC  6F7C               	movwf	??_main& (0+255),b
  1518  0012BE  51CC               	movf	(main@dawn_dusk+1)& (0+255),w,b
  1519  0012C0  21CE               	addwfc	(main@dawn_dusk+3)& (0+255),w,b
  1520  0012C2  6F7D               	movwf	(??_main+1)& (0+255),b
  1521  0012C4  90D8               	bcf	status,0,c
  1522  0012C6  317D               	rrcf	(??_main+1)& (0+255),w,b
  1523  0012C8  6F7E               	movwf	(??_main+2)& (0+255),b
  1524  0012CA  317C               	rrcf	??_main& (0+255),w,b
  1525  0012CC  6FB5               	movwf	main@midtime& (0+255),b
  1526  0012CE  C07E  F0B6         	movff	??_main+2,main@midtime+1
  1527  0012D2                     
  1528                           ; BSR set to: 0
  1529                           ;main.c: 109:             int diff = 720 - midtime;
  1530  0012D2  51B5               	movf	main@midtime& (0+255),w,b
  1531  0012D4  08D0               	sublw	208
  1532  0012D6  6FB7               	movwf	main@diff& (0+255),b
  1533  0012D8  51B6               	movf	(main@midtime+1)& (0+255),w,b
  1534  0012DA  A0D8               	btfss	status,0,c
  1535  0012DC  2AE8               	incf	wreg,f,c
  1536  0012DE  0802               	sublw	2
  1537  0012E0  6FB8               	movwf	(main@diff+1)& (0+255),b
  1538                           
  1539                           ;main.c: 110:             unsigned int curtime = (hour*60) + minutes;
  1540  0012E2  C0D5  F002         	movff	main@hour,___wmul@multiplier
  1541  0012E6  C0D6  F003         	movff	main@hour+1,___wmul@multiplier+1
  1542  0012EA  0E00               	movlw	0
  1543  0012EC  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  1544  0012EE  0E3C               	movlw	60
  1545  0012F0  6E04               	movwf	___wmul@multiplicand^0,c
  1546  0012F2  ECDA  F012         	call	___wmul	;wreg free
  1547  0012F6  0100               	movlb	0	; () banked
  1548  0012F8  51D1               	movf	main@minutes& (0+255),w,b
  1549  0012FA  2402               	addwf	?___wmul^0,w,c
  1550  0012FC  6FBF               	movwf	main@curtime& (0+255),b
  1551  0012FE  51D2               	movf	(main@minutes+1)& (0+255),w,b
  1552  001300  2003               	addwfc	(?___wmul+1)^0,w,c
  1553  001302  6FC0               	movwf	(main@curtime+1)& (0+255),b
  1554  001304                     
  1555                           ; BSR set to: 0
  1556                           ;main.c: 111:             curtime += diff;
  1557  001304  51B7               	movf	main@diff& (0+255),w,b
  1558  001306  27BF               	addwf	main@curtime& (0+255),f,b
  1559  001308  51B8               	movf	(main@diff+1)& (0+255),w,b
  1560  00130A  23C0               	addwfc	(main@curtime+1)& (0+255),f,b
  1561  00130C                     
  1562                           ; BSR set to: 0
  1563                           ;main.c: 112:             hour = curtime/60;
  1564  00130C  C0BF  F002         	movff	main@curtime,___lwdiv@dividend
  1565  001310  C0C0  F003         	movff	main@curtime+1,___lwdiv@dividend+1
  1566  001314  0E00               	movlw	0
  1567  001316  6E05               	movwf	(___lwdiv@divisor+1)^0,c
  1568  001318  0E3C               	movlw	60
  1569  00131A  6E04               	movwf	___lwdiv@divisor^0,c
  1570  00131C  EC01  F011         	call	___lwdiv	;wreg free
  1571  001320  C002  F0D5         	movff	?___lwdiv,main@hour
  1572  001324  C003  F0D6         	movff	?___lwdiv+1,main@hour+1
  1573  001328                     
  1574                           ;main.c: 113:             minutes = curtime - (hour*60);
  1575  001328  C0D5  F002         	movff	main@hour,___wmul@multiplier
  1576  00132C  C0D6  F003         	movff	main@hour+1,___wmul@multiplier+1
  1577  001330  0EFF               	movlw	255
  1578  001332  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  1579  001334  0EC4               	movlw	196
  1580  001336  6E04               	movwf	___wmul@multiplicand^0,c
  1581  001338  ECDA  F012         	call	___wmul	;wreg free
  1582  00133C  0100               	movlb	0	; () banked
  1583  00133E  51BF               	movf	main@curtime& (0+255),w,b
  1584  001340  2402               	addwf	?___wmul^0,w,c
  1585  001342  6FD1               	movwf	main@minutes& (0+255),b
  1586  001344  51C0               	movf	(main@curtime+1)& (0+255),w,b
  1587  001346  2003               	addwfc	(?___wmul+1)^0,w,c
  1588  001348  6FD2               	movwf	(main@minutes+1)& (0+255),b
  1589  00134A                     l3433:
  1590                           
  1591                           ; BSR set to: 0
  1592                           ;main.c: 117:         sprintf(buf,"%d:%d %d-%d-%d",hour,minutes,daydate,month,year);
  1593  00134A  0E84               	movlw	low main@buf
  1594  00134C  6F66               	movwf	sprintf@s& (0+255),b
  1595  00134E  0E00               	movlw	high main@buf
  1596  001350  6F67               	movwf	(sprintf@s+1)& (0+255),b
  1597  001352  0E13               	movlw	low STR_1
  1598  001354  6F68               	movwf	sprintf@fmt& (0+255),b
  1599  001356  0E0E               	movlw	high STR_1
  1600  001358  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  1601  00135A  C0D5  F06A         	movff	main@hour,?_sprintf+4
  1602  00135E  C0D6  F06B         	movff	main@hour+1,?_sprintf+5
  1603  001362  C0D1  F06C         	movff	main@minutes,?_sprintf+6
  1604  001366  C0D2  F06D         	movff	main@minutes+1,?_sprintf+7
  1605  00136A  C0CF  F06E         	movff	main@daydate,?_sprintf+8
  1606  00136E  C0D0  F06F         	movff	main@daydate+1,?_sprintf+9
  1607  001372  C0D3  F070         	movff	main@month,?_sprintf+10
  1608  001376  C0D4  F071         	movff	main@month+1,?_sprintf+11
  1609  00137A  C0C3  F072         	movff	main@year,?_sprintf+12
  1610  00137E  C0C4  F073         	movff	main@year+1,?_sprintf+13
  1611  001382  ECA2  F011         	call	_sprintf	;wreg free
  1612  001386                     
  1613                           ;main.c: 118:         LCD_sendbyte(0b00001100,0);
  1614  001386  0E00               	movlw	0
  1615  001388  6E03               	movwf	LCD_sendbyte@type^0,c
  1616  00138A  0E0C               	movlw	12
  1617  00138C  ECAA  F012         	call	_LCD_sendbyte
  1618  001390                     
  1619                           ;main.c: 119:         LCD_sendstring(buf);
  1620  001390  0E84               	movlw	low main@buf
  1621  001392  6E07               	movwf	LCD_sendstring@string^0,c
  1622  001394  0E00               	movlw	high main@buf
  1623  001396  6E08               	movwf	(LCD_sendstring@string+1)^0,c
  1624  001398  EC90  F012         	call	_LCD_sendstring	;wreg free
  1625  00139C                     
  1626                           ;main.c: 120:         _delay((unsigned long)((500)*(64000000/4000.0)));
  1627  00139C  0E29               	movlw	41
  1628  00139E  0100               	movlb	0	; () banked
  1629  0013A0  6F7D               	movwf	(??_main+1)& (0+255),b
  1630  0013A2  0E96               	movlw	150
  1631  0013A4  6F7C               	movwf	??_main& (0+255),b
  1632  0013A6  0E7F               	movlw	127
  1633  0013A8                     u4057:
  1634  0013A8  2EE8               	decfsz	wreg,f,c
  1635  0013AA  D7FE               	bra	u4057
  1636  0013AC  2F7C               	decfsz	??_main& (0+255),f,b
  1637  0013AE  D7FC               	bra	u4057
  1638  0013B0  2F7D               	decfsz	(??_main+1)& (0+255),f,b
  1639  0013B2  D7FA               	bra	u4057
  1640  0013B4                     
  1641                           ;main.c: 121:         LCD_sendbyte(0b00000001,0);
  1642  0013B4  0E00               	movlw	0
  1643  0013B6  6E03               	movwf	LCD_sendbyte@type^0,c
  1644  0013B8  0E01               	movlw	1
  1645  0013BA  ECAA  F012         	call	_LCD_sendbyte
  1646  0013BE                     
  1647                           ;main.c: 122:         _delay((unsigned long)((2)*(64000000/4000.0)));
  1648  0013BE  0E2A               	movlw	42
  1649  0013C0  0100               	movlb	0	; () banked
  1650  0013C2  6F7C               	movwf	??_main& (0+255),b
  1651  0013C4  0E8D               	movlw	141
  1652  0013C6                     u4067:
  1653  0013C6  2EE8               	decfsz	wreg,f,c
  1654  0013C8  D7FE               	bra	u4067
  1655  0013CA  2F7C               	decfsz	??_main& (0+255),f,b
  1656  0013CC  D7FC               	bra	u4067
  1657  0013CE  D000               	nop2	
  1658  0013D0  EF5A  F007         	goto	l3305
  1659  0013D4  EF41  F000         	goto	start
  1660  0013D8                     __end_of_main:
  1661                           	callstack 0
  1662                           
  1663 ;; *************** function _sprintf *****************
  1664 ;; Defined at:
  1665 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;  s               2    6[BANK0 ] PTR unsigned char 
  1668 ;;		 -> main@buf(25), 
  1669 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  1670 ;;		 -> STR_2(18), STR_1(15), 
  1671 ;; Auto vars:     Size  Location     Type
  1672 ;;  f               6   22[BANK0 ] struct _IO_FILE
  1673 ;;  ap              2   20[BANK0 ] PTR void [1]
  1674 ;;		 -> ?_sprintf(2), 
  1675 ;;  ret             2    0        int 
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  2    6[BANK0 ] int 
  1678 ;; Registers used:
  1679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1685 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1686 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1688 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1689 ;;Total ram usage:       22 bytes
  1690 ;; Hardware stack levels used: 1
  1691 ;; Hardware stack levels required when called: 8
  1692 ;; This function calls:
  1693 ;;		_vfprintf
  1694 ;; This function is called by:
  1695 ;;		_main
  1696 ;;		_ADC2String
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           	psect	text1
  1701  002344                     __ptext1:
  1702                           	callstack 0
  1703  002344                     _sprintf:
  1704                           	callstack 22
  1705  002344  0E6A               	movlw	low (?_sprintf+4)
  1706  002346  0100               	movlb	0	; () banked
  1707  002348  6F74               	movwf	sprintf@ap& (0+255),b
  1708  00234A  0E00               	movlw	high (?_sprintf+4)
  1709  00234C  6F75               	movwf	(sprintf@ap+1)& (0+255),b
  1710  00234E  C066  F076         	movff	sprintf@s,sprintf@f
  1711  002352  C067  F077         	movff	sprintf@s+1,sprintf@f+1
  1712  002356                     
  1713                           ; BSR set to: 0
  1714  002356  0E00               	movlw	0
  1715  002358  6F79               	movwf	(sprintf@f+3)& (0+255),b
  1716  00235A  0E00               	movlw	0
  1717  00235C  6F78               	movwf	(sprintf@f+2)& (0+255),b
  1718  00235E                     
  1719                           ; BSR set to: 0
  1720  00235E  0E00               	movlw	0
  1721  002360  6F7B               	movwf	(sprintf@f+5)& (0+255),b
  1722  002362  0E00               	movlw	0
  1723  002364  6F7A               	movwf	(sprintf@f+4)& (0+255),b
  1724  002366                     
  1725                           ; BSR set to: 0
  1726  002366  0E76               	movlw	low sprintf@f
  1727  002368  6F60               	movwf	vfprintf@fp& (0+255),b
  1728  00236A  0E00               	movlw	high sprintf@f
  1729  00236C  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
  1730  00236E  C068  F062         	movff	sprintf@fmt,vfprintf@fmt
  1731  002372  C069  F063         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1732  002376  0E74               	movlw	low sprintf@ap
  1733  002378  6F64               	movwf	vfprintf@ap& (0+255),b
  1734  00237A  0E00               	movlw	high sprintf@ap
  1735  00237C  6F65               	movwf	(vfprintf@ap+1)& (0+255),b
  1736  00237E  EC6F  F011         	call	_vfprintf	;wreg free
  1737  002382  0100               	movlb	0	; () banked
  1738  002384  5178               	movf	(sprintf@f+2)& (0+255),w,b
  1739  002386  2566               	addwf	sprintf@s& (0+255),w,b
  1740  002388  6ED9               	movwf	fsr2l,c
  1741  00238A  5179               	movf	(sprintf@f+3)& (0+255),w,b
  1742  00238C  2167               	addwfc	(sprintf@s+1)& (0+255),w,b
  1743  00238E  6EDA               	movwf	fsr2h,c
  1744  002390  0E00               	movlw	0
  1745  002392  6EDF               	movwf	indf2,c
  1746  002394                     
  1747                           ; BSR set to: 0
  1748  002394  0012               	return		;funcret
  1749  002396                     __end_of_sprintf:
  1750                           	callstack 0
  1751                           
  1752 ;; *************** function _vfprintf *****************
  1753 ;; Defined at:
  1754 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  1757 ;;		 -> sprintf@f(6), 
  1758 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1759 ;;		 -> STR_2(18), STR_1(15), 
  1760 ;;  ap              2    4[BANK0 ] PTR PTR void 
  1761 ;;		 -> sprintf@ap(2), 
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  1764 ;;		 -> STR_2(18), STR_1(15), 
  1765 ;; Return value:  Size  Location     Type
  1766 ;;                  2    0[BANK0 ] int 
  1767 ;; Registers used:
  1768 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1769 ;; Tracked objects:
  1770 ;;		On entry : 0/0
  1771 ;;		On exit  : 0/0
  1772 ;;		Unchanged: 0/0
  1773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1774 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1775 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1777 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1778 ;;Total ram usage:        8 bytes
  1779 ;; Hardware stack levels used: 1
  1780 ;; Hardware stack levels required when called: 7
  1781 ;; This function calls:
  1782 ;;		_vfpfcnvrt
  1783 ;; This function is called by:
  1784 ;;		_sprintf
  1785 ;; This function uses a non-reentrant model
  1786 ;;
  1787                           
  1788                           	psect	text2
  1789  0022DE                     __ptext2:
  1790                           	callstack 0
  1791  0022DE                     _vfprintf:
  1792                           	callstack 22
  1793  0022DE                     
  1794                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1795  0022DE  C062  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  1796  0022E2  C063  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1797  0022E6                     
  1798                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1799  0022E6  0E00               	movlw	0
  1800  0022E8  0100               	movlb	0	; () banked
  1801  0022EA  6FF4               	movwf	(_nout+1)& (0+255),b
  1802  0022EC  0E00               	movlw	0
  1803  0022EE  6FF3               	movwf	_nout& (0+255),b
  1804                           
  1805                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1806  0022F0  EF8D  F011         	goto	l3253
  1807  0022F4                     l3251:
  1808                           
  1809                           ; BSR set to: 0
  1810                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1811  0022F4  C060  F041         	movff	vfprintf@fp,vfpfcnvrt@fp
  1812  0022F8  C061  F042         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1813  0022FC  0E57               	movlw	low vfprintf@cfmt
  1814  0022FE  6E43               	movwf	vfpfcnvrt@fmt^0,c
  1815  002300  0E00               	movlw	high vfprintf@cfmt
  1816  002302  6E44               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1817  002304  C064  F045         	movff	vfprintf@ap,vfpfcnvrt@ap
  1818  002308  C065  F046         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1819  00230C  ECEC  F009         	call	_vfpfcnvrt	;wreg free
  1820  002310  5041               	movf	?_vfpfcnvrt^0,w,c
  1821  002312  0100               	movlb	0	; () banked
  1822  002314  27F3               	addwf	_nout& (0+255),f,b
  1823  002316  5042               	movf	(?_vfpfcnvrt+1)^0,w,c
  1824  002318  23F4               	addwfc	(_nout+1)& (0+255),f,b
  1825  00231A                     l3253:
  1826                           
  1827                           ; BSR set to: 0
  1828                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1829  00231A  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  1830  00231E  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1831  002322                     	if	0	;tblptru may be non-zero
  1832  002322                     	endif
  1833  002322                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1834  002322  0E00               	movlw	low (__mediumconst shr (0+16))
  1835  002324  6EF8               	movwf	tblptru,c
  1836  002326                     	endif
  1837  002326  0008               	tblrd		*
  1838  002328  50F5               	movf	tablat,w,c
  1839  00232A  0900               	iorlw	0
  1840  00232C  A4D8               	btfss	status,2,c
  1841  00232E  EF9B  F011         	goto	u3721
  1842  002332  EF9D  F011         	goto	u3720
  1843  002336                     u3721:
  1844  002336  EF7A  F011         	goto	l3251
  1845  00233A                     u3720:
  1846  00233A                     
  1847                           ; BSR set to: 0
  1848                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1849  00233A  C0F3  F060         	movff	_nout,?_vfprintf
  1850  00233E  C0F4  F061         	movff	_nout+1,?_vfprintf+1
  1851  002342                     
  1852                           ; BSR set to: 0
  1853  002342  0012               	return		;funcret
  1854  002344                     __end_of_vfprintf:
  1855                           	callstack 0
  1856                           
  1857 ;; *************** function _vfpfcnvrt *****************
  1858 ;; Defined at:
  1859 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
  1862 ;;		 -> sprintf@f(6), 
  1863 ;;  fmt             2   66[COMRAM] PTR PTR unsigned char 
  1864 ;;		 -> vfprintf@cfmt(2), 
  1865 ;;  ap              2   68[COMRAM] PTR PTR void 
  1866 ;;		 -> sprintf@ap(2), 
  1867 ;; Auto vars:     Size  Location     Type
  1868 ;;  ll              8   74[COMRAM] long long 
  1869 ;;  llu             8    0        unsigned long long 
  1870 ;;  f               4    0        unsigned long long 
  1871 ;;  vp              3    0        PTR void 
  1872 ;;  ct              3    0        unsigned char [3]
  1873 ;;  cp              3    0        PTR unsigned char 
  1874 ;;  done            2   82[COMRAM] int 
  1875 ;;  i               2    0        int 
  1876 ;;  c               1    0        unsigned char 
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  2   64[COMRAM] int 
  1879 ;; Registers used:
  1880 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1886 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1887 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1888 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1889 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1890 ;;Total ram usage:       22 bytes
  1891 ;; Hardware stack levels used: 1
  1892 ;; Hardware stack levels required when called: 6
  1893 ;; This function calls:
  1894 ;;		_atoi
  1895 ;;		_dtoa
  1896 ;;		_fputc
  1897 ;;		_isdigit
  1898 ;; This function is called by:
  1899 ;;		_vfprintf
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           	psect	text3
  1904  0013D8                     __ptext3:
  1905                           	callstack 0
  1906  0013D8                     _vfpfcnvrt:
  1907                           	callstack 22
  1908  0013D8                     
  1909                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1910  0013D8  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1911  0013DC  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1912  0013E0  CFDE FFF6          	movff	postinc2,tblptrl
  1913  0013E4  CFDD FFF7          	movff	postdec2,tblptrh
  1914  0013E8                     	if	0	;tblptru may be non-zero
  1915  0013E8                     	endif
  1916  0013E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1917  0013E8  0E00               	movlw	low (__mediumconst shr (0+16))
  1918  0013EA  6EF8               	movwf	tblptru,c
  1919  0013EC                     	endif
  1920  0013EC  0008               	tblrd		*
  1921  0013EE  50F5               	movf	tablat,w,c
  1922  0013F0  0A25               	xorlw	37
  1923  0013F2  A4D8               	btfss	status,2,c
  1924  0013F4  EFFE  F009         	goto	u3611
  1925  0013F8  EF00  F00A         	goto	u3610
  1926  0013FC                     u3611:
  1927  0013FC  EF94  F00B         	goto	l3235
  1928  001400                     u3610:
  1929  001400                     
  1930                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1931  001400  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1932  001404  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1933  001408  2ADE               	incf	postinc2,f,c
  1934  00140A  0E00               	movlw	0
  1935  00140C  22DD               	addwfc	postdec2,f,c
  1936  00140E                     
  1937                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1938  00140E  0E00               	movlw	0
  1939  001410  0100               	movlb	0	; () banked
  1940  001412  6FF6               	movwf	(_width+1)& (0+255),b
  1941  001414  0E00               	movlw	0
  1942  001416  6FF5               	movwf	_width& (0+255),b
  1943  001418  C0F5  F059         	movff	_width,_flags
  1944  00141C  C0F6  F05A         	movff	_width+1,_flags+1
  1945  001420                     
  1946                           ; BSR set to: 0
  1947                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1948  001420  69F7               	setf	_prec& (0+255),b
  1949  001422  69F8               	setf	(_prec+1)& (0+255),b
  1950  001424                     
  1951                           ; BSR set to: 0
  1952                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  1953  001424  0E00               	movlw	0
  1954  001426  6E54               	movwf	(vfpfcnvrt@done+1)^0,c
  1955  001428  0E00               	movlw	0
  1956  00142A  6E53               	movwf	vfpfcnvrt@done^0,c
  1957                           
  1958                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1959  00142C  EF60  F00A         	goto	l3187
  1960  001430                     l3161:
  1961                           
  1962                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  1963  001430  8059               	bsf	_flags^0,0,c
  1964  001432                     l3163:
  1965                           
  1966                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  1967  001432  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1968  001436  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1969  00143A  2ADE               	incf	postinc2,f,c
  1970  00143C  0E00               	movlw	0
  1971  00143E  22DD               	addwfc	postdec2,f,c
  1972                           
  1973                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  1974  001440  EF60  F00A         	goto	l3187
  1975  001444                     l3165:
  1976                           
  1977                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  1978  001444  8259               	bsf	_flags^0,1,c
  1979  001446  EF19  F00A         	goto	l3163
  1980  00144A                     l3169:
  1981                           
  1982                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  1983  00144A  8459               	bsf	_flags^0,2,c
  1984  00144C  EF19  F00A         	goto	l3163
  1985  001450                     l3173:
  1986                           
  1987                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  1988  001450  8659               	bsf	_flags^0,3,c
  1989  001452  EF19  F00A         	goto	l3163
  1990  001456                     l3177:
  1991                           
  1992                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  1993  001456  8859               	bsf	_flags^0,4,c
  1994  001458  EF19  F00A         	goto	l3163
  1995  00145C                     l3181:
  1996                           
  1997                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  1998  00145C  0E00               	movlw	0
  1999  00145E  6E54               	movwf	(vfpfcnvrt@done+1)^0,c
  2000  001460  0E01               	movlw	1
  2001  001462  6E53               	movwf	vfpfcnvrt@done^0,c
  2002                           
  2003                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  2004  001464  EF60  F00A         	goto	l3187
  2005  001468                     l3185:
  2006  001468  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2007  00146C  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2008  001470  CFDE FFF6          	movff	postinc2,tblptrl
  2009  001474  CFDD FFF7          	movff	postdec2,tblptrh
  2010  001478                     	if	0	;tblptru may be non-zero
  2011  001478                     	endif
  2012  001478                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2013  001478  0E00               	movlw	low (__mediumconst shr (0+16))
  2014  00147A  6EF8               	movwf	tblptru,c
  2015  00147C                     	endif
  2016  00147C  0008               	tblrd		*
  2017  00147E  50F5               	movf	tablat,w,c
  2018  001480  6E47               	movwf	??_vfpfcnvrt^0,c
  2019  001482  6A48               	clrf	(??_vfpfcnvrt+1)^0,c
  2020                           
  2021                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2022                           ; Switch size 1, requested type "simple"
  2023                           ; Number of cases is 1, Range of values is 0 to 0
  2024                           ; switch strategies available:
  2025                           ; Name         Instructions Cycles
  2026                           ; simple_byte            4     3 (average)
  2027                           ;	Chosen strategy is simple_byte
  2028  001484  5048               	movf	(??_vfpfcnvrt+1)^0,w,c
  2029  001486  0A00               	xorlw	0	; case 0
  2030  001488  B4D8               	btfsc	status,2,c
  2031  00148A  EF49  F00A         	goto	l3499
  2032  00148E  EF2E  F00A         	goto	l3181
  2033  001492                     l3499:
  2034                           
  2035                           ; Switch size 1, requested type "simple"
  2036                           ; Number of cases is 5, Range of values is 32 to 48
  2037                           ; switch strategies available:
  2038                           ; Name         Instructions Cycles
  2039                           ; simple_byte           16     9 (average)
  2040                           ;	Chosen strategy is simple_byte
  2041  001492  5047               	movf	??_vfpfcnvrt^0,w,c
  2042  001494  0A20               	xorlw	32	; case 32
  2043  001496  B4D8               	btfsc	status,2,c
  2044  001498  EF28  F00A         	goto	l3173
  2045  00149C  0A03               	xorlw	3	; case 35
  2046  00149E  B4D8               	btfsc	status,2,c
  2047  0014A0  EF2B  F00A         	goto	l3177
  2048  0014A4  0A08               	xorlw	8	; case 43
  2049  0014A6  B4D8               	btfsc	status,2,c
  2050  0014A8  EF25  F00A         	goto	l3169
  2051  0014AC  0A06               	xorlw	6	; case 45
  2052  0014AE  B4D8               	btfsc	status,2,c
  2053  0014B0  EF18  F00A         	goto	l3161
  2054  0014B4  0A1D               	xorlw	29	; case 48
  2055  0014B6  B4D8               	btfsc	status,2,c
  2056  0014B8  EF22  F00A         	goto	l3165
  2057  0014BC  EF2E  F00A         	goto	l3181
  2058  0014C0                     l3187:
  2059                           
  2060                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2061  0014C0  5053               	movf	vfpfcnvrt@done^0,w,c
  2062  0014C2  1054               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  2063  0014C4  B4D8               	btfsc	status,2,c
  2064  0014C6  EF67  F00A         	goto	u3621
  2065  0014CA  EF69  F00A         	goto	u3620
  2066  0014CE                     u3621:
  2067  0014CE  EF34  F00A         	goto	l3185
  2068  0014D2                     u3620:
  2069  0014D2                     
  2070                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  2071  0014D2  A059               	btfss	_flags^0,0,c
  2072  0014D4  EF6E  F00A         	goto	u3631
  2073  0014D8  EF70  F00A         	goto	u3630
  2074  0014DC                     u3631:
  2075  0014DC  EF71  F00A         	goto	l3191
  2076  0014E0                     u3630:
  2077  0014E0                     
  2078                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  2079  0014E0  9259               	bcf	_flags^0,1,c
  2080  0014E2                     l3191:
  2081                           
  2082                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  2083  0014E2  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2084  0014E6  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2085  0014EA  CFDE FFF6          	movff	postinc2,tblptrl
  2086  0014EE  CFDD FFF7          	movff	postdec2,tblptrh
  2087  0014F2                     	if	0	;tblptru may be non-zero
  2088  0014F2                     	endif
  2089  0014F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2090  0014F2  0E00               	movlw	low (__mediumconst shr (0+16))
  2091  0014F4  6EF8               	movwf	tblptru,c
  2092  0014F6                     	endif
  2093  0014F6  0008               	tblrd		*
  2094  0014F8  50F5               	movf	tablat,w,c
  2095  0014FA  0A2A               	xorlw	42
  2096  0014FC  A4D8               	btfss	status,2,c
  2097  0014FE  EF83  F00A         	goto	u3641
  2098  001502  EF85  F00A         	goto	u3640
  2099  001506                     u3641:
  2100  001506  EFAF  F00A         	goto	l3199
  2101  00150A                     u3640:
  2102  00150A                     
  2103                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  2104  00150A  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2105  00150E  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2106  001512  2ADE               	incf	postinc2,f,c
  2107  001514  0E00               	movlw	0
  2108  001516  22DD               	addwfc	postdec2,f,c
  2109                           
  2110                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2111  001518  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2112  00151C  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2113  001520  CFDF F047          	movff	indf2,??_vfpfcnvrt
  2114  001524  0E02               	movlw	2
  2115  001526  26DE               	addwf	postinc2,f,c
  2116  001528  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  2117  00152C  0E00               	movlw	0
  2118  00152E  22DD               	addwfc	postdec2,f,c
  2119  001530  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2120  001534  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2121  001538  CFDE F0F5          	movff	postinc2,_width
  2122  00153C  CFDD F0F6          	movff	postdec2,_width+1
  2123  001540                     
  2124                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  2125  001540  0100               	movlb	0	; () banked
  2126  001542  BFF6               	btfsc	(_width+1)& (0+255),7,b
  2127  001544  EFA8  F00A         	goto	u3650
  2128  001548  EFA6  F00A         	goto	u3651
  2129  00154C                     u3651:
  2130  00154C  EFF4  F00A         	goto	l3209
  2131  001550                     u3650:
  2132  001550                     
  2133                           ; BSR set to: 0
  2134                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2135  001550  8059               	bsf	_flags^0,0,c
  2136                           
  2137                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2138  001552  6DF5               	negf	_width& (0+255),b
  2139  001554  1FF6               	comf	(_width+1)& (0+255),f,b
  2140  001556  B0D8               	btfsc	status,0,c
  2141  001558  2BF6               	incf	(_width+1)& (0+255),f,b
  2142  00155A  EFF4  F00A         	goto	l3209
  2143  00155E                     l3199:
  2144                           
  2145                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2146  00155E  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2147  001562  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2148  001566  CFDE F009          	movff	postinc2,atoi@s
  2149  00156A  CFDD F00A          	movff	postdec2,atoi@s+1
  2150  00156E  EC22  F00D         	call	_atoi	;wreg free
  2151  001572  C009  F0F5         	movff	?_atoi,_width
  2152  001576  C00A  F0F6         	movff	?_atoi+1,_width+1
  2153                           
  2154                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2155  00157A  EFC6  F00A         	goto	l3203
  2156  00157E                     l3201:
  2157                           
  2158                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2159  00157E  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2160  001582  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2161  001586  2ADE               	incf	postinc2,f,c
  2162  001588  0E00               	movlw	0
  2163  00158A  22DD               	addwfc	postdec2,f,c
  2164  00158C                     l3203:
  2165  00158C  0ED0               	movlw	208
  2166  00158E  6E47               	movwf	??_vfpfcnvrt^0,c
  2167  001590  0EFF               	movlw	255
  2168  001592  6E48               	movwf	(??_vfpfcnvrt+1)^0,c
  2169  001594  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2170  001598  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2171  00159C  CFDE FFF6          	movff	postinc2,tblptrl
  2172  0015A0  CFDD FFF7          	movff	postdec2,tblptrh
  2173  0015A4                     	if	0	;tblptru may be non-zero
  2174  0015A4                     	endif
  2175  0015A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2176  0015A4  0E00               	movlw	low (__mediumconst shr (0+16))
  2177  0015A6  6EF8               	movwf	tblptru,c
  2178  0015A8                     	endif
  2179  0015A8  0008               	tblrd		*
  2180  0015AA  50F5               	movf	tablat,w,c
  2181  0015AC  6E49               	movwf	(??_vfpfcnvrt+2)^0,c
  2182  0015AE  6A4A               	clrf	(??_vfpfcnvrt+3)^0,c
  2183  0015B0  5047               	movf	??_vfpfcnvrt^0,w,c
  2184  0015B2  2649               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2185  0015B4  5048               	movf	(??_vfpfcnvrt+1)^0,w,c
  2186  0015B6  224A               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2187  0015B8  504A               	movf	(??_vfpfcnvrt+3)^0,w,c
  2188  0015BA  E10A               	bnz	u3660
  2189  0015BC  0E0A               	movlw	10
  2190  0015BE  5C49               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2191  0015C0  A0D8               	btfss	status,0,c
  2192  0015C2  EFE5  F00A         	goto	u3661
  2193  0015C6  EFE8  F00A         	goto	u3660
  2194  0015CA                     u3661:
  2195  0015CA  0E01               	movlw	1
  2196  0015CC  EFE9  F00A         	goto	u3670
  2197  0015D0                     u3660:
  2198  0015D0  0E00               	movlw	0
  2199  0015D2                     u3670:
  2200  0015D2  6E55               	movwf	_vfpfcnvrt$1762^0,c
  2201  0015D4  6A56               	clrf	(_vfpfcnvrt$1762+1)^0,c
  2202  0015D6  5055               	movf	_vfpfcnvrt$1762^0,w,c
  2203  0015D8  1056               	iorwf	(_vfpfcnvrt$1762+1)^0,w,c
  2204  0015DA  A4D8               	btfss	status,2,c
  2205  0015DC  EFF2  F00A         	goto	u3681
  2206  0015E0  EFF4  F00A         	goto	u3680
  2207  0015E4                     u3681:
  2208  0015E4  EFBF  F00A         	goto	l3201
  2209  0015E8                     u3680:
  2210  0015E8                     l3209:
  2211                           
  2212                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2213  0015E8  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2214  0015EC  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2215  0015F0  CFDE FFF6          	movff	postinc2,tblptrl
  2216  0015F4  CFDD FFF7          	movff	postdec2,tblptrh
  2217  0015F8                     	if	0	;tblptru may be non-zero
  2218  0015F8                     	endif
  2219  0015F8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2220  0015F8  0E00               	movlw	low (__mediumconst shr (0+16))
  2221  0015FA  6EF8               	movwf	tblptru,c
  2222  0015FC                     	endif
  2223  0015FC  0008               	tblrd		*
  2224  0015FE  50F5               	movf	tablat,w,c
  2225  001600  0A64               	xorlw	100
  2226  001602  B4D8               	btfsc	status,2,c
  2227  001604  EF06  F00B         	goto	u3691
  2228  001608  EF08  F00B         	goto	u3690
  2229  00160C                     u3691:
  2230  00160C  EF1C  F00B         	goto	l3213
  2231  001610                     u3690:
  2232  001610  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2233  001614  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2234  001618  CFDE FFF6          	movff	postinc2,tblptrl
  2235  00161C  CFDD FFF7          	movff	postdec2,tblptrh
  2236  001620                     	if	0	;tblptru may be non-zero
  2237  001620                     	endif
  2238  001620                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2239  001620  0E00               	movlw	low (__mediumconst shr (0+16))
  2240  001622  6EF8               	movwf	tblptru,c
  2241  001624                     	endif
  2242  001624  0008               	tblrd		*
  2243  001626  50F5               	movf	tablat,w,c
  2244  001628  0A69               	xorlw	105
  2245  00162A  A4D8               	btfss	status,2,c
  2246  00162C  EF1A  F00B         	goto	u3701
  2247  001630  EF1C  F00B         	goto	u3700
  2248  001634                     u3701:
  2249  001634  EF5C  F00B         	goto	l3219
  2250  001638                     u3700:
  2251  001638                     l3213:
  2252                           
  2253                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2254  001638  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2255  00163C  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2256  001640  2ADE               	incf	postinc2,f,c
  2257  001642  0E00               	movlw	0
  2258  001644  22DD               	addwfc	postdec2,f,c
  2259                           
  2260                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2261  001646  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2262  00164A  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2263  00164E  CFDF F047          	movff	indf2,??_vfpfcnvrt
  2264  001652  0E02               	movlw	2
  2265  001654  26DE               	addwf	postinc2,f,c
  2266  001656  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  2267  00165A  0E00               	movlw	0
  2268  00165C  22DD               	addwfc	postdec2,f,c
  2269  00165E  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2270  001662  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2271  001666  CFDE F04B          	movff	postinc2,vfpfcnvrt@ll
  2272  00166A  CFDD F04C          	movff	postdec2,vfpfcnvrt@ll+1
  2273  00166E  0E00               	movlw	0
  2274  001670  BE4C               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2275  001672  0EFF               	movlw	-1
  2276  001674  6E4D               	movwf	(vfpfcnvrt@ll+2)^0,c
  2277  001676  6E4E               	movwf	(vfpfcnvrt@ll+3)^0,c
  2278  001678  6E4F               	movwf	(vfpfcnvrt@ll+4)^0,c
  2279  00167A  6E50               	movwf	(vfpfcnvrt@ll+5)^0,c
  2280  00167C  6E51               	movwf	(vfpfcnvrt@ll+6)^0,c
  2281  00167E  6E52               	movwf	(vfpfcnvrt@ll+7)^0,c
  2282  001680                     
  2283                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2284  001680  C041  F01D         	movff	vfpfcnvrt@fp,dtoa@fp
  2285  001684  C042  F01E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2286  001688  C04B  F01F         	movff	vfpfcnvrt@ll,dtoa@d
  2287  00168C  C04C  F020         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2288  001690  C04D  F021         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2289  001694  C04E  F022         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2290  001698  C04F  F023         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2291  00169C  C050  F024         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2292  0016A0  C051  F025         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2293  0016A4  C052  F026         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2294  0016A8  ECB2  F00B         	call	_dtoa	;wreg free
  2295  0016AC  C01D  F041         	movff	?_dtoa,?_vfpfcnvrt
  2296  0016B0  C01E  F042         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2297  0016B4  EFB1  F00B         	goto	l1037
  2298  0016B8                     l3219:
  2299                           
  2300                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2301  0016B8  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2302  0016BC  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2303  0016C0  CFDE FFF6          	movff	postinc2,tblptrl
  2304  0016C4  CFDD FFF7          	movff	postdec2,tblptrh
  2305  0016C8                     	if	0	;tblptru may be non-zero
  2306  0016C8                     	endif
  2307  0016C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2308  0016C8  0E00               	movlw	low (__mediumconst shr (0+16))
  2309  0016CA  6EF8               	movwf	tblptru,c
  2310  0016CC                     	endif
  2311  0016CC  0008               	tblrd		*
  2312  0016CE  50F5               	movf	tablat,w,c
  2313  0016D0  0A25               	xorlw	37
  2314  0016D2  A4D8               	btfss	status,2,c
  2315  0016D4  EF6E  F00B         	goto	u3711
  2316  0016D8  EF70  F00B         	goto	u3710
  2317  0016DC                     u3711:
  2318  0016DC  EF87  F00B         	goto	l3229
  2319  0016E0                     u3710:
  2320  0016E0                     
  2321                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2322  0016E0  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2323  0016E4  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2324  0016E8  2ADE               	incf	postinc2,f,c
  2325  0016EA  0E00               	movlw	0
  2326  0016EC  22DD               	addwfc	postdec2,f,c
  2327  0016EE                     
  2328                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2329  0016EE  0E00               	movlw	0
  2330  0016F0  6E03               	movwf	(fputc@c+1)^0,c
  2331  0016F2  0E25               	movlw	37
  2332  0016F4  6E02               	movwf	fputc@c^0,c
  2333  0016F6  C041  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2334  0016FA  C042  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2335  0016FE  ECD7  F00F         	call	_fputc	;wreg free
  2336  001702                     l3225:
  2337                           
  2338                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2339  001702  0E00               	movlw	0
  2340  001704  6E42               	movwf	(?_vfpfcnvrt+1)^0,c
  2341  001706  0E01               	movlw	1
  2342  001708  6E41               	movwf	?_vfpfcnvrt^0,c
  2343  00170A  EFB1  F00B         	goto	l1037
  2344  00170E                     l3229:
  2345                           
  2346                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2347  00170E  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2348  001712  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2349  001716  2ADE               	incf	postinc2,f,c
  2350  001718  0E00               	movlw	0
  2351  00171A  22DD               	addwfc	postdec2,f,c
  2352  00171C                     
  2353                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2354  00171C  0E00               	movlw	0
  2355  00171E  6E42               	movwf	(?_vfpfcnvrt+1)^0,c
  2356  001720  0E00               	movlw	0
  2357  001722  6E41               	movwf	?_vfpfcnvrt^0,c
  2358  001724  EFB1  F00B         	goto	l1037
  2359  001728                     l3235:
  2360                           
  2361                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2362  001728  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2363  00172C  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2364  001730  CFDE FFF6          	movff	postinc2,tblptrl
  2365  001734  CFDD FFF7          	movff	postdec2,tblptrh
  2366  001738                     	if	0	;tblptru may be non-zero
  2367  001738                     	endif
  2368  001738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2369  001738  0E00               	movlw	low (__mediumconst shr (0+16))
  2370  00173A  6EF8               	movwf	tblptru,c
  2371  00173C                     	endif
  2372  00173C  0008               	tblrd		*
  2373  00173E  50F5               	movf	tablat,w,c
  2374  001740  6E02               	movwf	fputc@c^0,c
  2375  001742  6A03               	clrf	(fputc@c+1)^0,c
  2376  001744  C041  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2377  001748  C042  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2378  00174C  ECD7  F00F         	call	_fputc	;wreg free
  2379  001750                     
  2380                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2381  001750  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2382  001754  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2383  001758  2ADE               	incf	postinc2,f,c
  2384  00175A  0E00               	movlw	0
  2385  00175C  22DD               	addwfc	postdec2,f,c
  2386  00175E  EF81  F00B         	goto	l3225
  2387  001762                     l1037:
  2388  001762  0012               	return		;funcret
  2389  001764                     __end_of_vfpfcnvrt:
  2390                           	callstack 0
  2391                           
  2392 ;; *************** function _dtoa *****************
  2393 ;; Defined at:
  2394 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  2397 ;;		 -> sprintf@f(6), 
  2398 ;;  d               8   30[COMRAM] long long 
  2399 ;; Auto vars:     Size  Location     Type
  2400 ;;  n               8   54[COMRAM] long long 
  2401 ;;  i               2   62[COMRAM] int 
  2402 ;;  s               2   52[COMRAM] int 
  2403 ;;  w               2   50[COMRAM] int 
  2404 ;;  p               2   48[COMRAM] int 
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  2   28[COMRAM] int 
  2407 ;; Registers used:
  2408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2414 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2415 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2416 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2417 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2418 ;;Total ram usage:       36 bytes
  2419 ;; Hardware stack levels used: 1
  2420 ;; Hardware stack levels required when called: 5
  2421 ;; This function calls:
  2422 ;;		___aodiv
  2423 ;;		___aomod
  2424 ;;		_abs
  2425 ;;		_pad
  2426 ;; This function is called by:
  2427 ;;		_vfpfcnvrt
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           
  2431                           	psect	text4
  2432  001764                     __ptext4:
  2433                           	callstack 0
  2434  001764                     _dtoa:
  2435                           	callstack 22
  2436  001764                     
  2437                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2438  001764  C01F  F037         	movff	dtoa@d,dtoa@n
  2439  001768  C020  F038         	movff	dtoa@d+1,dtoa@n+1
  2440  00176C  C021  F039         	movff	dtoa@d+2,dtoa@n+2
  2441  001770  C022  F03A         	movff	dtoa@d+3,dtoa@n+3
  2442  001774  C023  F03B         	movff	dtoa@d+4,dtoa@n+4
  2443  001778  C024  F03C         	movff	dtoa@d+5,dtoa@n+5
  2444  00177C  C025  F03D         	movff	dtoa@d+6,dtoa@n+6
  2445  001780  C026  F03E         	movff	dtoa@d+7,dtoa@n+7
  2446  001784                     
  2447                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2448  001784  BE3E               	btfsc	(dtoa@n+7)^0,7,c
  2449  001786  EFC7  F00B         	goto	u3391
  2450  00178A  EFCA  F00B         	goto	u3390
  2451  00178E                     u3391:
  2452  00178E  0E01               	movlw	1
  2453  001790  EFCB  F00B         	goto	u3400
  2454  001794                     u3390:
  2455  001794  0E00               	movlw	0
  2456  001796                     u3400:
  2457  001796  6E35               	movwf	dtoa@s^0,c
  2458  001798  6A36               	clrf	(dtoa@s+1)^0,c
  2459                           
  2460                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2461  00179A  5035               	movf	dtoa@s^0,w,c
  2462  00179C  1036               	iorwf	(dtoa@s+1)^0,w,c
  2463  00179E  B4D8               	btfsc	status,2,c
  2464  0017A0  EFD4  F00B         	goto	u3411
  2465  0017A4  EFD6  F00B         	goto	u3410
  2466  0017A8                     u3411:
  2467  0017A8  EFE6  F00B         	goto	l3053
  2468  0017AC                     u3410:
  2469  0017AC                     
  2470                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2471  0017AC  1E3E               	comf	(dtoa@n+7)^0,f,c
  2472  0017AE  1E3D               	comf	(dtoa@n+6)^0,f,c
  2473  0017B0  1E3C               	comf	(dtoa@n+5)^0,f,c
  2474  0017B2  1E3B               	comf	(dtoa@n+4)^0,f,c
  2475  0017B4  1E3A               	comf	(dtoa@n+3)^0,f,c
  2476  0017B6  1E39               	comf	(dtoa@n+2)^0,f,c
  2477  0017B8  1E38               	comf	(dtoa@n+1)^0,f,c
  2478  0017BA  6C37               	negf	dtoa@n^0,c
  2479  0017BC  0E00               	movlw	0
  2480  0017BE  2238               	addwfc	(dtoa@n+1)^0,f,c
  2481  0017C0  2239               	addwfc	(dtoa@n+2)^0,f,c
  2482  0017C2  223A               	addwfc	(dtoa@n+3)^0,f,c
  2483  0017C4  223B               	addwfc	(dtoa@n+4)^0,f,c
  2484  0017C6  223C               	addwfc	(dtoa@n+5)^0,f,c
  2485  0017C8  223D               	addwfc	(dtoa@n+6)^0,f,c
  2486  0017CA  223E               	addwfc	(dtoa@n+7)^0,f,c
  2487  0017CC                     l3053:
  2488                           
  2489                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2490  0017CC  0100               	movlb	0	; () banked
  2491  0017CE  BFF8               	btfsc	(_prec+1)& (0+255),7,b
  2492  0017D0  EFEC  F00B         	goto	u3421
  2493  0017D4  EFEE  F00B         	goto	u3420
  2494  0017D8                     u3421:
  2495  0017D8  EFEF  F00B         	goto	l3057
  2496  0017DC                     u3420:
  2497  0017DC                     
  2498                           ; BSR set to: 0
  2499                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2500  0017DC  9259               	bcf	_flags^0,1,c
  2501  0017DE                     l3057:
  2502                           
  2503                           ; BSR set to: 0
  2504                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2505  0017DE  BFF8               	btfsc	(_prec+1)& (0+255),7,b
  2506  0017E0  EFFC  F00B         	goto	u3430
  2507  0017E4  51F8               	movf	(_prec+1)& (0+255),w,b
  2508  0017E6  E106               	bnz	u3431
  2509  0017E8  05F7               	decf	_prec& (0+255),w,b
  2510  0017EA  B0D8               	btfsc	status,0,c
  2511  0017EC  EFFA  F00B         	goto	u3431
  2512  0017F0  EFFC  F00B         	goto	u3430
  2513  0017F4                     u3431:
  2514  0017F4  EF02  F00C         	goto	l988
  2515  0017F8                     u3430:
  2516  0017F8                     
  2517                           ; BSR set to: 0
  2518  0017F8  0E00               	movlw	0
  2519  0017FA  6E32               	movwf	(dtoa@p+1)^0,c
  2520  0017FC  0E01               	movlw	1
  2521  0017FE  6E31               	movwf	dtoa@p^0,c
  2522  001800  EF06  F00C         	goto	l990
  2523  001804                     l988:
  2524                           
  2525                           ; BSR set to: 0
  2526  001804  C0F7  F031         	movff	_prec,dtoa@p
  2527  001808  C0F8  F032         	movff	_prec+1,dtoa@p+1
  2528  00180C                     l990:
  2529                           
  2530                           ; BSR set to: 0
  2531                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2532  00180C  C0F5  F033         	movff	_width,dtoa@w
  2533  001810  C0F6  F034         	movff	_width+1,dtoa@w+1
  2534  001814                     
  2535                           ; BSR set to: 0
  2536                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2537  001814  5035               	movf	dtoa@s^0,w,c
  2538  001816  1036               	iorwf	(dtoa@s+1)^0,w,c
  2539  001818  A4D8               	btfss	status,2,c
  2540  00181A  EF11  F00C         	goto	u3441
  2541  00181E  EF13  F00C         	goto	u3440
  2542  001822                     u3441:
  2543  001822  EF1A  F00C         	goto	l3065
  2544  001826                     u3440:
  2545  001826                     
  2546                           ; BSR set to: 0
  2547  001826  A459               	btfss	_flags^0,2,c
  2548  001828  EF18  F00C         	goto	u3451
  2549  00182C  EF1A  F00C         	goto	u3450
  2550  001830                     u3451:
  2551  001830  EF1D  F00C         	goto	l3067
  2552  001834                     u3450:
  2553  001834                     l3065:
  2554                           
  2555                           ; BSR set to: 0
  2556                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  2557  001834  0633               	decf	dtoa@w^0,f,c
  2558  001836  A0D8               	btfss	status,0,c
  2559  001838  0634               	decf	(dtoa@w+1)^0,f,c
  2560  00183A                     l3067:
  2561                           
  2562                           ; BSR set to: 0
  2563                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2564  00183A  0E00               	movlw	0
  2565  00183C  6E40               	movwf	(dtoa@i+1)^0,c
  2566  00183E  0E1F               	movlw	31
  2567  001840  6E3F               	movwf	dtoa@i^0,c
  2568  001842                     
  2569                           ; BSR set to: 0
  2570                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2571  001842  0E00               	movlw	0
  2572  001844  0101               	movlb	1	; () banked
  2573  001846  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2574                           
  2575                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2576  001848  EFA2  F00C         	goto	l3081
  2577  00184C                     l3071:
  2578                           
  2579                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  2580  00184C  063F               	decf	dtoa@i^0,f,c
  2581  00184E  A0D8               	btfss	status,0,c
  2582  001850  0640               	decf	(dtoa@i+1)^0,f,c
  2583  001852                     
  2584                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2585  001852  0E00               	movlw	low _dbuf
  2586  001854  243F               	addwf	dtoa@i^0,w,c
  2587  001856  6ED9               	movwf	fsr2l,c
  2588  001858  0E01               	movlw	high _dbuf
  2589  00185A  2040               	addwfc	(dtoa@i+1)^0,w,c
  2590  00185C  6EDA               	movwf	fsr2h,c
  2591  00185E  C037  F002         	movff	dtoa@n,___aomod@dividend
  2592  001862  C038  F003         	movff	dtoa@n+1,___aomod@dividend+1
  2593  001866  C039  F004         	movff	dtoa@n+2,___aomod@dividend+2
  2594  00186A  C03A  F005         	movff	dtoa@n+3,___aomod@dividend+3
  2595  00186E  C03B  F006         	movff	dtoa@n+4,___aomod@dividend+4
  2596  001872  C03C  F007         	movff	dtoa@n+5,___aomod@dividend+5
  2597  001876  C03D  F008         	movff	dtoa@n+6,___aomod@dividend+6
  2598  00187A  C03E  F009         	movff	dtoa@n+7,___aomod@dividend+7
  2599  00187E  0E0A               	movlw	10
  2600  001880  6E0A               	movwf	___aomod@divisor^0,c
  2601  001882  0E00               	movlw	0
  2602  001884  6E0B               	movwf	(___aomod@divisor+1)^0,c
  2603  001886  0E00               	movlw	0
  2604  001888  6E0C               	movwf	(___aomod@divisor+2)^0,c
  2605  00188A  0E00               	movlw	0
  2606  00188C  6E0D               	movwf	(___aomod@divisor+3)^0,c
  2607  00188E  0E00               	movlw	0
  2608  001890  6E0E               	movwf	(___aomod@divisor+4)^0,c
  2609  001892  0E00               	movlw	0
  2610  001894  6E0F               	movwf	(___aomod@divisor+5)^0,c
  2611  001896  0E00               	movlw	0
  2612  001898  6E10               	movwf	(___aomod@divisor+6)^0,c
  2613  00189A  0E00               	movlw	0
  2614  00189C  6E11               	movwf	(___aomod@divisor+7)^0,c
  2615  00189E  ECB8  F00E         	call	___aomod	;wreg free
  2616  0018A2  C002  F027         	movff	?___aomod,??_dtoa
  2617  0018A6  C003  F028         	movff	?___aomod+1,??_dtoa+1
  2618  0018AA  C004  F029         	movff	?___aomod+2,??_dtoa+2
  2619  0018AE  C005  F02A         	movff	?___aomod+3,??_dtoa+3
  2620  0018B2  C006  F02B         	movff	?___aomod+4,??_dtoa+4
  2621  0018B6  C007  F02C         	movff	?___aomod+5,??_dtoa+5
  2622  0018BA  C008  F02D         	movff	?___aomod+6,??_dtoa+6
  2623  0018BE  C009  F02E         	movff	?___aomod+7,??_dtoa+7
  2624  0018C2  C027  F014         	movff	??_dtoa,abs@a
  2625  0018C6  C029  F015         	movff	??_dtoa+2,abs@a+1
  2626  0018CA  EC39  F012         	call	_abs	;wreg free
  2627  0018CE  5014               	movf	?_abs^0,w,c
  2628  0018D0  0F30               	addlw	48
  2629  0018D2  6EDF               	movwf	indf2,c
  2630  0018D4                     
  2631                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  2632  0018D4  0631               	decf	dtoa@p^0,f,c
  2633  0018D6  A0D8               	btfss	status,0,c
  2634  0018D8  0632               	decf	(dtoa@p+1)^0,f,c
  2635  0018DA                     
  2636                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  2637  0018DA  0633               	decf	dtoa@w^0,f,c
  2638  0018DC  A0D8               	btfss	status,0,c
  2639  0018DE  0634               	decf	(dtoa@w+1)^0,f,c
  2640  0018E0                     
  2641                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2642  0018E0  C037  F002         	movff	dtoa@n,___aodiv@dividend
  2643  0018E4  C038  F003         	movff	dtoa@n+1,___aodiv@dividend+1
  2644  0018E8  C039  F004         	movff	dtoa@n+2,___aodiv@dividend+2
  2645  0018EC  C03A  F005         	movff	dtoa@n+3,___aodiv@dividend+3
  2646  0018F0  C03B  F006         	movff	dtoa@n+4,___aodiv@dividend+4
  2647  0018F4  C03C  F007         	movff	dtoa@n+5,___aodiv@dividend+5
  2648  0018F8  C03D  F008         	movff	dtoa@n+6,___aodiv@dividend+6
  2649  0018FC  C03E  F009         	movff	dtoa@n+7,___aodiv@dividend+7
  2650  001900  0E0A               	movlw	10
  2651  001902  6E0A               	movwf	___aodiv@divisor^0,c
  2652  001904  0E00               	movlw	0
  2653  001906  6E0B               	movwf	(___aodiv@divisor+1)^0,c
  2654  001908  0E00               	movlw	0
  2655  00190A  6E0C               	movwf	(___aodiv@divisor+2)^0,c
  2656  00190C  0E00               	movlw	0
  2657  00190E  6E0D               	movwf	(___aodiv@divisor+3)^0,c
  2658  001910  0E00               	movlw	0
  2659  001912  6E0E               	movwf	(___aodiv@divisor+4)^0,c
  2660  001914  0E00               	movlw	0
  2661  001916  6E0F               	movwf	(___aodiv@divisor+5)^0,c
  2662  001918  0E00               	movlw	0
  2663  00191A  6E10               	movwf	(___aodiv@divisor+6)^0,c
  2664  00191C  0E00               	movlw	0
  2665  00191E  6E11               	movwf	(___aodiv@divisor+7)^0,c
  2666  001920  ECF4  F00D         	call	___aodiv	;wreg free
  2667  001924  C002  F037         	movff	?___aodiv,dtoa@n
  2668  001928  C003  F038         	movff	?___aodiv+1,dtoa@n+1
  2669  00192C  C004  F039         	movff	?___aodiv+2,dtoa@n+2
  2670  001930  C005  F03A         	movff	?___aodiv+3,dtoa@n+3
  2671  001934  C006  F03B         	movff	?___aodiv+4,dtoa@n+4
  2672  001938  C007  F03C         	movff	?___aodiv+5,dtoa@n+5
  2673  00193C  C008  F03D         	movff	?___aodiv+6,dtoa@n+6
  2674  001940  C009  F03E         	movff	?___aodiv+7,dtoa@n+7
  2675  001944                     l3081:
  2676                           
  2677                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2678  001944  BE40               	btfsc	(dtoa@i+1)^0,7,c
  2679  001946  EFAD  F00C         	goto	u3461
  2680  00194A  5040               	movf	(dtoa@i+1)^0,w,c
  2681  00194C  E108               	bnz	u3460
  2682  00194E  043F               	decf	dtoa@i^0,w,c
  2683  001950  A0D8               	btfss	status,0,c
  2684  001952  EFAD  F00C         	goto	u3461
  2685  001956  EFAF  F00C         	goto	u3460
  2686  00195A                     u3461:
  2687  00195A  EFDF  F00C         	goto	l3091
  2688  00195E                     u3460:
  2689  00195E  5037               	movf	dtoa@n^0,w,c
  2690  001960  1038               	iorwf	(dtoa@n+1)^0,w,c
  2691  001962  1039               	iorwf	(dtoa@n+2)^0,w,c
  2692  001964  103A               	iorwf	(dtoa@n+3)^0,w,c
  2693  001966  103B               	iorwf	(dtoa@n+4)^0,w,c
  2694  001968  103C               	iorwf	(dtoa@n+5)^0,w,c
  2695  00196A  103D               	iorwf	(dtoa@n+6)^0,w,c
  2696  00196C  103E               	iorwf	(dtoa@n+7)^0,w,c
  2697  00196E  A4D8               	btfss	status,2,c
  2698  001970  EFBC  F00C         	goto	u3471
  2699  001974  EFBE  F00C         	goto	u3470
  2700  001978                     u3471:
  2701  001978  EF26  F00C         	goto	l3071
  2702  00197C                     u3470:
  2703  00197C  BE32               	btfsc	(dtoa@p+1)^0,7,c
  2704  00197E  EFCB  F00C         	goto	u3480
  2705  001982  5032               	movf	(dtoa@p+1)^0,w,c
  2706  001984  E106               	bnz	u3481
  2707  001986  0431               	decf	dtoa@p^0,w,c
  2708  001988  B0D8               	btfsc	status,0,c
  2709  00198A  EFC9  F00C         	goto	u3481
  2710  00198E  EFCB  F00C         	goto	u3480
  2711  001992                     u3481:
  2712  001992  EF26  F00C         	goto	l3071
  2713  001996                     u3480:
  2714  001996  BE34               	btfsc	(dtoa@w+1)^0,7,c
  2715  001998  EFD6  F00C         	goto	u3491
  2716  00199C  5034               	movf	(dtoa@w+1)^0,w,c
  2717  00199E  E108               	bnz	u3490
  2718  0019A0  0433               	decf	dtoa@w^0,w,c
  2719  0019A2  A0D8               	btfss	status,0,c
  2720  0019A4  EFD6  F00C         	goto	u3491
  2721  0019A8  EFD8  F00C         	goto	u3490
  2722  0019AC                     u3491:
  2723  0019AC  EFDF  F00C         	goto	l3091
  2724  0019B0                     u3490:
  2725  0019B0  B259               	btfsc	_flags^0,1,c
  2726  0019B2  EFDD  F00C         	goto	u3501
  2727  0019B6  EFDF  F00C         	goto	u3500
  2728  0019BA                     u3501:
  2729  0019BA  EF26  F00C         	goto	l3071
  2730  0019BE                     u3500:
  2731  0019BE                     l3091:
  2732                           
  2733                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2734  0019BE  5035               	movf	dtoa@s^0,w,c
  2735  0019C0  1036               	iorwf	(dtoa@s+1)^0,w,c
  2736  0019C2  A4D8               	btfss	status,2,c
  2737  0019C4  EFE6  F00C         	goto	u3511
  2738  0019C8  EFE8  F00C         	goto	u3510
  2739  0019CC                     u3511:
  2740  0019CC  EFEF  F00C         	goto	l3095
  2741  0019D0                     u3510:
  2742  0019D0  A459               	btfss	_flags^0,2,c
  2743  0019D2  EFED  F00C         	goto	u3521
  2744  0019D6  EFEF  F00C         	goto	u3520
  2745  0019DA                     u3521:
  2746  0019DA  EF0D  F00D         	goto	l3105
  2747  0019DE                     u3520:
  2748  0019DE                     l3095:
  2749                           
  2750                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  2751  0019DE  063F               	decf	dtoa@i^0,f,c
  2752  0019E0  A0D8               	btfss	status,0,c
  2753  0019E2  0640               	decf	(dtoa@i+1)^0,f,c
  2754  0019E4                     
  2755                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2756  0019E4  5035               	movf	dtoa@s^0,w,c
  2757  0019E6  1036               	iorwf	(dtoa@s+1)^0,w,c
  2758  0019E8  A4D8               	btfss	status,2,c
  2759  0019EA  EFF9  F00C         	goto	u3531
  2760  0019EE  EFFB  F00C         	goto	u3530
  2761  0019F2                     u3531:
  2762  0019F2  EF01  F00D         	goto	l3101
  2763  0019F6                     u3530:
  2764  0019F6  0E00               	movlw	0
  2765  0019F8  6E30               	movwf	(_dtoa$1747+1)^0,c
  2766  0019FA  0E2B               	movlw	43
  2767  0019FC  6E2F               	movwf	_dtoa$1747^0,c
  2768  0019FE  EF05  F00D         	goto	l3103
  2769  001A02                     l3101:
  2770  001A02  0E00               	movlw	0
  2771  001A04  6E30               	movwf	(_dtoa$1747+1)^0,c
  2772  001A06  0E2D               	movlw	45
  2773  001A08  6E2F               	movwf	_dtoa$1747^0,c
  2774  001A0A                     l3103:
  2775  001A0A  0E00               	movlw	low _dbuf
  2776  001A0C  243F               	addwf	dtoa@i^0,w,c
  2777  001A0E  6ED9               	movwf	fsr2l,c
  2778  001A10  0E01               	movlw	high _dbuf
  2779  001A12  2040               	addwfc	(dtoa@i+1)^0,w,c
  2780  001A14  6EDA               	movwf	fsr2h,c
  2781  001A16  C02F  FFDF         	movff	_dtoa$1747,indf2
  2782  001A1A                     l3105:
  2783                           
  2784                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2785  001A1A  C01D  F012         	movff	dtoa@fp,pad@fp
  2786  001A1E  C01E  F013         	movff	dtoa@fp+1,pad@fp+1
  2787  001A22  0E00               	movlw	low _dbuf
  2788  001A24  243F               	addwf	dtoa@i^0,w,c
  2789  001A26  6E14               	movwf	pad@buf^0,c
  2790  001A28  0E01               	movlw	high _dbuf
  2791  001A2A  2040               	addwfc	(dtoa@i+1)^0,w,c
  2792  001A2C  6E15               	movwf	(pad@buf+1)^0,c
  2793  001A2E  C033  F016         	movff	dtoa@w,pad@p
  2794  001A32  C034  F017         	movff	dtoa@w+1,pad@p+1
  2795  001A36  ECA0  F010         	call	_pad	;wreg free
  2796  001A3A  C012  F01D         	movff	?_pad,?_dtoa
  2797  001A3E  C013  F01E         	movff	?_pad+1,?_dtoa+1
  2798  001A42  0012               	return		;funcret
  2799  001A44                     __end_of_dtoa:
  2800                           	callstack 0
  2801                           
  2802 ;; *************** function _pad *****************
  2803 ;; Defined at:
  2804 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  2807 ;;		 -> sprintf@f(6), 
  2808 ;;  buf             2   19[COMRAM] PTR unsigned char 
  2809 ;;		 -> dbuf(32), 
  2810 ;;  p               2   21[COMRAM] int 
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;  w               2   26[COMRAM] int 
  2813 ;;  i               2   24[COMRAM] int 
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  2   17[COMRAM] int 
  2816 ;; Registers used:
  2817 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2823 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2824 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2825 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2826 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2827 ;;Total ram usage:       11 bytes
  2828 ;; Hardware stack levels used: 1
  2829 ;; Hardware stack levels required when called: 4
  2830 ;; This function calls:
  2831 ;;		_fputc
  2832 ;;		_fputs
  2833 ;;		_strlen
  2834 ;; This function is called by:
  2835 ;;		_dtoa
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839                           	psect	text5
  2840  002140                     __ptext5:
  2841                           	callstack 0
  2842  002140                     _pad:
  2843                           	callstack 22
  2844  002140                     
  2845                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2846  002140  A059               	btfss	_flags^0,0,c
  2847  002142  EFA5  F010         	goto	u3301
  2848  002146  EFA7  F010         	goto	u3300
  2849  00214A                     u3301:
  2850  00214A  EFB1  F010         	goto	l3009
  2851  00214E                     u3300:
  2852  00214E                     
  2853                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2854  00214E  C014  F00B         	movff	pad@buf,fputs@s
  2855  002152  C015  F00C         	movff	pad@buf+1,fputs@s+1
  2856  002156  C012  F00D         	movff	pad@fp,fputs@fp
  2857  00215A  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  2858  00215E  EC17  F012         	call	_fputs	;wreg free
  2859  002162                     l3009:
  2860                           
  2861                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2862  002162  BE17               	btfsc	(pad@p+1)^0,7,c
  2863  002164  EFB6  F010         	goto	u3311
  2864  002168  EFB8  F010         	goto	u3310
  2865  00216C                     u3311:
  2866  00216C  EFBE  F010         	goto	l3013
  2867  002170                     u3310:
  2868  002170  C016  F01B         	movff	pad@p,pad@w
  2869  002174  C017  F01C         	movff	pad@p+1,pad@w+1
  2870  002178  EFC2  F010         	goto	l977
  2871  00217C                     l3013:
  2872  00217C  0E00               	movlw	0
  2873  00217E  6E1C               	movwf	(pad@w+1)^0,c
  2874  002180  0E00               	movlw	0
  2875  002182  6E1B               	movwf	pad@w^0,c
  2876  002184                     l977:
  2877                           
  2878                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2879  002184  0E00               	movlw	0
  2880  002186  6E1A               	movwf	(pad@i+1)^0,c
  2881  002188  0E00               	movlw	0
  2882  00218A  6E19               	movwf	pad@i^0,c
  2883                           
  2884                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2885  00218C  EFD4  F010         	goto	l3019
  2886  002190                     l3015:
  2887                           
  2888                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2889  002190  0E00               	movlw	0
  2890  002192  6E03               	movwf	(fputc@c+1)^0,c
  2891  002194  0E20               	movlw	32
  2892  002196  6E02               	movwf	fputc@c^0,c
  2893  002198  C012  F004         	movff	pad@fp,fputc@fp
  2894  00219C  C013  F005         	movff	pad@fp+1,fputc@fp+1
  2895  0021A0  ECD7  F00F         	call	_fputc	;wreg free
  2896  0021A4                     
  2897                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2898  0021A4  4A19               	infsnz	pad@i^0,f,c
  2899  0021A6  2A1A               	incf	(pad@i+1)^0,f,c
  2900  0021A8                     l3019:
  2901                           
  2902                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2903  0021A8  501B               	movf	pad@w^0,w,c
  2904  0021AA  5C19               	subwf	pad@i^0,w,c
  2905  0021AC  501A               	movf	(pad@i+1)^0,w,c
  2906  0021AE  0A80               	xorlw	128
  2907  0021B0  6E18               	movwf	??_pad^0,c
  2908  0021B2  501C               	movf	(pad@w+1)^0,w,c
  2909  0021B4  0A80               	xorlw	128
  2910  0021B6  5818               	subwfb	??_pad^0,w,c
  2911  0021B8  A0D8               	btfss	status,0,c
  2912  0021BA  EFE1  F010         	goto	u3321
  2913  0021BE  EFE3  F010         	goto	u3320
  2914  0021C2                     u3321:
  2915  0021C2  EFC8  F010         	goto	l3015
  2916  0021C6                     u3320:
  2917  0021C6                     
  2918                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2919  0021C6  B059               	btfsc	_flags^0,0,c
  2920  0021C8  EFE8  F010         	goto	u3331
  2921  0021CC  EFEA  F010         	goto	u3330
  2922  0021D0                     u3331:
  2923  0021D0  EFF4  F010         	goto	l3023
  2924  0021D4                     u3330:
  2925  0021D4                     
  2926                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2927  0021D4  C014  F00B         	movff	pad@buf,fputs@s
  2928  0021D8  C015  F00C         	movff	pad@buf+1,fputs@s+1
  2929  0021DC  C012  F00D         	movff	pad@fp,fputs@fp
  2930  0021E0  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  2931  0021E4  EC17  F012         	call	_fputs	;wreg free
  2932  0021E8                     l3023:
  2933                           
  2934                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2935  0021E8  C014  F002         	movff	pad@buf,strlen@s
  2936  0021EC  C015  F003         	movff	pad@buf+1,strlen@s+1
  2937  0021F0  EC75  F012         	call	_strlen	;wreg free
  2938  0021F4  501B               	movf	pad@w^0,w,c
  2939  0021F6  2402               	addwf	?_strlen^0,w,c
  2940  0021F8  6E12               	movwf	?_pad^0,c
  2941  0021FA  501C               	movf	(pad@w+1)^0,w,c
  2942  0021FC  2003               	addwfc	(?_strlen+1)^0,w,c
  2943  0021FE  6E13               	movwf	(?_pad+1)^0,c
  2944  002200  0012               	return		;funcret
  2945  002202                     __end_of_pad:
  2946                           	callstack 0
  2947                           
  2948 ;; *************** function _strlen *****************
  2949 ;; Defined at:
  2950 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;  s               2    1[COMRAM] PTR const unsigned char 
  2953 ;;		 -> dbuf(32), 
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;  a               2    3[COMRAM] PTR const unsigned char 
  2956 ;;		 -> dbuf(32), 
  2957 ;; Return value:  Size  Location     Type
  2958 ;;                  2    1[COMRAM] unsigned int 
  2959 ;; Registers used:
  2960 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2966 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2967 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2969 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2970 ;;Total ram usage:        4 bytes
  2971 ;; Hardware stack levels used: 1
  2972 ;; Hardware stack levels required when called: 1
  2973 ;; This function calls:
  2974 ;;		Nothing
  2975 ;; This function is called by:
  2976 ;;		_pad
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980                           	psect	text6
  2981  0024EA                     __ptext6:
  2982                           	callstack 0
  2983  0024EA                     _strlen:
  2984                           	callstack 24
  2985  0024EA  C002  F004         	movff	strlen@s,strlen@a
  2986  0024EE  C003  F005         	movff	strlen@s+1,strlen@a+1
  2987  0024F2  EF7D  F012         	goto	l2913
  2988  0024F6                     l2911:
  2989  0024F6  4A02               	infsnz	strlen@s^0,f,c
  2990  0024F8  2A03               	incf	(strlen@s+1)^0,f,c
  2991  0024FA                     l2913:
  2992  0024FA  C002  FFD9         	movff	strlen@s,fsr2l
  2993  0024FE  C003  FFDA         	movff	strlen@s+1,fsr2h
  2994  002502  50DF               	movf	indf2,w,c
  2995  002504  A4D8               	btfss	status,2,c
  2996  002506  EF87  F012         	goto	u3161
  2997  00250A  EF89  F012         	goto	u3160
  2998  00250E                     u3161:
  2999  00250E  EF7B  F012         	goto	l2911
  3000  002512                     u3160:
  3001  002512  5004               	movf	strlen@a^0,w,c
  3002  002514  5C02               	subwf	strlen@s^0,w,c
  3003  002516  6E02               	movwf	?_strlen^0,c
  3004  002518  5005               	movf	(strlen@a+1)^0,w,c
  3005  00251A  5803               	subwfb	(strlen@s+1)^0,w,c
  3006  00251C  6E03               	movwf	(?_strlen+1)^0,c
  3007  00251E  0012               	return		;funcret
  3008  002520                     __end_of_strlen:
  3009                           	callstack 0
  3010                           
  3011 ;; *************** function _fputs *****************
  3012 ;; Defined at:
  3013 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;  s               2   10[COMRAM] PTR const unsigned char 
  3016 ;;		 -> dbuf(32), 
  3017 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  3018 ;;		 -> sprintf@f(6), 
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;  i               2   15[COMRAM] int 
  3021 ;;  c               1   14[COMRAM] unsigned char 
  3022 ;; Return value:  Size  Location     Type
  3023 ;;                  2   10[COMRAM] int 
  3024 ;; Registers used:
  3025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/0
  3028 ;;		On exit  : 0/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3031 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3032 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3034 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3035 ;;Total ram usage:        7 bytes
  3036 ;; Hardware stack levels used: 1
  3037 ;; Hardware stack levels required when called: 3
  3038 ;; This function calls:
  3039 ;;		_fputc
  3040 ;; This function is called by:
  3041 ;;		_pad
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045                           	psect	text7
  3046  00242E                     __ptext7:
  3047                           	callstack 0
  3048  00242E                     _fputs:
  3049                           	callstack 22
  3050  00242E  0E00               	movlw	0
  3051  002430  6E11               	movwf	(fputs@i+1)^0,c
  3052  002432  0E00               	movlw	0
  3053  002434  6E10               	movwf	fputs@i^0,c
  3054  002436  EF28  F012         	goto	l2907
  3055  00243A                     l2903:
  3056  00243A  C00F  F002         	movff	fputs@c,fputc@c
  3057  00243E  6A03               	clrf	(fputc@c+1)^0,c
  3058  002440  C00D  F004         	movff	fputs@fp,fputc@fp
  3059  002444  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  3060  002448  ECD7  F00F         	call	_fputc	;wreg free
  3061  00244C  4A10               	infsnz	fputs@i^0,f,c
  3062  00244E  2A11               	incf	(fputs@i+1)^0,f,c
  3063  002450                     l2907:
  3064  002450  5010               	movf	fputs@i^0,w,c
  3065  002452  240B               	addwf	fputs@s^0,w,c
  3066  002454  6ED9               	movwf	fsr2l,c
  3067  002456  5011               	movf	(fputs@i+1)^0,w,c
  3068  002458  200C               	addwfc	(fputs@s+1)^0,w,c
  3069  00245A  6EDA               	movwf	fsr2h,c
  3070  00245C  50DF               	movf	indf2,w,c
  3071  00245E  6E0F               	movwf	fputs@c^0,c
  3072  002460  500F               	movf	fputs@c^0,w,c
  3073  002462  A4D8               	btfss	status,2,c
  3074  002464  EF36  F012         	goto	u3151
  3075  002468  EF38  F012         	goto	u3150
  3076  00246C                     u3151:
  3077  00246C  EF1D  F012         	goto	l2903
  3078  002470                     u3150:
  3079  002470  0012               	return		;funcret
  3080  002472                     __end_of_fputs:
  3081                           	callstack 0
  3082                           
  3083 ;; *************** function _fputc *****************
  3084 ;; Defined at:
  3085 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;  c               2    1[COMRAM] int 
  3088 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  3089 ;;		 -> sprintf@f(6), 
  3090 ;; Auto vars:     Size  Location     Type
  3091 ;;		None
  3092 ;; Return value:  Size  Location     Type
  3093 ;;                  2    1[COMRAM] int 
  3094 ;; Registers used:
  3095 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3096 ;; Tracked objects:
  3097 ;;		On entry : 0/0
  3098 ;;		On exit  : 0/0
  3099 ;;		Unchanged: 0/0
  3100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3101 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3103 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3104 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3105 ;;Total ram usage:        9 bytes
  3106 ;; Hardware stack levels used: 1
  3107 ;; Hardware stack levels required when called: 2
  3108 ;; This function calls:
  3109 ;;		_putch
  3110 ;; This function is called by:
  3111 ;;		_pad
  3112 ;;		_vfpfcnvrt
  3113 ;;		_fputs
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text8
  3118  001FAE                     __ptext8:
  3119                           	callstack 0
  3120  001FAE                     _fputc:
  3121                           	callstack 25
  3122  001FAE  5004               	movf	fputc@fp^0,w,c
  3123  001FB0  1005               	iorwf	(fputc@fp+1)^0,w,c
  3124  001FB2  B4D8               	btfsc	status,2,c
  3125  001FB4  EFDE  F00F         	goto	u3111
  3126  001FB8  EFE0  F00F         	goto	u3110
  3127  001FBC                     u3111:
  3128  001FBC  EFE9  F00F         	goto	l2891
  3129  001FC0                     u3110:
  3130  001FC0  5004               	movf	fputc@fp^0,w,c
  3131  001FC2  1005               	iorwf	(fputc@fp+1)^0,w,c
  3132  001FC4  A4D8               	btfss	status,2,c
  3133  001FC6  EFE7  F00F         	goto	u3121
  3134  001FCA  EFE9  F00F         	goto	u3120
  3135  001FCE                     u3121:
  3136  001FCE  EFEE  F00F         	goto	l2893
  3137  001FD2                     u3120:
  3138  001FD2                     l2891:
  3139  001FD2  5002               	movf	fputc@c^0,w,c
  3140  001FD4  EC3A  F013         	call	_putch
  3141  001FD8  EF3B  F010         	goto	l1108
  3142  001FDC                     l2893:
  3143  001FDC  EE20 F004          	lfsr	2,4
  3144  001FE0  5004               	movf	fputc@fp^0,w,c
  3145  001FE2  26D9               	addwf	fsr2l,f,c
  3146  001FE4  5005               	movf	(fputc@fp+1)^0,w,c
  3147  001FE6  22DA               	addwfc	fsr2h,f,c
  3148  001FE8  50DE               	movf	postinc2,w,c
  3149  001FEA  10DE               	iorwf	postinc2,w,c
  3150  001FEC  B4D8               	btfsc	status,2,c
  3151  001FEE  EFFB  F00F         	goto	u3131
  3152  001FF2  EFFD  F00F         	goto	u3130
  3153  001FF6                     u3131:
  3154  001FF6  EF18  F010         	goto	l2897
  3155  001FFA                     u3130:
  3156  001FFA  EE20 F004          	lfsr	2,4
  3157  001FFE  5004               	movf	fputc@fp^0,w,c
  3158  002000  26D9               	addwf	fsr2l,f,c
  3159  002002  5005               	movf	(fputc@fp+1)^0,w,c
  3160  002004  22DA               	addwfc	fsr2h,f,c
  3161  002006  EE10 F002          	lfsr	1,2
  3162  00200A  5004               	movf	fputc@fp^0,w,c
  3163  00200C  26E1               	addwf	fsr1l,f,c
  3164  00200E  5005               	movf	(fputc@fp+1)^0,w,c
  3165  002010  22E2               	addwfc	fsr1h,f,c
  3166  002012  50DE               	movf	postinc2,w,c
  3167  002014  5CE6               	subwf	postinc1,w,c
  3168  002016  50E6               	movf	postinc1,w,c
  3169  002018  0A80               	xorlw	128
  3170  00201A  6E0A               	movwf	(??_fputc+4)^0,c
  3171  00201C  50DE               	movf	postinc2,w,c
  3172  00201E  0A80               	xorlw	128
  3173  002020  580A               	subwfb	(??_fputc+4)^0,w,c
  3174  002022  B0D8               	btfsc	status,0,c
  3175  002024  EF16  F010         	goto	u3141
  3176  002028  EF18  F010         	goto	u3140
  3177  00202C                     u3141:
  3178  00202C  EF3B  F010         	goto	l1108
  3179  002030                     u3140:
  3180  002030                     l2897:
  3181  002030  EE20 F002          	lfsr	2,2
  3182  002034  5004               	movf	fputc@fp^0,w,c
  3183  002036  26D9               	addwf	fsr2l,f,c
  3184  002038  5005               	movf	(fputc@fp+1)^0,w,c
  3185  00203A  22DA               	addwfc	fsr2h,f,c
  3186  00203C  CFDE F006          	movff	postinc2,??_fputc
  3187  002040  CFDD F007          	movff	postdec2,??_fputc+1
  3188  002044  C004  FFD9         	movff	fputc@fp,fsr2l
  3189  002048  C005  FFDA         	movff	fputc@fp+1,fsr2h
  3190  00204C  CFDE F008          	movff	postinc2,??_fputc+2
  3191  002050  CFDD F009          	movff	postdec2,??_fputc+3
  3192  002054  5006               	movf	??_fputc^0,w,c
  3193  002056  2408               	addwf	(??_fputc+2)^0,w,c
  3194  002058  6ED9               	movwf	fsr2l,c
  3195  00205A  5007               	movf	(??_fputc+1)^0,w,c
  3196  00205C  2009               	addwfc	(??_fputc+3)^0,w,c
  3197  00205E  6EDA               	movwf	fsr2h,c
  3198  002060  C002  FFDF         	movff	fputc@c,indf2
  3199  002064  EE20 F002          	lfsr	2,2
  3200  002068  5004               	movf	fputc@fp^0,w,c
  3201  00206A  26D9               	addwf	fsr2l,f,c
  3202  00206C  5005               	movf	(fputc@fp+1)^0,w,c
  3203  00206E  22DA               	addwfc	fsr2h,f,c
  3204  002070  2ADE               	incf	postinc2,f,c
  3205  002072  0E00               	movlw	0
  3206  002074  22DD               	addwfc	postdec2,f,c
  3207  002076                     l1108:
  3208  002076  0012               	return		;funcret
  3209  002078                     __end_of_fputc:
  3210                           	callstack 0
  3211                           
  3212 ;; *************** function _putch *****************
  3213 ;; Defined at:
  3214 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;  c               1    wreg     unsigned char 
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;  c               1    0[COMRAM] unsigned char 
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  1    wreg      void 
  3221 ;; Registers used:
  3222 ;;		wreg
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3232 ;;Total ram usage:        0 bytes
  3233 ;; Hardware stack levels used: 1
  3234 ;; Hardware stack levels required when called: 1
  3235 ;; This function calls:
  3236 ;;		Nothing
  3237 ;; This function is called by:
  3238 ;;		_fputc
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241                           
  3242                           	psect	text9
  3243  002674                     __ptext9:
  3244                           	callstack 0
  3245  002674                     _putch:
  3246                           	callstack 25
  3247  002674  0012               	return		;funcret
  3248  002676                     __end_of_putch:
  3249                           	callstack 0
  3250                           
  3251 ;; *************** function _abs *****************
  3252 ;; Defined at:
  3253 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;  a               2   19[COMRAM] int 
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;		None
  3258 ;; Return value:  Size  Location     Type
  3259 ;;                  2   19[COMRAM] int 
  3260 ;; Registers used:
  3261 ;;		wreg, status,2, status,0
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3267 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3269 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3270 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3271 ;;Total ram usage:        4 bytes
  3272 ;; Hardware stack levels used: 1
  3273 ;; Hardware stack levels required when called: 1
  3274 ;; This function calls:
  3275 ;;		Nothing
  3276 ;; This function is called by:
  3277 ;;		_dtoa
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           	psect	text10
  3282  002472                     __ptext10:
  3283                           	callstack 0
  3284  002472                     _abs:
  3285                           	callstack 25
  3286  002472  BE15               	btfsc	(abs@a+1)^0,7,c
  3287  002474  EF46  F012         	goto	u3340
  3288  002478  5015               	movf	(abs@a+1)^0,w,c
  3289  00247A  E106               	bnz	u3341
  3290  00247C  0414               	decf	abs@a^0,w,c
  3291  00247E  B0D8               	btfsc	status,0,c
  3292  002480  EF44  F012         	goto	u3341
  3293  002484  EF46  F012         	goto	u3340
  3294  002488                     u3341:
  3295  002488  EF54  F012         	goto	l1048
  3296  00248C                     u3340:
  3297  00248C  C014  F016         	movff	abs@a,??_abs
  3298  002490  C015  F017         	movff	abs@a+1,??_abs+1
  3299  002494  1E16               	comf	??_abs^0,f,c
  3300  002496  1E17               	comf	(??_abs+1)^0,f,c
  3301  002498  4A16               	infsnz	??_abs^0,f,c
  3302  00249A  2A17               	incf	(??_abs+1)^0,f,c
  3303  00249C  C016  F014         	movff	??_abs,?_abs
  3304  0024A0  C017  F015         	movff	??_abs+1,?_abs+1
  3305  0024A4  EF58  F012         	goto	l1051
  3306  0024A8                     l1048:
  3307  0024A8  C014  F014         	movff	abs@a,?_abs
  3308  0024AC  C015  F015         	movff	abs@a+1,?_abs+1
  3309  0024B0                     l1051:
  3310  0024B0  0012               	return		;funcret
  3311  0024B2                     __end_of_abs:
  3312                           	callstack 0
  3313                           
  3314 ;; *************** function ___aomod *****************
  3315 ;; Defined at:
  3316 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  3317 ;; Parameters:    Size  Location     Type
  3318 ;;  dividend        8    1[COMRAM] long long 
  3319 ;;  divisor         8    9[COMRAM] long long 
  3320 ;; Auto vars:     Size  Location     Type
  3321 ;;  sign            1   18[COMRAM] unsigned char 
  3322 ;;  counter         1   17[COMRAM] unsigned char 
  3323 ;; Return value:  Size  Location     Type
  3324 ;;                  8    1[COMRAM] long long 
  3325 ;; Registers used:
  3326 ;;		wreg, status,2, status,0
  3327 ;; Tracked objects:
  3328 ;;		On entry : 0/0
  3329 ;;		On exit  : 0/0
  3330 ;;		Unchanged: 0/0
  3331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3332 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3333 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3335 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3336 ;;Total ram usage:       18 bytes
  3337 ;; Hardware stack levels used: 1
  3338 ;; Hardware stack levels required when called: 1
  3339 ;; This function calls:
  3340 ;;		Nothing
  3341 ;; This function is called by:
  3342 ;;		_dtoa
  3343 ;; This function uses a non-reentrant model
  3344 ;;
  3345                           
  3346                           	psect	text11
  3347  001D70                     __ptext11:
  3348                           	callstack 0
  3349  001D70                     ___aomod:
  3350                           	callstack 25
  3351  001D70  0E00               	movlw	0
  3352  001D72  6E13               	movwf	___aomod@sign^0,c
  3353  001D74  BE09               	btfsc	(___aomod@dividend+7)^0,7,c
  3354  001D76  EFC1  F00E         	goto	u3240
  3355  001D7A  EFBF  F00E         	goto	u3241
  3356  001D7E                     u3241:
  3357  001D7E  EFD3  F00E         	goto	l2977
  3358  001D82                     u3240:
  3359  001D82  1E09               	comf	(___aomod@dividend+7)^0,f,c
  3360  001D84  1E08               	comf	(___aomod@dividend+6)^0,f,c
  3361  001D86  1E07               	comf	(___aomod@dividend+5)^0,f,c
  3362  001D88  1E06               	comf	(___aomod@dividend+4)^0,f,c
  3363  001D8A  1E05               	comf	(___aomod@dividend+3)^0,f,c
  3364  001D8C  1E04               	comf	(___aomod@dividend+2)^0,f,c
  3365  001D8E  1E03               	comf	(___aomod@dividend+1)^0,f,c
  3366  001D90  6C02               	negf	___aomod@dividend^0,c
  3367  001D92  0E00               	movlw	0
  3368  001D94  2203               	addwfc	(___aomod@dividend+1)^0,f,c
  3369  001D96  2204               	addwfc	(___aomod@dividend+2)^0,f,c
  3370  001D98  2205               	addwfc	(___aomod@dividend+3)^0,f,c
  3371  001D9A  2206               	addwfc	(___aomod@dividend+4)^0,f,c
  3372  001D9C  2207               	addwfc	(___aomod@dividend+5)^0,f,c
  3373  001D9E  2208               	addwfc	(___aomod@dividend+6)^0,f,c
  3374  001DA0  2209               	addwfc	(___aomod@dividend+7)^0,f,c
  3375  001DA2  0E01               	movlw	1
  3376  001DA4  6E13               	movwf	___aomod@sign^0,c
  3377  001DA6                     l2977:
  3378  001DA6  BE11               	btfsc	(___aomod@divisor+7)^0,7,c
  3379  001DA8  EFDA  F00E         	goto	u3250
  3380  001DAC  EFD8  F00E         	goto	u3251
  3381  001DB0                     u3251:
  3382  001DB0  EFEA  F00E         	goto	l2981
  3383  001DB4                     u3250:
  3384  001DB4  1E11               	comf	(___aomod@divisor+7)^0,f,c
  3385  001DB6  1E10               	comf	(___aomod@divisor+6)^0,f,c
  3386  001DB8  1E0F               	comf	(___aomod@divisor+5)^0,f,c
  3387  001DBA  1E0E               	comf	(___aomod@divisor+4)^0,f,c
  3388  001DBC  1E0D               	comf	(___aomod@divisor+3)^0,f,c
  3389  001DBE  1E0C               	comf	(___aomod@divisor+2)^0,f,c
  3390  001DC0  1E0B               	comf	(___aomod@divisor+1)^0,f,c
  3391  001DC2  6C0A               	negf	___aomod@divisor^0,c
  3392  001DC4  0E00               	movlw	0
  3393  001DC6  220B               	addwfc	(___aomod@divisor+1)^0,f,c
  3394  001DC8  220C               	addwfc	(___aomod@divisor+2)^0,f,c
  3395  001DCA  220D               	addwfc	(___aomod@divisor+3)^0,f,c
  3396  001DCC  220E               	addwfc	(___aomod@divisor+4)^0,f,c
  3397  001DCE  220F               	addwfc	(___aomod@divisor+5)^0,f,c
  3398  001DD0  2210               	addwfc	(___aomod@divisor+6)^0,f,c
  3399  001DD2  2211               	addwfc	(___aomod@divisor+7)^0,f,c
  3400  001DD4                     l2981:
  3401  001DD4  500A               	movf	___aomod@divisor^0,w,c
  3402  001DD6  100B               	iorwf	(___aomod@divisor+1)^0,w,c
  3403  001DD8  100C               	iorwf	(___aomod@divisor+2)^0,w,c
  3404  001DDA  100D               	iorwf	(___aomod@divisor+3)^0,w,c
  3405  001DDC  100E               	iorwf	(___aomod@divisor+4)^0,w,c
  3406  001DDE  100F               	iorwf	(___aomod@divisor+5)^0,w,c
  3407  001DE0  1010               	iorwf	(___aomod@divisor+6)^0,w,c
  3408  001DE2  1011               	iorwf	(___aomod@divisor+7)^0,w,c
  3409  001DE4  B4D8               	btfsc	status,2,c
  3410  001DE6  EFF7  F00E         	goto	u3261
  3411  001DEA  EFF9  F00E         	goto	u3260
  3412  001DEE                     u3261:
  3413  001DEE  EF41  F00F         	goto	l2997
  3414  001DF2                     u3260:
  3415  001DF2  0E01               	movlw	1
  3416  001DF4  6E12               	movwf	___aomod@counter^0,c
  3417  001DF6  EF07  F00F         	goto	l2987
  3418  001DFA                     l2985:
  3419  001DFA  90D8               	bcf	status,0,c
  3420  001DFC  360A               	rlcf	___aomod@divisor^0,f,c
  3421  001DFE  360B               	rlcf	(___aomod@divisor+1)^0,f,c
  3422  001E00  360C               	rlcf	(___aomod@divisor+2)^0,f,c
  3423  001E02  360D               	rlcf	(___aomod@divisor+3)^0,f,c
  3424  001E04  360E               	rlcf	(___aomod@divisor+4)^0,f,c
  3425  001E06  360F               	rlcf	(___aomod@divisor+5)^0,f,c
  3426  001E08  3610               	rlcf	(___aomod@divisor+6)^0,f,c
  3427  001E0A  3611               	rlcf	(___aomod@divisor+7)^0,f,c
  3428  001E0C  2A12               	incf	___aomod@counter^0,f,c
  3429  001E0E                     l2987:
  3430  001E0E  AE11               	btfss	(___aomod@divisor+7)^0,7,c
  3431  001E10  EF0C  F00F         	goto	u3271
  3432  001E14  EF0E  F00F         	goto	u3270
  3433  001E18                     u3271:
  3434  001E18  EFFD  F00E         	goto	l2985
  3435  001E1C                     u3270:
  3436  001E1C                     l2989:
  3437  001E1C  500A               	movf	___aomod@divisor^0,w,c
  3438  001E1E  5C02               	subwf	___aomod@dividend^0,w,c
  3439  001E20  500B               	movf	(___aomod@divisor+1)^0,w,c
  3440  001E22  5803               	subwfb	(___aomod@dividend+1)^0,w,c
  3441  001E24  500C               	movf	(___aomod@divisor+2)^0,w,c
  3442  001E26  5804               	subwfb	(___aomod@dividend+2)^0,w,c
  3443  001E28  500D               	movf	(___aomod@divisor+3)^0,w,c
  3444  001E2A  5805               	subwfb	(___aomod@dividend+3)^0,w,c
  3445  001E2C  500E               	movf	(___aomod@divisor+4)^0,w,c
  3446  001E2E  5806               	subwfb	(___aomod@dividend+4)^0,w,c
  3447  001E30  500F               	movf	(___aomod@divisor+5)^0,w,c
  3448  001E32  5807               	subwfb	(___aomod@dividend+5)^0,w,c
  3449  001E34  5010               	movf	(___aomod@divisor+6)^0,w,c
  3450  001E36  5808               	subwfb	(___aomod@dividend+6)^0,w,c
  3451  001E38  5011               	movf	(___aomod@divisor+7)^0,w,c
  3452  001E3A  5809               	subwfb	(___aomod@dividend+7)^0,w,c
  3453  001E3C  A0D8               	btfss	status,0,c
  3454  001E3E  EF23  F00F         	goto	u3281
  3455  001E42  EF25  F00F         	goto	u3280
  3456  001E46                     u3281:
  3457  001E46  EF35  F00F         	goto	l2993
  3458  001E4A                     u3280:
  3459  001E4A  500A               	movf	___aomod@divisor^0,w,c
  3460  001E4C  5E02               	subwf	___aomod@dividend^0,f,c
  3461  001E4E  500B               	movf	(___aomod@divisor+1)^0,w,c
  3462  001E50  5A03               	subwfb	(___aomod@dividend+1)^0,f,c
  3463  001E52  500C               	movf	(___aomod@divisor+2)^0,w,c
  3464  001E54  5A04               	subwfb	(___aomod@dividend+2)^0,f,c
  3465  001E56  500D               	movf	(___aomod@divisor+3)^0,w,c
  3466  001E58  5A05               	subwfb	(___aomod@dividend+3)^0,f,c
  3467  001E5A  500E               	movf	(___aomod@divisor+4)^0,w,c
  3468  001E5C  5A06               	subwfb	(___aomod@dividend+4)^0,f,c
  3469  001E5E  500F               	movf	(___aomod@divisor+5)^0,w,c
  3470  001E60  5A07               	subwfb	(___aomod@dividend+5)^0,f,c
  3471  001E62  5010               	movf	(___aomod@divisor+6)^0,w,c
  3472  001E64  5A08               	subwfb	(___aomod@dividend+6)^0,f,c
  3473  001E66  5011               	movf	(___aomod@divisor+7)^0,w,c
  3474  001E68  5A09               	subwfb	(___aomod@dividend+7)^0,f,c
  3475  001E6A                     l2993:
  3476  001E6A  90D8               	bcf	status,0,c
  3477  001E6C  3211               	rrcf	(___aomod@divisor+7)^0,f,c
  3478  001E6E  3210               	rrcf	(___aomod@divisor+6)^0,f,c
  3479  001E70  320F               	rrcf	(___aomod@divisor+5)^0,f,c
  3480  001E72  320E               	rrcf	(___aomod@divisor+4)^0,f,c
  3481  001E74  320D               	rrcf	(___aomod@divisor+3)^0,f,c
  3482  001E76  320C               	rrcf	(___aomod@divisor+2)^0,f,c
  3483  001E78  320B               	rrcf	(___aomod@divisor+1)^0,f,c
  3484  001E7A  320A               	rrcf	___aomod@divisor^0,f,c
  3485  001E7C  2E12               	decfsz	___aomod@counter^0,f,c
  3486  001E7E  EF0E  F00F         	goto	l2989
  3487  001E82                     l2997:
  3488  001E82  5013               	movf	___aomod@sign^0,w,c
  3489  001E84  B4D8               	btfsc	status,2,c
  3490  001E86  EF47  F00F         	goto	u3291
  3491  001E8A  EF49  F00F         	goto	u3290
  3492  001E8E                     u3291:
  3493  001E8E  EF59  F00F         	goto	l3001
  3494  001E92                     u3290:
  3495  001E92  1E09               	comf	(___aomod@dividend+7)^0,f,c
  3496  001E94  1E08               	comf	(___aomod@dividend+6)^0,f,c
  3497  001E96  1E07               	comf	(___aomod@dividend+5)^0,f,c
  3498  001E98  1E06               	comf	(___aomod@dividend+4)^0,f,c
  3499  001E9A  1E05               	comf	(___aomod@dividend+3)^0,f,c
  3500  001E9C  1E04               	comf	(___aomod@dividend+2)^0,f,c
  3501  001E9E  1E03               	comf	(___aomod@dividend+1)^0,f,c
  3502  001EA0  6C02               	negf	___aomod@dividend^0,c
  3503  001EA2  0E00               	movlw	0
  3504  001EA4  2203               	addwfc	(___aomod@dividend+1)^0,f,c
  3505  001EA6  2204               	addwfc	(___aomod@dividend+2)^0,f,c
  3506  001EA8  2205               	addwfc	(___aomod@dividend+3)^0,f,c
  3507  001EAA  2206               	addwfc	(___aomod@dividend+4)^0,f,c
  3508  001EAC  2207               	addwfc	(___aomod@dividend+5)^0,f,c
  3509  001EAE  2208               	addwfc	(___aomod@dividend+6)^0,f,c
  3510  001EB0  2209               	addwfc	(___aomod@dividend+7)^0,f,c
  3511  001EB2                     l3001:
  3512  001EB2  C002  F002         	movff	___aomod@dividend,?___aomod
  3513  001EB6  C003  F003         	movff	___aomod@dividend+1,?___aomod+1
  3514  001EBA  C004  F004         	movff	___aomod@dividend+2,?___aomod+2
  3515  001EBE  C005  F005         	movff	___aomod@dividend+3,?___aomod+3
  3516  001EC2  C006  F006         	movff	___aomod@dividend+4,?___aomod+4
  3517  001EC6  C007  F007         	movff	___aomod@dividend+5,?___aomod+5
  3518  001ECA  C008  F008         	movff	___aomod@dividend+6,?___aomod+6
  3519  001ECE  C009  F009         	movff	___aomod@dividend+7,?___aomod+7
  3520  001ED2  0012               	return		;funcret
  3521  001ED4                     __end_of___aomod:
  3522                           	callstack 0
  3523                           
  3524 ;; *************** function ___aodiv *****************
  3525 ;; Defined at:
  3526 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  3527 ;; Parameters:    Size  Location     Type
  3528 ;;  dividend        8    1[COMRAM] long long 
  3529 ;;  divisor         8    9[COMRAM] long long 
  3530 ;; Auto vars:     Size  Location     Type
  3531 ;;  quotient        8   19[COMRAM] long long 
  3532 ;;  sign            1   18[COMRAM] unsigned char 
  3533 ;;  counter         1   17[COMRAM] unsigned char 
  3534 ;; Return value:  Size  Location     Type
  3535 ;;                  8    1[COMRAM] long long 
  3536 ;; Registers used:
  3537 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3538 ;; Tracked objects:
  3539 ;;		On entry : 0/0
  3540 ;;		On exit  : 0/0
  3541 ;;		Unchanged: 0/0
  3542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3543 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3544 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3546 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3547 ;;Total ram usage:       26 bytes
  3548 ;; Hardware stack levels used: 1
  3549 ;; Hardware stack levels required when called: 1
  3550 ;; This function calls:
  3551 ;;		Nothing
  3552 ;; This function is called by:
  3553 ;;		_dtoa
  3554 ;; This function uses a non-reentrant model
  3555 ;;
  3556                           
  3557                           	psect	text12
  3558  001BE8                     __ptext12:
  3559                           	callstack 0
  3560  001BE8                     ___aodiv:
  3561                           	callstack 25
  3562  001BE8  0E00               	movlw	0
  3563  001BEA  6E13               	movwf	___aodiv@sign^0,c
  3564  001BEC  BE11               	btfsc	(___aodiv@divisor+7)^0,7,c
  3565  001BEE  EFFD  F00D         	goto	u3170
  3566  001BF2  EFFB  F00D         	goto	u3171
  3567  001BF6                     u3171:
  3568  001BF6  EF0F  F00E         	goto	l2933
  3569  001BFA                     u3170:
  3570  001BFA  1E11               	comf	(___aodiv@divisor+7)^0,f,c
  3571  001BFC  1E10               	comf	(___aodiv@divisor+6)^0,f,c
  3572  001BFE  1E0F               	comf	(___aodiv@divisor+5)^0,f,c
  3573  001C00  1E0E               	comf	(___aodiv@divisor+4)^0,f,c
  3574  001C02  1E0D               	comf	(___aodiv@divisor+3)^0,f,c
  3575  001C04  1E0C               	comf	(___aodiv@divisor+2)^0,f,c
  3576  001C06  1E0B               	comf	(___aodiv@divisor+1)^0,f,c
  3577  001C08  6C0A               	negf	___aodiv@divisor^0,c
  3578  001C0A  0E00               	movlw	0
  3579  001C0C  220B               	addwfc	(___aodiv@divisor+1)^0,f,c
  3580  001C0E  220C               	addwfc	(___aodiv@divisor+2)^0,f,c
  3581  001C10  220D               	addwfc	(___aodiv@divisor+3)^0,f,c
  3582  001C12  220E               	addwfc	(___aodiv@divisor+4)^0,f,c
  3583  001C14  220F               	addwfc	(___aodiv@divisor+5)^0,f,c
  3584  001C16  2210               	addwfc	(___aodiv@divisor+6)^0,f,c
  3585  001C18  2211               	addwfc	(___aodiv@divisor+7)^0,f,c
  3586  001C1A  0E01               	movlw	1
  3587  001C1C  6E13               	movwf	___aodiv@sign^0,c
  3588  001C1E                     l2933:
  3589  001C1E  BE09               	btfsc	(___aodiv@dividend+7)^0,7,c
  3590  001C20  EF16  F00E         	goto	u3180
  3591  001C24  EF14  F00E         	goto	u3181
  3592  001C28                     u3181:
  3593  001C28  EF28  F00E         	goto	l2939
  3594  001C2C                     u3180:
  3595  001C2C  1E09               	comf	(___aodiv@dividend+7)^0,f,c
  3596  001C2E  1E08               	comf	(___aodiv@dividend+6)^0,f,c
  3597  001C30  1E07               	comf	(___aodiv@dividend+5)^0,f,c
  3598  001C32  1E06               	comf	(___aodiv@dividend+4)^0,f,c
  3599  001C34  1E05               	comf	(___aodiv@dividend+3)^0,f,c
  3600  001C36  1E04               	comf	(___aodiv@dividend+2)^0,f,c
  3601  001C38  1E03               	comf	(___aodiv@dividend+1)^0,f,c
  3602  001C3A  6C02               	negf	___aodiv@dividend^0,c
  3603  001C3C  0E00               	movlw	0
  3604  001C3E  2203               	addwfc	(___aodiv@dividend+1)^0,f,c
  3605  001C40  2204               	addwfc	(___aodiv@dividend+2)^0,f,c
  3606  001C42  2205               	addwfc	(___aodiv@dividend+3)^0,f,c
  3607  001C44  2206               	addwfc	(___aodiv@dividend+4)^0,f,c
  3608  001C46  2207               	addwfc	(___aodiv@dividend+5)^0,f,c
  3609  001C48  2208               	addwfc	(___aodiv@dividend+6)^0,f,c
  3610  001C4A  2209               	addwfc	(___aodiv@dividend+7)^0,f,c
  3611  001C4C  0E01               	movlw	1
  3612  001C4E  1A13               	xorwf	___aodiv@sign^0,f,c
  3613  001C50                     l2939:
  3614  001C50  EE20  F014         	lfsr	2,___aodiv@quotient
  3615  001C54  0E07               	movlw	7
  3616  001C56                     u3191:
  3617  001C56  6ADE               	clrf	postinc2,c
  3618  001C58  06E8               	decf	wreg,f,c
  3619  001C5A  E2FD               	bc	u3191
  3620  001C5C  500A               	movf	___aodiv@divisor^0,w,c
  3621  001C5E  100B               	iorwf	(___aodiv@divisor+1)^0,w,c
  3622  001C60  100C               	iorwf	(___aodiv@divisor+2)^0,w,c
  3623  001C62  100D               	iorwf	(___aodiv@divisor+3)^0,w,c
  3624  001C64  100E               	iorwf	(___aodiv@divisor+4)^0,w,c
  3625  001C66  100F               	iorwf	(___aodiv@divisor+5)^0,w,c
  3626  001C68  1010               	iorwf	(___aodiv@divisor+6)^0,w,c
  3627  001C6A  1011               	iorwf	(___aodiv@divisor+7)^0,w,c
  3628  001C6C  B4D8               	btfsc	status,2,c
  3629  001C6E  EF3B  F00E         	goto	u3201
  3630  001C72  EF3D  F00E         	goto	u3200
  3631  001C76                     u3201:
  3632  001C76  EF8F  F00E         	goto	l2961
  3633  001C7A                     u3200:
  3634  001C7A  0E01               	movlw	1
  3635  001C7C  6E12               	movwf	___aodiv@counter^0,c
  3636  001C7E  EF4B  F00E         	goto	l2947
  3637  001C82                     l2945:
  3638  001C82  90D8               	bcf	status,0,c
  3639  001C84  360A               	rlcf	___aodiv@divisor^0,f,c
  3640  001C86  360B               	rlcf	(___aodiv@divisor+1)^0,f,c
  3641  001C88  360C               	rlcf	(___aodiv@divisor+2)^0,f,c
  3642  001C8A  360D               	rlcf	(___aodiv@divisor+3)^0,f,c
  3643  001C8C  360E               	rlcf	(___aodiv@divisor+4)^0,f,c
  3644  001C8E  360F               	rlcf	(___aodiv@divisor+5)^0,f,c
  3645  001C90  3610               	rlcf	(___aodiv@divisor+6)^0,f,c
  3646  001C92  3611               	rlcf	(___aodiv@divisor+7)^0,f,c
  3647  001C94  2A12               	incf	___aodiv@counter^0,f,c
  3648  001C96                     l2947:
  3649  001C96  AE11               	btfss	(___aodiv@divisor+7)^0,7,c
  3650  001C98  EF50  F00E         	goto	u3211
  3651  001C9C  EF52  F00E         	goto	u3210
  3652  001CA0                     u3211:
  3653  001CA0  EF41  F00E         	goto	l2945
  3654  001CA4                     u3210:
  3655  001CA4                     l2949:
  3656  001CA4  90D8               	bcf	status,0,c
  3657  001CA6  3614               	rlcf	___aodiv@quotient^0,f,c
  3658  001CA8  3615               	rlcf	(___aodiv@quotient+1)^0,f,c
  3659  001CAA  3616               	rlcf	(___aodiv@quotient+2)^0,f,c
  3660  001CAC  3617               	rlcf	(___aodiv@quotient+3)^0,f,c
  3661  001CAE  3618               	rlcf	(___aodiv@quotient+4)^0,f,c
  3662  001CB0  3619               	rlcf	(___aodiv@quotient+5)^0,f,c
  3663  001CB2  361A               	rlcf	(___aodiv@quotient+6)^0,f,c
  3664  001CB4  361B               	rlcf	(___aodiv@quotient+7)^0,f,c
  3665  001CB6  500A               	movf	___aodiv@divisor^0,w,c
  3666  001CB8  5C02               	subwf	___aodiv@dividend^0,w,c
  3667  001CBA  500B               	movf	(___aodiv@divisor+1)^0,w,c
  3668  001CBC  5803               	subwfb	(___aodiv@dividend+1)^0,w,c
  3669  001CBE  500C               	movf	(___aodiv@divisor+2)^0,w,c
  3670  001CC0  5804               	subwfb	(___aodiv@dividend+2)^0,w,c
  3671  001CC2  500D               	movf	(___aodiv@divisor+3)^0,w,c
  3672  001CC4  5805               	subwfb	(___aodiv@dividend+3)^0,w,c
  3673  001CC6  500E               	movf	(___aodiv@divisor+4)^0,w,c
  3674  001CC8  5806               	subwfb	(___aodiv@dividend+4)^0,w,c
  3675  001CCA  500F               	movf	(___aodiv@divisor+5)^0,w,c
  3676  001CCC  5807               	subwfb	(___aodiv@dividend+5)^0,w,c
  3677  001CCE  5010               	movf	(___aodiv@divisor+6)^0,w,c
  3678  001CD0  5808               	subwfb	(___aodiv@dividend+6)^0,w,c
  3679  001CD2  5011               	movf	(___aodiv@divisor+7)^0,w,c
  3680  001CD4  5809               	subwfb	(___aodiv@dividend+7)^0,w,c
  3681  001CD6  A0D8               	btfss	status,0,c
  3682  001CD8  EF70  F00E         	goto	u3221
  3683  001CDC  EF72  F00E         	goto	u3220
  3684  001CE0                     u3221:
  3685  001CE0  EF83  F00E         	goto	l2957
  3686  001CE4                     u3220:
  3687  001CE4  500A               	movf	___aodiv@divisor^0,w,c
  3688  001CE6  5E02               	subwf	___aodiv@dividend^0,f,c
  3689  001CE8  500B               	movf	(___aodiv@divisor+1)^0,w,c
  3690  001CEA  5A03               	subwfb	(___aodiv@dividend+1)^0,f,c
  3691  001CEC  500C               	movf	(___aodiv@divisor+2)^0,w,c
  3692  001CEE  5A04               	subwfb	(___aodiv@dividend+2)^0,f,c
  3693  001CF0  500D               	movf	(___aodiv@divisor+3)^0,w,c
  3694  001CF2  5A05               	subwfb	(___aodiv@dividend+3)^0,f,c
  3695  001CF4  500E               	movf	(___aodiv@divisor+4)^0,w,c
  3696  001CF6  5A06               	subwfb	(___aodiv@dividend+4)^0,f,c
  3697  001CF8  500F               	movf	(___aodiv@divisor+5)^0,w,c
  3698  001CFA  5A07               	subwfb	(___aodiv@dividend+5)^0,f,c
  3699  001CFC  5010               	movf	(___aodiv@divisor+6)^0,w,c
  3700  001CFE  5A08               	subwfb	(___aodiv@dividend+6)^0,f,c
  3701  001D00  5011               	movf	(___aodiv@divisor+7)^0,w,c
  3702  001D02  5A09               	subwfb	(___aodiv@dividend+7)^0,f,c
  3703  001D04  8014               	bsf	___aodiv@quotient^0,0,c
  3704  001D06                     l2957:
  3705  001D06  90D8               	bcf	status,0,c
  3706  001D08  3211               	rrcf	(___aodiv@divisor+7)^0,f,c
  3707  001D0A  3210               	rrcf	(___aodiv@divisor+6)^0,f,c
  3708  001D0C  320F               	rrcf	(___aodiv@divisor+5)^0,f,c
  3709  001D0E  320E               	rrcf	(___aodiv@divisor+4)^0,f,c
  3710  001D10  320D               	rrcf	(___aodiv@divisor+3)^0,f,c
  3711  001D12  320C               	rrcf	(___aodiv@divisor+2)^0,f,c
  3712  001D14  320B               	rrcf	(___aodiv@divisor+1)^0,f,c
  3713  001D16  320A               	rrcf	___aodiv@divisor^0,f,c
  3714  001D18  2E12               	decfsz	___aodiv@counter^0,f,c
  3715  001D1A  EF52  F00E         	goto	l2949
  3716  001D1E                     l2961:
  3717  001D1E  5013               	movf	___aodiv@sign^0,w,c
  3718  001D20  B4D8               	btfsc	status,2,c
  3719  001D22  EF95  F00E         	goto	u3231
  3720  001D26  EF97  F00E         	goto	u3230
  3721  001D2A                     u3231:
  3722  001D2A  EFA7  F00E         	goto	l2965
  3723  001D2E                     u3230:
  3724  001D2E  1E1B               	comf	(___aodiv@quotient+7)^0,f,c
  3725  001D30  1E1A               	comf	(___aodiv@quotient+6)^0,f,c
  3726  001D32  1E19               	comf	(___aodiv@quotient+5)^0,f,c
  3727  001D34  1E18               	comf	(___aodiv@quotient+4)^0,f,c
  3728  001D36  1E17               	comf	(___aodiv@quotient+3)^0,f,c
  3729  001D38  1E16               	comf	(___aodiv@quotient+2)^0,f,c
  3730  001D3A  1E15               	comf	(___aodiv@quotient+1)^0,f,c
  3731  001D3C  6C14               	negf	___aodiv@quotient^0,c
  3732  001D3E  0E00               	movlw	0
  3733  001D40  2215               	addwfc	(___aodiv@quotient+1)^0,f,c
  3734  001D42  2216               	addwfc	(___aodiv@quotient+2)^0,f,c
  3735  001D44  2217               	addwfc	(___aodiv@quotient+3)^0,f,c
  3736  001D46  2218               	addwfc	(___aodiv@quotient+4)^0,f,c
  3737  001D48  2219               	addwfc	(___aodiv@quotient+5)^0,f,c
  3738  001D4A  221A               	addwfc	(___aodiv@quotient+6)^0,f,c
  3739  001D4C  221B               	addwfc	(___aodiv@quotient+7)^0,f,c
  3740  001D4E                     l2965:
  3741  001D4E  C014  F002         	movff	___aodiv@quotient,?___aodiv
  3742  001D52  C015  F003         	movff	___aodiv@quotient+1,?___aodiv+1
  3743  001D56  C016  F004         	movff	___aodiv@quotient+2,?___aodiv+2
  3744  001D5A  C017  F005         	movff	___aodiv@quotient+3,?___aodiv+3
  3745  001D5E  C018  F006         	movff	___aodiv@quotient+4,?___aodiv+4
  3746  001D62  C019  F007         	movff	___aodiv@quotient+5,?___aodiv+5
  3747  001D66  C01A  F008         	movff	___aodiv@quotient+6,?___aodiv+6
  3748  001D6A  C01B  F009         	movff	___aodiv@quotient+7,?___aodiv+7
  3749  001D6E  0012               	return		;funcret
  3750  001D70                     __end_of___aodiv:
  3751                           	callstack 0
  3752                           
  3753 ;; *************** function _atoi *****************
  3754 ;; Defined at:
  3755 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  3756 ;; Parameters:    Size  Location     Type
  3757 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3758 ;;		 -> STR_2(18), STR_1(15), 
  3759 ;; Auto vars:     Size  Location     Type
  3760 ;;  n               2   21[COMRAM] int 
  3761 ;;  neg             2   14[COMRAM] int 
  3762 ;; Return value:  Size  Location     Type
  3763 ;;                  2    8[COMRAM] int 
  3764 ;; Registers used:
  3765 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3771 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3772 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3773 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3774 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3775 ;;Total ram usage:       15 bytes
  3776 ;; Hardware stack levels used: 1
  3777 ;; Hardware stack levels required when called: 2
  3778 ;; This function calls:
  3779 ;;		___wmul
  3780 ;;		_isdigit
  3781 ;;		_isspace
  3782 ;; This function is called by:
  3783 ;;		_vfpfcnvrt
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786                           
  3787                           	psect	text13
  3788  001A44                     __ptext13:
  3789                           	callstack 0
  3790  001A44                     _atoi:
  3791                           	callstack 25
  3792  001A44  0E00               	movlw	0
  3793  001A46  6E17               	movwf	(atoi@n+1)^0,c
  3794  001A48  0E00               	movlw	0
  3795  001A4A  6E16               	movwf	atoi@n^0,c
  3796  001A4C  0E00               	movlw	0
  3797  001A4E  6E10               	movwf	(atoi@neg+1)^0,c
  3798  001A50  0E00               	movlw	0
  3799  001A52  6E0F               	movwf	atoi@neg^0,c
  3800  001A54  EF2E  F00D         	goto	l3113
  3801  001A58                     l3111:
  3802  001A58  4A09               	infsnz	atoi@s^0,f,c
  3803  001A5A  2A0A               	incf	(atoi@s+1)^0,f,c
  3804  001A5C                     l3113:
  3805  001A5C  0E01               	movlw	1
  3806  001A5E  6E15               	movwf	_atoi$1783^0,c
  3807  001A60  C009  FFF6         	movff	atoi@s,tblptrl
  3808  001A64  C00A  FFF7         	movff	atoi@s+1,tblptrh
  3809  001A68                     	if	0	;tblptru may be non-zero
  3810  001A68                     	endif
  3811  001A68                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3812  001A68  0E00               	movlw	low (__mediumconst shr (0+16))
  3813  001A6A  6EF8               	movwf	tblptru,c
  3814  001A6C                     	endif
  3815  001A6C  0008               	tblrd		*
  3816  001A6E  50F5               	movf	tablat,w,c
  3817  001A70  0A20               	xorlw	32
  3818  001A72  B4D8               	btfsc	status,2,c
  3819  001A74  EF3E  F00D         	goto	u3541
  3820  001A78  EF40  F00D         	goto	u3540
  3821  001A7C                     u3541:
  3822  001A7C  EF5F  F00D         	goto	l3121
  3823  001A80                     u3540:
  3824  001A80  0EF7               	movlw	247
  3825  001A82  6E0B               	movwf	??_atoi^0,c
  3826  001A84  0EFF               	movlw	255
  3827  001A86  6E0C               	movwf	(??_atoi+1)^0,c
  3828  001A88  C009  FFF6         	movff	atoi@s,tblptrl
  3829  001A8C  C00A  FFF7         	movff	atoi@s+1,tblptrh
  3830  001A90                     	if	0	;tblptru may be non-zero
  3831  001A90                     	endif
  3832  001A90                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3833  001A90  0E00               	movlw	low (__mediumconst shr (0+16))
  3834  001A92  6EF8               	movwf	tblptru,c
  3835  001A94                     	endif
  3836  001A94  0008               	tblrd		*
  3837  001A96  50F5               	movf	tablat,w,c
  3838  001A98  6E0D               	movwf	(??_atoi+2)^0,c
  3839  001A9A  6A0E               	clrf	(??_atoi+3)^0,c
  3840  001A9C  500B               	movf	??_atoi^0,w,c
  3841  001A9E  260D               	addwf	(??_atoi+2)^0,f,c
  3842  001AA0  500C               	movf	(??_atoi+1)^0,w,c
  3843  001AA2  220E               	addwfc	(??_atoi+3)^0,f,c
  3844  001AA4  500E               	movf	(??_atoi+3)^0,w,c
  3845  001AA6  E109               	bnz	u3550
  3846  001AA8  0E05               	movlw	5
  3847  001AAA  5C0D               	subwf	(??_atoi+2)^0,w,c
  3848  001AAC  A0D8               	btfss	status,0,c
  3849  001AAE  EF5B  F00D         	goto	u3551
  3850  001AB2  EF5D  F00D         	goto	u3550
  3851  001AB6                     u3551:
  3852  001AB6  EF5F  F00D         	goto	l3121
  3853  001ABA                     u3550:
  3854  001ABA  0E00               	movlw	0
  3855  001ABC  6E15               	movwf	_atoi$1783^0,c
  3856  001ABE                     l3121:
  3857  001ABE  C015  F011         	movff	_atoi$1783,_atoi$1782
  3858  001AC2  6A12               	clrf	(_atoi$1782+1)^0,c
  3859  001AC4  5011               	movf	_atoi$1782^0,w,c
  3860  001AC6  1012               	iorwf	(_atoi$1782+1)^0,w,c
  3861  001AC8  A4D8               	btfss	status,2,c
  3862  001ACA  EF69  F00D         	goto	u3561
  3863  001ACE  EF6B  F00D         	goto	u3560
  3864  001AD2                     u3561:
  3865  001AD2  EF2C  F00D         	goto	l3111
  3866  001AD6                     u3560:
  3867  001AD6  EF75  F00D         	goto	l3131
  3868  001ADA                     l3127:
  3869  001ADA  0E00               	movlw	0
  3870  001ADC  6E10               	movwf	(atoi@neg+1)^0,c
  3871  001ADE  0E01               	movlw	1
  3872  001AE0  6E0F               	movwf	atoi@neg^0,c
  3873  001AE2                     l3129:
  3874  001AE2  4A09               	infsnz	atoi@s^0,f,c
  3875  001AE4  2A0A               	incf	(atoi@s+1)^0,f,c
  3876  001AE6  EFAE  F00D         	goto	l3137
  3877  001AEA                     l3131:
  3878  001AEA  C009  FFF6         	movff	atoi@s,tblptrl
  3879  001AEE  C00A  FFF7         	movff	atoi@s+1,tblptrh
  3880  001AF2                     	if	0	;tblptru may be non-zero
  3881  001AF2                     	endif
  3882  001AF2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3883  001AF2  0E00               	movlw	low (__mediumconst shr (0+16))
  3884  001AF4  6EF8               	movwf	tblptru,c
  3885  001AF6                     	endif
  3886  001AF6  0008               	tblrd		*
  3887  001AF8  50F5               	movf	tablat,w,c
  3888  001AFA  6E0B               	movwf	??_atoi^0,c
  3889  001AFC  6A0C               	clrf	(??_atoi+1)^0,c
  3890                           
  3891                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3892                           ; Switch size 1, requested type "simple"
  3893                           ; Number of cases is 1, Range of values is 0 to 0
  3894                           ; switch strategies available:
  3895                           ; Name         Instructions Cycles
  3896                           ; simple_byte            4     3 (average)
  3897                           ;	Chosen strategy is simple_byte
  3898  001AFE  500C               	movf	(??_atoi+1)^0,w,c
  3899  001B00  0A00               	xorlw	0	; case 0
  3900  001B02  B4D8               	btfsc	status,2,c
  3901  001B04  EF86  F00D         	goto	l3501
  3902  001B08  EFAE  F00D         	goto	l3137
  3903  001B0C                     l3501:
  3904                           
  3905                           ; Switch size 1, requested type "simple"
  3906                           ; Number of cases is 2, Range of values is 43 to 45
  3907                           ; switch strategies available:
  3908                           ; Name         Instructions Cycles
  3909                           ; simple_byte            7     4 (average)
  3910                           ;	Chosen strategy is simple_byte
  3911  001B0C  500B               	movf	??_atoi^0,w,c
  3912  001B0E  0A2B               	xorlw	43	; case 43
  3913  001B10  B4D8               	btfsc	status,2,c
  3914  001B12  EF71  F00D         	goto	l3129
  3915  001B16  0A06               	xorlw	6	; case 45
  3916  001B18  B4D8               	btfsc	status,2,c
  3917  001B1A  EF6D  F00D         	goto	l3127
  3918  001B1E  EFAE  F00D         	goto	l3137
  3919  001B22                     l3133:
  3920  001B22  C016  F002         	movff	atoi@n,___wmul@multiplier
  3921  001B26  C017  F003         	movff	atoi@n+1,___wmul@multiplier+1
  3922  001B2A  0E00               	movlw	0
  3923  001B2C  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  3924  001B2E  0E0A               	movlw	10
  3925  001B30  6E04               	movwf	___wmul@multiplicand^0,c
  3926  001B32  ECDA  F012         	call	___wmul	;wreg free
  3927  001B36  C009  FFF6         	movff	atoi@s,tblptrl
  3928  001B3A  C00A  FFF7         	movff	atoi@s+1,tblptrh
  3929  001B3E                     	if	0	;tblptru may be non-zero
  3930  001B3E                     	endif
  3931  001B3E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3932  001B3E  0E00               	movlw	low (__mediumconst shr (0+16))
  3933  001B40  6EF8               	movwf	tblptru,c
  3934  001B42                     	endif
  3935  001B42  0008               	tblrd		*
  3936  001B44  50F5               	movf	tablat,w,c
  3937  001B46  5E02               	subwf	?___wmul^0,f,c
  3938  001B48  0E00               	movlw	0
  3939  001B4A  5A03               	subwfb	(?___wmul+1)^0,f,c
  3940  001B4C  0E30               	movlw	48
  3941  001B4E  2402               	addwf	?___wmul^0,w,c
  3942  001B50  6E16               	movwf	atoi@n^0,c
  3943  001B52  0E00               	movlw	0
  3944  001B54  2003               	addwfc	(?___wmul+1)^0,w,c
  3945  001B56  6E17               	movwf	(atoi@n+1)^0,c
  3946  001B58  EF71  F00D         	goto	l3129
  3947  001B5C                     l3137:
  3948  001B5C  0ED0               	movlw	208
  3949  001B5E  6E0B               	movwf	??_atoi^0,c
  3950  001B60  0EFF               	movlw	255
  3951  001B62  6E0C               	movwf	(??_atoi+1)^0,c
  3952  001B64  C009  FFF6         	movff	atoi@s,tblptrl
  3953  001B68  C00A  FFF7         	movff	atoi@s+1,tblptrh
  3954  001B6C                     	if	0	;tblptru may be non-zero
  3955  001B6C                     	endif
  3956  001B6C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3957  001B6C  0E00               	movlw	low (__mediumconst shr (0+16))
  3958  001B6E  6EF8               	movwf	tblptru,c
  3959  001B70                     	endif
  3960  001B70  0008               	tblrd		*
  3961  001B72  50F5               	movf	tablat,w,c
  3962  001B74  6E0D               	movwf	(??_atoi+2)^0,c
  3963  001B76  6A0E               	clrf	(??_atoi+3)^0,c
  3964  001B78  500B               	movf	??_atoi^0,w,c
  3965  001B7A  260D               	addwf	(??_atoi+2)^0,f,c
  3966  001B7C  500C               	movf	(??_atoi+1)^0,w,c
  3967  001B7E  220E               	addwfc	(??_atoi+3)^0,f,c
  3968  001B80  500E               	movf	(??_atoi+3)^0,w,c
  3969  001B82  E10A               	bnz	u3570
  3970  001B84  0E0A               	movlw	10
  3971  001B86  5C0D               	subwf	(??_atoi+2)^0,w,c
  3972  001B88  A0D8               	btfss	status,0,c
  3973  001B8A  EFC9  F00D         	goto	u3571
  3974  001B8E  EFCC  F00D         	goto	u3570
  3975  001B92                     u3571:
  3976  001B92  0E01               	movlw	1
  3977  001B94  EFCD  F00D         	goto	u3580
  3978  001B98                     u3570:
  3979  001B98  0E00               	movlw	0
  3980  001B9A                     u3580:
  3981  001B9A  6E13               	movwf	_atoi$1784^0,c
  3982  001B9C  6A14               	clrf	(_atoi$1784+1)^0,c
  3983  001B9E  5013               	movf	_atoi$1784^0,w,c
  3984  001BA0  1014               	iorwf	(_atoi$1784+1)^0,w,c
  3985  001BA2  A4D8               	btfss	status,2,c
  3986  001BA4  EFD6  F00D         	goto	u3591
  3987  001BA8  EFD8  F00D         	goto	u3590
  3988  001BAC                     u3591:
  3989  001BAC  EF91  F00D         	goto	l3133
  3990  001BB0                     u3590:
  3991  001BB0  500F               	movf	atoi@neg^0,w,c
  3992  001BB2  1010               	iorwf	(atoi@neg+1)^0,w,c
  3993  001BB4  A4D8               	btfss	status,2,c
  3994  001BB6  EFDF  F00D         	goto	u3601
  3995  001BBA  EFE1  F00D         	goto	u3600
  3996  001BBE                     u3601:
  3997  001BBE  EFEF  F00D         	goto	l1079
  3998  001BC2                     u3600:
  3999  001BC2  C016  F00B         	movff	atoi@n,??_atoi
  4000  001BC6  C017  F00C         	movff	atoi@n+1,??_atoi+1
  4001  001BCA  1E0B               	comf	??_atoi^0,f,c
  4002  001BCC  1E0C               	comf	(??_atoi+1)^0,f,c
  4003  001BCE  4A0B               	infsnz	??_atoi^0,f,c
  4004  001BD0  2A0C               	incf	(??_atoi+1)^0,f,c
  4005  001BD2  C00B  F009         	movff	??_atoi,?_atoi
  4006  001BD6  C00C  F00A         	movff	??_atoi+1,?_atoi+1
  4007  001BDA  EFF3  F00D         	goto	l1082
  4008  001BDE                     l1079:
  4009  001BDE  C016  F009         	movff	atoi@n,?_atoi
  4010  001BE2  C017  F00A         	movff	atoi@n+1,?_atoi+1
  4011  001BE6                     l1082:
  4012  001BE6  0012               	return		;funcret
  4013  001BE8                     __end_of_atoi:
  4014                           	callstack 0
  4015                           
  4016 ;; *************** function _isspace *****************
  4017 ;; Defined at:
  4018 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;  c               2    1[COMRAM] int 
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;		None
  4023 ;; Return value:  Size  Location     Type
  4024 ;;                  2    1[COMRAM] int 
  4025 ;; Registers used:
  4026 ;;		wreg, status,2, status,0
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4032 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4033 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4034 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4035 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4036 ;;Total ram usage:        7 bytes
  4037 ;; Hardware stack levels used: 1
  4038 ;; Hardware stack levels required when called: 1
  4039 ;; This function calls:
  4040 ;;		Nothing
  4041 ;; This function is called by:
  4042 ;;		_atoi
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046                           	psect	text14
  4047  002396                     __ptext14:
  4048                           	callstack 0
  4049  002396                     _isspace:
  4050                           	callstack 25
  4051  002396  0E01               	movlw	1
  4052  002398  6E08               	movwf	_isspace$1800^0,c
  4053  00239A  0E20               	movlw	32
  4054  00239C  1802               	xorwf	isspace@c^0,w,c
  4055  00239E  1003               	iorwf	(isspace@c+1)^0,w,c
  4056  0023A0  B4D8               	btfsc	status,2,c
  4057  0023A2  EFD5  F011         	goto	u3371
  4058  0023A6  EFD7  F011         	goto	u3370
  4059  0023AA                     u3371:
  4060  0023AA  EFF0  F011         	goto	l3043
  4061  0023AE                     u3370:
  4062  0023AE  0EF7               	movlw	247
  4063  0023B0  6E04               	movwf	??_isspace^0,c
  4064  0023B2  0EFF               	movlw	255
  4065  0023B4  6E05               	movwf	(??_isspace+1)^0,c
  4066  0023B6  C002  F006         	movff	isspace@c,??_isspace+2
  4067  0023BA  C003  F007         	movff	isspace@c+1,??_isspace+3
  4068  0023BE  5004               	movf	??_isspace^0,w,c
  4069  0023C0  2606               	addwf	(??_isspace+2)^0,f,c
  4070  0023C2  5005               	movf	(??_isspace+1)^0,w,c
  4071  0023C4  2207               	addwfc	(??_isspace+3)^0,f,c
  4072  0023C6  5007               	movf	(??_isspace+3)^0,w,c
  4073  0023C8  E109               	bnz	u3380
  4074  0023CA  0E05               	movlw	5
  4075  0023CC  5C06               	subwf	(??_isspace+2)^0,w,c
  4076  0023CE  A0D8               	btfss	status,0,c
  4077  0023D0  EFEC  F011         	goto	u3381
  4078  0023D4  EFEE  F011         	goto	u3380
  4079  0023D8                     u3381:
  4080  0023D8  EFF0  F011         	goto	l3043
  4081  0023DC                     u3380:
  4082  0023DC  0E00               	movlw	0
  4083  0023DE  6E08               	movwf	_isspace$1800^0,c
  4084  0023E0                     l3043:
  4085  0023E0  C008  F002         	movff	_isspace$1800,?_isspace
  4086  0023E4  6A03               	clrf	(?_isspace+1)^0,c
  4087  0023E6  0012               	return		;funcret
  4088  0023E8                     __end_of_isspace:
  4089                           	callstack 0
  4090                           
  4091 ;; *************** function _isdigit *****************
  4092 ;; Defined at:
  4093 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;  c               2    1[COMRAM] int 
  4096 ;; Auto vars:     Size  Location     Type
  4097 ;;		None
  4098 ;; Return value:  Size  Location     Type
  4099 ;;                  2    1[COMRAM] int 
  4100 ;; Registers used:
  4101 ;;		wreg, status,2, status,0
  4102 ;; Tracked objects:
  4103 ;;		On entry : 0/0
  4104 ;;		On exit  : 0/0
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4107 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4109 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4110 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4111 ;;Total ram usage:        6 bytes
  4112 ;; Hardware stack levels used: 1
  4113 ;; Hardware stack levels required when called: 1
  4114 ;; This function calls:
  4115 ;;		Nothing
  4116 ;; This function is called by:
  4117 ;;		_vfpfcnvrt
  4118 ;;		_atoi
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           
  4122                           	psect	text15
  4123  0024B2                     __ptext15:
  4124                           	callstack 0
  4125  0024B2                     _isdigit:
  4126                           	callstack 26
  4127  0024B2  0ED0               	movlw	208
  4128  0024B4  6E04               	movwf	??_isdigit^0,c
  4129  0024B6  0EFF               	movlw	255
  4130  0024B8  6E05               	movwf	(??_isdigit+1)^0,c
  4131  0024BA  C002  F006         	movff	isdigit@c,??_isdigit+2
  4132  0024BE  C003  F007         	movff	isdigit@c+1,??_isdigit+3
  4133  0024C2  5004               	movf	??_isdigit^0,w,c
  4134  0024C4  2606               	addwf	(??_isdigit+2)^0,f,c
  4135  0024C6  5005               	movf	(??_isdigit+1)^0,w,c
  4136  0024C8  2207               	addwfc	(??_isdigit+3)^0,f,c
  4137  0024CA  5007               	movf	(??_isdigit+3)^0,w,c
  4138  0024CC  E10A               	bnz	u3350
  4139  0024CE  0E0A               	movlw	10
  4140  0024D0  5C06               	subwf	(??_isdigit+2)^0,w,c
  4141  0024D2  A0D8               	btfss	status,0,c
  4142  0024D4  EF6E  F012         	goto	u3351
  4143  0024D8  EF71  F012         	goto	u3350
  4144  0024DC                     u3351:
  4145  0024DC  0E01               	movlw	1
  4146  0024DE  EF72  F012         	goto	u3360
  4147  0024E2                     u3350:
  4148  0024E2  0E00               	movlw	0
  4149  0024E4                     u3360:
  4150  0024E4  6E02               	movwf	?_isdigit^0,c
  4151  0024E6  6A03               	clrf	(?_isdigit+1)^0,c
  4152  0024E8  0012               	return		;funcret
  4153  0024EA                     __end_of_isdigit:
  4154                           	callstack 0
  4155                           
  4156 ;; *************** function ___wmul *****************
  4157 ;; Defined at:
  4158 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  4159 ;; Parameters:    Size  Location     Type
  4160 ;;  multiplier      2    1[COMRAM] unsigned int 
  4161 ;;  multiplicand    2    3[COMRAM] unsigned int 
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;  product         2    5[COMRAM] unsigned int 
  4164 ;; Return value:  Size  Location     Type
  4165 ;;                  2    1[COMRAM] unsigned int 
  4166 ;; Registers used:
  4167 ;;		wreg, status,2, status,0, prodl, prodh
  4168 ;; Tracked objects:
  4169 ;;		On entry : 0/0
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4173 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4174 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4176 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4177 ;;Total ram usage:        6 bytes
  4178 ;; Hardware stack levels used: 1
  4179 ;; Hardware stack levels required when called: 1
  4180 ;; This function calls:
  4181 ;;		Nothing
  4182 ;; This function is called by:
  4183 ;;		_main
  4184 ;;		_atoi
  4185 ;;		_ADC2String
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189                           	psect	text16
  4190  0025B4                     __ptext16:
  4191                           	callstack 0
  4192  0025B4                     ___wmul:
  4193                           	callstack 25
  4194  0025B4  5002               	movf	___wmul@multiplier^0,w,c
  4195  0025B6  0204               	mulwf	___wmul@multiplicand^0,c
  4196  0025B8  CFF3 F006          	movff	prodl,___wmul@product
  4197  0025BC  CFF4 F007          	movff	prodh,___wmul@product+1
  4198  0025C0  5002               	movf	___wmul@multiplier^0,w,c
  4199  0025C2  0205               	mulwf	(___wmul@multiplicand+1)^0,c
  4200  0025C4  50F3               	movf	243,w,c
  4201  0025C6  2607               	addwf	(___wmul@product+1)^0,f,c
  4202  0025C8  5003               	movf	(___wmul@multiplier+1)^0,w,c
  4203  0025CA  0204               	mulwf	___wmul@multiplicand^0,c
  4204  0025CC  50F3               	movf	243,w,c
  4205  0025CE  2607               	addwf	(___wmul@product+1)^0,f,c
  4206  0025D0  C006  F002         	movff	___wmul@product,?___wmul
  4207  0025D4  C007  F003         	movff	___wmul@product+1,?___wmul+1
  4208  0025D8  0012               	return		;funcret
  4209  0025DA                     __end_of___wmul:
  4210                           	callstack 0
  4211                           
  4212 ;; *************** function ___lwdiv *****************
  4213 ;; Defined at:
  4214 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  4215 ;; Parameters:    Size  Location     Type
  4216 ;;  dividend        2    1[COMRAM] unsigned int 
  4217 ;;  divisor         2    3[COMRAM] unsigned int 
  4218 ;; Auto vars:     Size  Location     Type
  4219 ;;  quotient        2    5[COMRAM] unsigned int 
  4220 ;;  counter         1    7[COMRAM] unsigned char 
  4221 ;; Return value:  Size  Location     Type
  4222 ;;                  2    1[COMRAM] unsigned int 
  4223 ;; Registers used:
  4224 ;;		wreg, status,2, status,0
  4225 ;; Tracked objects:
  4226 ;;		On entry : 0/0
  4227 ;;		On exit  : 0/0
  4228 ;;		Unchanged: 0/0
  4229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4230 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4231 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4233 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4234 ;;Total ram usage:        7 bytes
  4235 ;; Hardware stack levels used: 1
  4236 ;; Hardware stack levels required when called: 1
  4237 ;; This function calls:
  4238 ;;		Nothing
  4239 ;; This function is called by:
  4240 ;;		_main
  4241 ;;		_ADC2String
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           
  4245                           	psect	text17
  4246  002202                     __ptext17:
  4247                           	callstack 0
  4248  002202                     ___lwdiv:
  4249                           	callstack 29
  4250  002202  0E00               	movlw	0
  4251  002204  6E07               	movwf	(___lwdiv@quotient+1)^0,c
  4252  002206  0E00               	movlw	0
  4253  002208  6E06               	movwf	___lwdiv@quotient^0,c
  4254  00220A  5004               	movf	___lwdiv@divisor^0,w,c
  4255  00220C  1005               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4256  00220E  B4D8               	btfsc	status,2,c
  4257  002210  EF0C  F011         	goto	u2371
  4258  002214  EF0E  F011         	goto	u2370
  4259  002218                     u2371:
  4260  002218  EF36  F011         	goto	l759
  4261  00221C                     u2370:
  4262  00221C  0E01               	movlw	1
  4263  00221E  6E08               	movwf	___lwdiv@counter^0,c
  4264  002220  EF16  F011         	goto	l2535
  4265  002224                     l2533:
  4266  002224  90D8               	bcf	status,0,c
  4267  002226  3604               	rlcf	___lwdiv@divisor^0,f,c
  4268  002228  3605               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4269  00222A  2A08               	incf	___lwdiv@counter^0,f,c
  4270  00222C                     l2535:
  4271  00222C  AE05               	btfss	(___lwdiv@divisor+1)^0,7,c
  4272  00222E  EF1B  F011         	goto	u2381
  4273  002232  EF1D  F011         	goto	u2380
  4274  002236                     u2381:
  4275  002236  EF12  F011         	goto	l2533
  4276  00223A                     u2380:
  4277  00223A                     l2537:
  4278  00223A  90D8               	bcf	status,0,c
  4279  00223C  3606               	rlcf	___lwdiv@quotient^0,f,c
  4280  00223E  3607               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4281  002240  5004               	movf	___lwdiv@divisor^0,w,c
  4282  002242  5C02               	subwf	___lwdiv@dividend^0,w,c
  4283  002244  5005               	movf	(___lwdiv@divisor+1)^0,w,c
  4284  002246  5803               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4285  002248  A0D8               	btfss	status,0,c
  4286  00224A  EF29  F011         	goto	u2391
  4287  00224E  EF2B  F011         	goto	u2390
  4288  002252                     u2391:
  4289  002252  EF30  F011         	goto	l2545
  4290  002256                     u2390:
  4291  002256  5004               	movf	___lwdiv@divisor^0,w,c
  4292  002258  5E02               	subwf	___lwdiv@dividend^0,f,c
  4293  00225A  5005               	movf	(___lwdiv@divisor+1)^0,w,c
  4294  00225C  5A03               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4295  00225E  8006               	bsf	___lwdiv@quotient^0,0,c
  4296  002260                     l2545:
  4297  002260  90D8               	bcf	status,0,c
  4298  002262  3205               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4299  002264  3204               	rrcf	___lwdiv@divisor^0,f,c
  4300  002266  2E08               	decfsz	___lwdiv@counter^0,f,c
  4301  002268  EF1D  F011         	goto	l2537
  4302  00226C                     l759:
  4303  00226C  C006  F002         	movff	___lwdiv@quotient,?___lwdiv
  4304  002270  C007  F003         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4305  002274  0012               	return		;funcret
  4306  002276                     __end_of___lwdiv:
  4307                           	callstack 0
  4308                           
  4309 ;; *************** function _Timer0_init *****************
  4310 ;; Defined at:
  4311 ;;		line 7 in file "timers.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;		None
  4314 ;; Auto vars:     Size  Location     Type
  4315 ;;		None
  4316 ;; Return value:  Size  Location     Type
  4317 ;;                  1    wreg      void 
  4318 ;; Registers used:
  4319 ;;		wreg, status,2
  4320 ;; Tracked objects:
  4321 ;;		On entry : 0/0
  4322 ;;		On exit  : 0/0
  4323 ;;		Unchanged: 0/0
  4324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4329 ;;Total ram usage:        0 bytes
  4330 ;; Hardware stack levels used: 1
  4331 ;; Hardware stack levels required when called: 1
  4332 ;; This function calls:
  4333 ;;		Nothing
  4334 ;; This function is called by:
  4335 ;;		_main
  4336 ;; This function uses a non-reentrant model
  4337 ;;
  4338                           
  4339                           	psect	text18
  4340  002600                     __ptext18:
  4341                           	callstack 0
  4342  002600                     _Timer0_init:
  4343                           	callstack 29
  4344  002600                     
  4345                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  4346  002600  50D6               	movf	214,w,c	;volatile
  4347  002602  0B1F               	andlw	-225
  4348  002604  0940               	iorlw	64
  4349  002606  6ED6               	movwf	214,c	;volatile
  4350  002608                     
  4351                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  4352  002608  88D6               	bsf	214,4,c	;volatile
  4353                           
  4354                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  4355  00260A  50D6               	movf	214,w,c	;volatile
  4356  00260C  0BF0               	andlw	-16
  4357  00260E  0908               	iorlw	8
  4358  002610  6ED6               	movwf	214,c	;volatile
  4359  002612                     
  4360                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  4361  002612  88D5               	bsf	213,4,c	;volatile
  4362                           
  4363                           ;timers.c: 15:     TMR0H=0b00001011;
  4364  002614  0E0B               	movlw	11
  4365  002616  6ED4               	movwf	212,c	;volatile
  4366                           
  4367                           ;timers.c: 16:     TMR0L=0b11011011;
  4368  002618  0EDB               	movlw	219
  4369  00261A  6ED3               	movwf	211,c	;volatile
  4370  00261C                     
  4371                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  4372  00261C  8ED5               	bsf	213,7,c	;volatile
  4373  00261E  0012               	return		;funcret
  4374  002620                     __end_of_Timer0_init:
  4375                           	callstack 0
  4376                           
  4377 ;; *************** function _LEDarray_init *****************
  4378 ;; Defined at:
  4379 ;;		line 8 in file "LEDarray.c"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;		None
  4382 ;; Auto vars:     Size  Location     Type
  4383 ;;		None
  4384 ;; Return value:  Size  Location     Type
  4385 ;;                  1    wreg      void 
  4386 ;; Registers used:
  4387 ;;		None
  4388 ;; Tracked objects:
  4389 ;;		On entry : 0/0
  4390 ;;		On exit  : 0/0
  4391 ;;		Unchanged: 0/0
  4392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4397 ;;Total ram usage:        0 bytes
  4398 ;; Hardware stack levels used: 1
  4399 ;; Hardware stack levels required when called: 1
  4400 ;; This function calls:
  4401 ;;		Nothing
  4402 ;; This function is called by:
  4403 ;;		_main
  4404 ;; This function uses a non-reentrant model
  4405 ;;
  4406                           
  4407                           	psect	text19
  4408  0025DA                     __ptext19:
  4409                           	callstack 0
  4410  0025DA                     _LEDarray_init:
  4411                           	callstack 29
  4412  0025DA                     
  4413                           ;LEDarray.c: 13:     LATGbits.LATG0=0;
  4414  0025DA  907F               	bcf	127,0,c	;volatile
  4415                           
  4416                           ;LEDarray.c: 14:     TRISGbits.TRISG0=0;
  4417  0025DC  9087               	bcf	135,0,c	;volatile
  4418                           
  4419                           ;LEDarray.c: 16:     LATGbits.LATG1=0;
  4420  0025DE  927F               	bcf	127,1,c	;volatile
  4421                           
  4422                           ;LEDarray.c: 17:     TRISGbits.TRISG1=0;
  4423  0025E0  9287               	bcf	135,1,c	;volatile
  4424                           
  4425                           ;LEDarray.c: 19:     LATAbits.LATA2=0;
  4426  0025E2  9479               	bcf	121,2,c	;volatile
  4427                           
  4428                           ;LEDarray.c: 20:     TRISAbits.TRISA2=0;
  4429  0025E4  9481               	bcf	129,2,c	;volatile
  4430                           
  4431                           ;LEDarray.c: 22:     LATFbits.LATF6=0;
  4432  0025E6  9C7E               	bcf	126,6,c	;volatile
  4433                           
  4434                           ;LEDarray.c: 23:     TRISFbits.TRISF6=0;
  4435  0025E8  9C86               	bcf	134,6,c	;volatile
  4436                           
  4437                           ;LEDarray.c: 25:     LATAbits.LATA4=0;
  4438  0025EA  9879               	bcf	121,4,c	;volatile
  4439                           
  4440                           ;LEDarray.c: 26:     TRISAbits.TRISA4=0;
  4441  0025EC  9881               	bcf	129,4,c	;volatile
  4442                           
  4443                           ;LEDarray.c: 28:     LATAbits.LATA5=0;
  4444  0025EE  9A79               	bcf	121,5,c	;volatile
  4445                           
  4446                           ;LEDarray.c: 29:     TRISAbits.TRISA5=0;
  4447  0025F0  9A81               	bcf	129,5,c	;volatile
  4448                           
  4449                           ;LEDarray.c: 31:     LATFbits.LATF0=0;
  4450  0025F2  907E               	bcf	126,0,c	;volatile
  4451                           
  4452                           ;LEDarray.c: 32:     TRISFbits.TRISF0=0;
  4453  0025F4  9086               	bcf	134,0,c	;volatile
  4454                           
  4455                           ;LEDarray.c: 34:     LATBbits.LATB0=0;
  4456  0025F6  907A               	bcf	122,0,c	;volatile
  4457                           
  4458                           ;LEDarray.c: 35:     TRISBbits.TRISB0=0;
  4459  0025F8  9082               	bcf	130,0,c	;volatile
  4460                           
  4461                           ;LEDarray.c: 37:     LATBbits.LATB1=0;
  4462  0025FA  927A               	bcf	122,1,c	;volatile
  4463                           
  4464                           ;LEDarray.c: 38:     TRISBbits.TRISB1=0;
  4465  0025FC  9282               	bcf	130,1,c	;volatile
  4466  0025FE  0012               	return		;funcret
  4467  002600                     __end_of_LEDarray_init:
  4468                           	callstack 0
  4469                           
  4470 ;; *************** function _LEDarray_disp_bin *****************
  4471 ;; Defined at:
  4472 ;;		line 45 in file "LEDarray.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;  number          2    1[COMRAM] unsigned int 
  4475 ;; Auto vars:     Size  Location     Type
  4476 ;;		None
  4477 ;; Return value:  Size  Location     Type
  4478 ;;                  1    wreg      void 
  4479 ;; Registers used:
  4480 ;;		None
  4481 ;; Tracked objects:
  4482 ;;		On entry : 0/0
  4483 ;;		On exit  : 0/0
  4484 ;;		Unchanged: 0/0
  4485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4486 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4489 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4490 ;;Total ram usage:        2 bytes
  4491 ;; Hardware stack levels used: 1
  4492 ;; Hardware stack levels required when called: 1
  4493 ;; This function calls:
  4494 ;;		Nothing
  4495 ;; This function is called by:
  4496 ;;		_main
  4497 ;;		_LEDarray_disp_dec
  4498 ;;		_LEDarray_disp_PPM
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502                           	psect	text20
  4503  002078                     __ptext20:
  4504                           	callstack 0
  4505  002078                     _LEDarray_disp_bin:
  4506                           	callstack 29
  4507  002078                     
  4508                           ;LEDarray.c: 45: void LEDarray_disp_bin(unsigned int number);LEDarray.c: 46: {;LEDarray.
      +                          c: 50:     if (number & 0b000000001) { LATGbits.LATG0=1;} else { LATGbits.LATG0=0;}
  4509  002078  A002               	btfss	LEDarray_disp_bin@number^0,0,c
  4510  00207A  EF41  F010         	goto	u2271
  4511  00207E  EF43  F010         	goto	u2270
  4512  002082                     u2271:
  4513  002082  EF46  F010         	goto	l114
  4514  002086                     u2270:
  4515  002086  807F               	bsf	127,0,c	;volatile
  4516  002088  EF47  F010         	goto	l115
  4517  00208C                     l114:
  4518  00208C  907F               	bcf	127,0,c	;volatile
  4519  00208E                     l115:
  4520                           
  4521                           ;LEDarray.c: 51:     if (number & 0b000000010) { LATGbits.LATG1=1;} else { LATGbits.LATG
      +                          1=0;}
  4522  00208E  A202               	btfss	LEDarray_disp_bin@number^0,1,c
  4523  002090  EF4C  F010         	goto	u2281
  4524  002094  EF4E  F010         	goto	u2280
  4525  002098                     u2281:
  4526  002098  EF51  F010         	goto	l116
  4527  00209C                     u2280:
  4528  00209C  827F               	bsf	127,1,c	;volatile
  4529  00209E  EF52  F010         	goto	l117
  4530  0020A2                     l116:
  4531  0020A2  927F               	bcf	127,1,c	;volatile
  4532  0020A4                     l117:
  4533                           
  4534                           ;LEDarray.c: 52:     if (number & 0b000000100) { LATAbits.LATA2=1;} else { LATAbits.LATA
      +                          2=0;}
  4535  0020A4  A402               	btfss	LEDarray_disp_bin@number^0,2,c
  4536  0020A6  EF57  F010         	goto	u2291
  4537  0020AA  EF59  F010         	goto	u2290
  4538  0020AE                     u2291:
  4539  0020AE  EF5C  F010         	goto	l118
  4540  0020B2                     u2290:
  4541  0020B2  8479               	bsf	121,2,c	;volatile
  4542  0020B4  EF5D  F010         	goto	l119
  4543  0020B8                     l118:
  4544  0020B8  9479               	bcf	121,2,c	;volatile
  4545  0020BA                     l119:
  4546                           
  4547                           ;LEDarray.c: 53:     if (number & 0b000001000) { LATFbits.LATF6=1;} else { LATFbits.LATF
      +                          6=0;}
  4548  0020BA  A602               	btfss	LEDarray_disp_bin@number^0,3,c
  4549  0020BC  EF62  F010         	goto	u2301
  4550  0020C0  EF64  F010         	goto	u2300
  4551  0020C4                     u2301:
  4552  0020C4  EF67  F010         	goto	l120
  4553  0020C8                     u2300:
  4554  0020C8  8C7E               	bsf	126,6,c	;volatile
  4555  0020CA  EF68  F010         	goto	l121
  4556  0020CE                     l120:
  4557  0020CE  9C7E               	bcf	126,6,c	;volatile
  4558  0020D0                     l121:
  4559                           
  4560                           ;LEDarray.c: 54:     if (number & 0b000010000) { LATAbits.LATA4=1;} else { LATAbits.LATA
      +                          4=0;}
  4561  0020D0  A802               	btfss	LEDarray_disp_bin@number^0,4,c
  4562  0020D2  EF6D  F010         	goto	u2311
  4563  0020D6  EF6F  F010         	goto	u2310
  4564  0020DA                     u2311:
  4565  0020DA  EF72  F010         	goto	l122
  4566  0020DE                     u2310:
  4567  0020DE  8879               	bsf	121,4,c	;volatile
  4568  0020E0  EF73  F010         	goto	l123
  4569  0020E4                     l122:
  4570  0020E4  9879               	bcf	121,4,c	;volatile
  4571  0020E6                     l123:
  4572                           
  4573                           ;LEDarray.c: 55:     if (number & 0b000100000) { LATAbits.LATA5=1;} else { LATAbits.LATA
      +                          5=0;}
  4574  0020E6  AA02               	btfss	LEDarray_disp_bin@number^0,5,c
  4575  0020E8  EF78  F010         	goto	u2321
  4576  0020EC  EF7A  F010         	goto	u2320
  4577  0020F0                     u2321:
  4578  0020F0  EF7D  F010         	goto	l124
  4579  0020F4                     u2320:
  4580  0020F4  8A79               	bsf	121,5,c	;volatile
  4581  0020F6  EF7E  F010         	goto	l125
  4582  0020FA                     l124:
  4583  0020FA  9A79               	bcf	121,5,c	;volatile
  4584  0020FC                     l125:
  4585                           
  4586                           ;LEDarray.c: 56:     if (number & 0b001000000) { LATFbits.LATF0=1;} else { LATFbits.LATF
      +                          0=0;}
  4587  0020FC  AC02               	btfss	LEDarray_disp_bin@number^0,6,c
  4588  0020FE  EF83  F010         	goto	u2331
  4589  002102  EF85  F010         	goto	u2330
  4590  002106                     u2331:
  4591  002106  EF88  F010         	goto	l126
  4592  00210A                     u2330:
  4593  00210A  807E               	bsf	126,0,c	;volatile
  4594  00210C  EF89  F010         	goto	l127
  4595  002110                     l126:
  4596  002110  907E               	bcf	126,0,c	;volatile
  4597  002112                     l127:
  4598                           
  4599                           ;LEDarray.c: 57:     if (number & 0b010000000) { LATBbits.LATB0=1;} else { LATBbits.LATB
      +                          0=0;}
  4600  002112  AE02               	btfss	LEDarray_disp_bin@number^0,7,c
  4601  002114  EF8E  F010         	goto	u2341
  4602  002118  EF90  F010         	goto	u2340
  4603  00211C                     u2341:
  4604  00211C  EF93  F010         	goto	l128
  4605  002120                     u2340:
  4606  002120  807A               	bsf	122,0,c	;volatile
  4607  002122  EF94  F010         	goto	l129
  4608  002126                     l128:
  4609  002126  907A               	bcf	122,0,c	;volatile
  4610  002128                     l129:
  4611                           
  4612                           ;LEDarray.c: 58:     if (number & 0b100000000) { LATBbits.LATB1=1;} else { LATBbits.LATB
      +                          1=0;}
  4613  002128  A003               	btfss	(LEDarray_disp_bin@number+1)^0,0,c
  4614  00212A  EF99  F010         	goto	u2351
  4615  00212E  EF9B  F010         	goto	u2350
  4616  002132                     u2351:
  4617  002132  EF9E  F010         	goto	l130
  4618  002136                     u2350:
  4619  002136  827A               	bsf	122,1,c	;volatile
  4620  002138  EF9F  F010         	goto	l132
  4621  00213C                     l130:
  4622  00213C  927A               	bcf	122,1,c	;volatile
  4623  00213E                     l132:
  4624  00213E  0012               	return		;funcret
  4625  002140                     __end_of_LEDarray_disp_bin:
  4626                           	callstack 0
  4627                           
  4628 ;; *************** function _LCD_sendstring *****************
  4629 ;; Defined at:
  4630 ;;		line 141 in file "LCD.c"
  4631 ;; Parameters:    Size  Location     Type
  4632 ;;  string          2    6[COMRAM] PTR unsigned char 
  4633 ;;		 -> main@buf(25), 
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;		None
  4636 ;; Return value:  Size  Location     Type
  4637 ;;                  1    wreg      void 
  4638 ;; Registers used:
  4639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4640 ;; Tracked objects:
  4641 ;;		On entry : 0/0
  4642 ;;		On exit  : 0/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4645 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4648 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4649 ;;Total ram usage:        2 bytes
  4650 ;; Hardware stack levels used: 1
  4651 ;; Hardware stack levels required when called: 4
  4652 ;; This function calls:
  4653 ;;		_LCD_sendbyte
  4654 ;; This function is called by:
  4655 ;;		_main
  4656 ;;		_ADC2String
  4657 ;; This function uses a non-reentrant model
  4658 ;;
  4659                           
  4660                           	psect	text21
  4661  002520                     __ptext21:
  4662                           	callstack 0
  4663  002520                     _LCD_sendstring:
  4664                           	callstack 26
  4665  002520                     
  4666                           ;LCD.c: 141: void LCD_sendstring(char *string);LCD.c: 142: {;LCD.c: 144:     while(*stri
      +                          ng != 0){
  4667  002520  EF9D  F012         	goto	l2525
  4668  002524                     l2521:
  4669                           
  4670                           ;LCD.c: 145:   LCD_sendbyte(*string++,1);
  4671  002524  0E01               	movlw	1
  4672  002526  6E03               	movwf	LCD_sendbyte@type^0,c
  4673  002528  C007  FFD9         	movff	LCD_sendstring@string,fsr2l
  4674  00252C  C008  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  4675  002530  50DF               	movf	indf2,w,c
  4676  002532  ECAA  F012         	call	_LCD_sendbyte
  4677  002536  4A07               	infsnz	LCD_sendstring@string^0,f,c
  4678  002538  2A08               	incf	(LCD_sendstring@string+1)^0,f,c
  4679  00253A                     l2525:
  4680                           
  4681                           ;LCD.c: 144:     while(*string != 0){
  4682  00253A  C007  FFD9         	movff	LCD_sendstring@string,fsr2l
  4683  00253E  C008  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  4684  002542  50DF               	movf	indf2,w,c
  4685  002544  A4D8               	btfss	status,2,c
  4686  002546  EFA7  F012         	goto	u2361
  4687  00254A  EFA9  F012         	goto	u2360
  4688  00254E                     u2361:
  4689  00254E  EF92  F012         	goto	l2521
  4690  002552                     u2360:
  4691  002552  0012               	return		;funcret
  4692  002554                     __end_of_LCD_sendstring:
  4693                           	callstack 0
  4694                           
  4695 ;; *************** function _LCD_Init *****************
  4696 ;; Defined at:
  4697 ;;		line 76 in file "LCD.c"
  4698 ;; Parameters:    Size  Location     Type
  4699 ;;		None
  4700 ;; Auto vars:     Size  Location     Type
  4701 ;;		None
  4702 ;; Return value:  Size  Location     Type
  4703 ;;                  1    wreg      void 
  4704 ;; Registers used:
  4705 ;;		wreg, status,2, status,0, cstack
  4706 ;; Tracked objects:
  4707 ;;		On entry : 0/0
  4708 ;;		On exit  : 0/0
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4713 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4714 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4715 ;;Total ram usage:        2 bytes
  4716 ;; Hardware stack levels used: 1
  4717 ;; Hardware stack levels required when called: 4
  4718 ;; This function calls:
  4719 ;;		_LCD_sendbyte
  4720 ;;		_LCD_sendnibble
  4721 ;; This function is called by:
  4722 ;;		_main
  4723 ;; This function uses a non-reentrant model
  4724 ;;
  4725                           
  4726                           	psect	text22
  4727  001ED4                     __ptext22:
  4728                           	callstack 0
  4729  001ED4                     _LCD_Init:
  4730                           	callstack 26
  4731  001ED4                     
  4732                           ;LCD.c: 86:     TRISCbits.TRISC6 = 0;
  4733  001ED4  9C83               	bcf	131,6,c	;volatile
  4734                           
  4735                           ;LCD.c: 87:     TRISCbits.TRISC2 = 0;
  4736  001ED6  9483               	bcf	131,2,c	;volatile
  4737                           
  4738                           ;LCD.c: 88:     TRISBbits.TRISB3 = 0;
  4739  001ED8  9682               	bcf	130,3,c	;volatile
  4740                           
  4741                           ;LCD.c: 89:     TRISBbits.TRISB2 = 0;
  4742  001EDA  9482               	bcf	130,2,c	;volatile
  4743                           
  4744                           ;LCD.c: 90:     TRISEbits.TRISE3 = 0;
  4745  001EDC  9685               	bcf	133,3,c	;volatile
  4746                           
  4747                           ;LCD.c: 91:     TRISEbits.TRISE1 = 0;
  4748  001EDE  9285               	bcf	133,1,c	;volatile
  4749                           
  4750                           ;LCD.c: 93:     LATCbits.LATC6 = 0;
  4751  001EE0  9C7B               	bcf	123,6,c	;volatile
  4752                           
  4753                           ;LCD.c: 94:     LATCbits.LATC2 = 0;
  4754  001EE2  947B               	bcf	123,2,c	;volatile
  4755                           
  4756                           ;LCD.c: 95:     LATBbits.LATB3 = 0;
  4757  001EE4  967A               	bcf	122,3,c	;volatile
  4758                           
  4759                           ;LCD.c: 96:     LATBbits.LATB2 = 0;
  4760  001EE6  947A               	bcf	122,2,c	;volatile
  4761                           
  4762                           ;LCD.c: 97:     LATEbits.LATE3 = 0;
  4763  001EE8  967D               	bcf	125,3,c	;volatile
  4764                           
  4765                           ;LCD.c: 98:     LATEbits.LATE1 = 0;
  4766  001EEA  927D               	bcf	125,1,c	;volatile
  4767  001EEC                     
  4768                           ;LCD.c: 105:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4769  001EEC  0E05               	movlw	5
  4770  001EEE  6E08               	movwf	(??_LCD_Init+1)^0,c
  4771  001EF0  0E0F               	movlw	15
  4772  001EF2  6E07               	movwf	??_LCD_Init^0,c
  4773  001EF4  0EF1               	movlw	241
  4774  001EF6                     u4077:
  4775  001EF6  2EE8               	decfsz	wreg,f,c
  4776  001EF8  D7FE               	bra	u4077
  4777  001EFA  2E07               	decfsz	??_LCD_Init^0,f,c
  4778  001EFC  D7FC               	bra	u4077
  4779  001EFE  2E08               	decfsz	(??_LCD_Init+1)^0,f,c
  4780  001F00  D7FA               	bra	u4077
  4781  001F02  F000               	nop	
  4782  001F04                     
  4783                           ;LCD.c: 106:     LCD_sendnibble(0b0011);
  4784  001F04  0E03               	movlw	3
  4785  001F06  EC3B  F011         	call	_LCD_sendnibble
  4786  001F0A                     
  4787                           ;LCD.c: 107:     _delay((unsigned long)((5)*(64000000/4000.0)));
  4788  001F0A  0E68               	movlw	104
  4789  001F0C  6E07               	movwf	??_LCD_Init^0,c
  4790  001F0E  0EE4               	movlw	228
  4791  001F10                     u4087:
  4792  001F10  2EE8               	decfsz	wreg,f,c
  4793  001F12  D7FE               	bra	u4087
  4794  001F14  2E07               	decfsz	??_LCD_Init^0,f,c
  4795  001F16  D7FC               	bra	u4087
  4796  001F18  D000               	nop2	
  4797  001F1A                     
  4798                           ;LCD.c: 108:     LCD_sendbyte(0b00101000,0);
  4799  001F1A  0E00               	movlw	0
  4800  001F1C  6E03               	movwf	LCD_sendbyte@type^0,c
  4801  001F1E  0E28               	movlw	40
  4802  001F20  ECAA  F012         	call	_LCD_sendbyte
  4803  001F24                     
  4804                           ;LCD.c: 109:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  4805  001F24  0EA0               	movlw	160
  4806  001F26                     u4097:
  4807  001F26  D000               	nop2	
  4808  001F28  2EE8               	decfsz	wreg,f,c
  4809  001F2A  D7FD               	bra	u4097
  4810  001F2C                     
  4811                           ;LCD.c: 110:     LCD_sendbyte(0b00101000,0);
  4812  001F2C  0E00               	movlw	0
  4813  001F2E  6E03               	movwf	LCD_sendbyte@type^0,c
  4814  001F30  0E28               	movlw	40
  4815  001F32  ECAA  F012         	call	_LCD_sendbyte
  4816  001F36                     
  4817                           ;LCD.c: 111:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  4818  001F36  0EA0               	movlw	160
  4819  001F38                     u4107:
  4820  001F38  D000               	nop2	
  4821  001F3A  2EE8               	decfsz	wreg,f,c
  4822  001F3C  D7FD               	bra	u4107
  4823  001F3E                     
  4824                           ;LCD.c: 112:     LCD_sendbyte(0b00001000,0);
  4825  001F3E  0E00               	movlw	0
  4826  001F40  6E03               	movwf	LCD_sendbyte@type^0,c
  4827  001F42  0E08               	movlw	8
  4828  001F44  ECAA  F012         	call	_LCD_sendbyte
  4829  001F48                     
  4830                           ;LCD.c: 113:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  4831  001F48  0EA0               	movlw	160
  4832  001F4A                     u4117:
  4833  001F4A  D000               	nop2	
  4834  001F4C  2EE8               	decfsz	wreg,f,c
  4835  001F4E  D7FD               	bra	u4117
  4836  001F50                     
  4837                           ;LCD.c: 114:     LCD_sendbyte(0b00000001,0);
  4838  001F50  0E00               	movlw	0
  4839  001F52  6E03               	movwf	LCD_sendbyte@type^0,c
  4840  001F54  0E01               	movlw	1
  4841  001F56  ECAA  F012         	call	_LCD_sendbyte
  4842  001F5A                     
  4843                           ;LCD.c: 115:     _delay((unsigned long)((2)*(64000000/4000.0)));
  4844  001F5A  0E2A               	movlw	42
  4845  001F5C  6E07               	movwf	??_LCD_Init^0,c
  4846  001F5E  0E8E               	movlw	142
  4847  001F60                     u4127:
  4848  001F60  2EE8               	decfsz	wreg,f,c
  4849  001F62  D7FE               	bra	u4127
  4850  001F64  2E07               	decfsz	??_LCD_Init^0,f,c
  4851  001F66  D7FC               	bra	u4127
  4852  001F68                     
  4853                           ;LCD.c: 116:     LCD_sendbyte(0b00000110,0);
  4854  001F68  0E00               	movlw	0
  4855  001F6A  6E03               	movwf	LCD_sendbyte@type^0,c
  4856  001F6C  0E06               	movlw	6
  4857  001F6E  ECAA  F012         	call	_LCD_sendbyte
  4858  001F72                     
  4859                           ;LCD.c: 117:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4860  001F72  0E05               	movlw	5
  4861  001F74  6E08               	movwf	(??_LCD_Init+1)^0,c
  4862  001F76  0E0F               	movlw	15
  4863  001F78  6E07               	movwf	??_LCD_Init^0,c
  4864  001F7A  0EF1               	movlw	241
  4865  001F7C                     u4137:
  4866  001F7C  2EE8               	decfsz	wreg,f,c
  4867  001F7E  D7FE               	bra	u4137
  4868  001F80  2E07               	decfsz	??_LCD_Init^0,f,c
  4869  001F82  D7FC               	bra	u4137
  4870  001F84  2E08               	decfsz	(??_LCD_Init+1)^0,f,c
  4871  001F86  D7FA               	bra	u4137
  4872  001F88  F000               	nop	
  4873  001F8A                     
  4874                           ;LCD.c: 118:     LCD_sendbyte(0b00001110,0);
  4875  001F8A  0E00               	movlw	0
  4876  001F8C  6E03               	movwf	LCD_sendbyte@type^0,c
  4877  001F8E  0E0E               	movlw	14
  4878  001F90  ECAA  F012         	call	_LCD_sendbyte
  4879  001F94                     
  4880                           ;LCD.c: 119:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4881  001F94  0E05               	movlw	5
  4882  001F96  6E08               	movwf	(??_LCD_Init+1)^0,c
  4883  001F98  0E0F               	movlw	15
  4884  001F9A  6E07               	movwf	??_LCD_Init^0,c
  4885  001F9C  0EF1               	movlw	241
  4886  001F9E                     u4147:
  4887  001F9E  2EE8               	decfsz	wreg,f,c
  4888  001FA0  D7FE               	bra	u4147
  4889  001FA2  2E07               	decfsz	??_LCD_Init^0,f,c
  4890  001FA4  D7FC               	bra	u4147
  4891  001FA6  2E08               	decfsz	(??_LCD_Init+1)^0,f,c
  4892  001FA8  D7FA               	bra	u4147
  4893  001FAA  F000               	nop	
  4894  001FAC  0012               	return		;funcret
  4895  001FAE                     __end_of_LCD_Init:
  4896                           	callstack 0
  4897                           
  4898 ;; *************** function _LCD_sendbyte *****************
  4899 ;; Defined at:
  4900 ;;		line 59 in file "LCD.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;  Byte            1    wreg     unsigned char 
  4903 ;;  type            1    2[COMRAM] unsigned char 
  4904 ;; Auto vars:     Size  Location     Type
  4905 ;;  Byte            1    5[COMRAM] unsigned char 
  4906 ;;  LSB             1    4[COMRAM] unsigned char 
  4907 ;;  MSB             1    3[COMRAM] unsigned char 
  4908 ;; Return value:  Size  Location     Type
  4909 ;;                  1    wreg      void 
  4910 ;; Registers used:
  4911 ;;		wreg, status,2, status,0, cstack
  4912 ;; Tracked objects:
  4913 ;;		On entry : 0/0
  4914 ;;		On exit  : 0/0
  4915 ;;		Unchanged: 0/0
  4916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4917 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4918 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4920 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4921 ;;Total ram usage:        4 bytes
  4922 ;; Hardware stack levels used: 1
  4923 ;; Hardware stack levels required when called: 3
  4924 ;; This function calls:
  4925 ;;		_LCD_sendnibble
  4926 ;; This function is called by:
  4927 ;;		_main
  4928 ;;		_LCD_Init
  4929 ;;		_LCD_sendstring
  4930 ;;		_LCD_setline
  4931 ;;		_LCD_scroll
  4932 ;;		_ADC2String
  4933 ;; This function uses a non-reentrant model
  4934 ;;
  4935                           
  4936                           	psect	text23
  4937  002554                     __ptext23:
  4938                           	callstack 0
  4939  002554                     _LCD_sendbyte:
  4940                           	callstack 26
  4941                           
  4942                           ;incstack = 0
  4943                           ;LCD_sendbyte@Byte stored from wreg
  4944  002554  6E06               	movwf	LCD_sendbyte@Byte^0,c
  4945  002556                     
  4946                           ;LCD.c: 59: void LCD_sendbyte(unsigned char Byte, char type);LCD.c: 60: {;LCD.c: 61:    
      +                           LATCbits.LATC6 = type;
  4947  002556  B003               	btfsc	LCD_sendbyte@type^0,0,c
  4948  002558  D002               	bra	u2245
  4949  00255A  9C7B               	bcf	123,6,c	;volatile
  4950  00255C  D001               	bra	u2246
  4951  00255E                     u2245:
  4952  00255E  8C7B               	bsf	123,6,c	;volatile
  4953  002560                     u2246:
  4954  002560                     
  4955                           ;LCD.c: 64:     unsigned char MSB = Byte & 0b11110000;
  4956  002560  5006               	movf	LCD_sendbyte@Byte^0,w,c
  4957  002562  0BF0               	andlw	240
  4958  002564  6E04               	movwf	LCD_sendbyte@MSB^0,c
  4959  002566                     
  4960                           ;LCD.c: 65:     LCD_sendnibble(MSB >> 4);
  4961  002566  3804               	swapf	LCD_sendbyte@MSB^0,w,c
  4962  002568  0B0F               	andlw	15
  4963  00256A  EC3B  F011         	call	_LCD_sendnibble
  4964  00256E                     
  4965                           ;LCD.c: 68:     unsigned char LSB = Byte & 0b00001111;
  4966  00256E  5006               	movf	LCD_sendbyte@Byte^0,w,c
  4967  002570  0B0F               	andlw	15
  4968  002572  6E05               	movwf	LCD_sendbyte@LSB^0,c
  4969  002574                     
  4970                           ;LCD.c: 69:     LCD_sendnibble(LSB);
  4971  002574  5005               	movf	LCD_sendbyte@LSB^0,w,c
  4972  002576  EC3B  F011         	call	_LCD_sendnibble
  4973  00257A                     
  4974                           ;LCD.c: 70:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  4975  00257A  0EA0               	movlw	160
  4976  00257C                     u4157:
  4977  00257C  D000               	nop2	
  4978  00257E  2EE8               	decfsz	wreg,f,c
  4979  002580  D7FD               	bra	u4157
  4980  002582  0012               	return		;funcret
  4981  002584                     __end_of_LCD_sendbyte:
  4982                           	callstack 0
  4983                           
  4984 ;; *************** function _LCD_sendnibble *****************
  4985 ;; Defined at:
  4986 ;;		line 20 in file "LCD.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;  number          1    wreg     unsigned char 
  4989 ;; Auto vars:     Size  Location     Type
  4990 ;;  number          1    1[COMRAM] unsigned char 
  4991 ;; Return value:  Size  Location     Type
  4992 ;;                  1    wreg      void 
  4993 ;; Registers used:
  4994 ;;		wreg, cstack
  4995 ;; Tracked objects:
  4996 ;;		On entry : 0/0
  4997 ;;		On exit  : 0/0
  4998 ;;		Unchanged: 0/0
  4999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5001 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5003 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5004 ;;Total ram usage:        1 bytes
  5005 ;; Hardware stack levels used: 1
  5006 ;; Hardware stack levels required when called: 2
  5007 ;; This function calls:
  5008 ;;		_LCD_E_TOG
  5009 ;; This function is called by:
  5010 ;;		_LCD_sendbyte
  5011 ;;		_LCD_Init
  5012 ;; This function uses a non-reentrant model
  5013 ;;
  5014                           
  5015                           	psect	text24
  5016  002276                     __ptext24:
  5017                           	callstack 0
  5018  002276                     _LCD_sendnibble:
  5019                           	callstack 26
  5020                           
  5021                           ;incstack = 0
  5022                           ;LCD_sendnibble@number stored from wreg
  5023  002276  6E02               	movwf	LCD_sendnibble@number^0,c
  5024  002278                     
  5025                           ;LCD.c: 20: void LCD_sendnibble(unsigned char number);LCD.c: 21: {;LCD.c: 22:     if (nu
      +                          mber & 0b0001){
  5026  002278  A002               	btfss	LCD_sendnibble@number^0,0,c
  5027  00227A  EF41  F011         	goto	u2091
  5028  00227E  EF43  F011         	goto	u2090
  5029  002282                     u2091:
  5030  002282  EF46  F011         	goto	l234
  5031  002286                     u2090:
  5032  002286                     
  5033                           ;LCD.c: 23:         LATBbits.LATB3 = 1;
  5034  002286  867A               	bsf	122,3,c	;volatile
  5035                           
  5036                           ;LCD.c: 24:     }
  5037  002288  EF47  F011         	goto	l2293
  5038  00228C                     l234:
  5039                           
  5040                           ;LCD.c: 26:         LATBbits.LATB3 = 0;
  5041  00228C  967A               	bcf	122,3,c	;volatile
  5042  00228E                     l2293:
  5043                           
  5044                           ;LCD.c: 28:     if (number & 0b0010){
  5045  00228E  A202               	btfss	LCD_sendnibble@number^0,1,c
  5046  002290  EF4C  F011         	goto	u2101
  5047  002294  EF4E  F011         	goto	u2100
  5048  002298                     u2101:
  5049  002298  EF51  F011         	goto	l236
  5050  00229C                     u2100:
  5051  00229C                     
  5052                           ;LCD.c: 29:         LATBbits.LATB2 = 1;
  5053  00229C  847A               	bsf	122,2,c	;volatile
  5054                           
  5055                           ;LCD.c: 30:     }
  5056  00229E  EF52  F011         	goto	l2297
  5057  0022A2                     l236:
  5058                           
  5059                           ;LCD.c: 32:         LATBbits.LATB2 = 0;
  5060  0022A2  947A               	bcf	122,2,c	;volatile
  5061  0022A4                     l2297:
  5062                           
  5063                           ;LCD.c: 34:     if (number & 0b0100){
  5064  0022A4  A402               	btfss	LCD_sendnibble@number^0,2,c
  5065  0022A6  EF57  F011         	goto	u2111
  5066  0022AA  EF59  F011         	goto	u2110
  5067  0022AE                     u2111:
  5068  0022AE  EF5C  F011         	goto	l238
  5069  0022B2                     u2110:
  5070  0022B2                     
  5071                           ;LCD.c: 35:         LATEbits.LATE3 = 1;
  5072  0022B2  867D               	bsf	125,3,c	;volatile
  5073                           
  5074                           ;LCD.c: 36:     }
  5075  0022B4  EF5D  F011         	goto	l2301
  5076  0022B8                     l238:
  5077                           
  5078                           ;LCD.c: 38:         LATEbits.LATE3 = 0;
  5079  0022B8  967D               	bcf	125,3,c	;volatile
  5080  0022BA                     l2301:
  5081                           
  5082                           ;LCD.c: 40:     if (number & 0b01000){
  5083  0022BA  A602               	btfss	LCD_sendnibble@number^0,3,c
  5084  0022BC  EF62  F011         	goto	u2121
  5085  0022C0  EF64  F011         	goto	u2120
  5086  0022C4                     u2121:
  5087  0022C4  EF67  F011         	goto	l240
  5088  0022C8                     u2120:
  5089  0022C8                     
  5090                           ;LCD.c: 41:         LATEbits.LATE1 = 1;
  5091  0022C8  827D               	bsf	125,1,c	;volatile
  5092                           
  5093                           ;LCD.c: 42:     }
  5094  0022CA  EF68  F011         	goto	l2305
  5095  0022CE                     l240:
  5096                           
  5097                           ;LCD.c: 44:         LATEbits.LATE1 = 0;
  5098  0022CE  927D               	bcf	125,1,c	;volatile
  5099  0022D0                     l2305:
  5100                           
  5101                           ;LCD.c: 50:     LCD_E_TOG();
  5102  0022D0  EC29  F013         	call	_LCD_E_TOG	;wreg free
  5103  0022D4                     
  5104                           ;LCD.c: 51:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  5105  0022D4  0E1A               	movlw	26
  5106  0022D6                     u4167:
  5107  0022D6  2EE8               	decfsz	wreg,f,c
  5108  0022D8  D7FE               	bra	u4167
  5109  0022DA  D000               	nop2	
  5110  0022DC  0012               	return		;funcret
  5111  0022DE                     __end_of_LCD_sendnibble:
  5112                           	callstack 0
  5113                           
  5114 ;; *************** function _LCD_E_TOG *****************
  5115 ;; Defined at:
  5116 ;;		line 9 in file "LCD.c"
  5117 ;; Parameters:    Size  Location     Type
  5118 ;;		None
  5119 ;; Auto vars:     Size  Location     Type
  5120 ;;		None
  5121 ;; Return value:  Size  Location     Type
  5122 ;;                  1    wreg      void 
  5123 ;; Registers used:
  5124 ;;		wreg
  5125 ;; Tracked objects:
  5126 ;;		On entry : 0/0
  5127 ;;		On exit  : 0/0
  5128 ;;		Unchanged: 0/0
  5129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5134 ;;Total ram usage:        0 bytes
  5135 ;; Hardware stack levels used: 1
  5136 ;; Hardware stack levels required when called: 1
  5137 ;; This function calls:
  5138 ;;		Nothing
  5139 ;; This function is called by:
  5140 ;;		_LCD_sendnibble
  5141 ;; This function uses a non-reentrant model
  5142 ;;
  5143                           
  5144                           	psect	text25
  5145  002652                     __ptext25:
  5146                           	callstack 0
  5147  002652                     _LCD_E_TOG:
  5148                           	callstack 26
  5149  002652                     
  5150                           ;LCD.c: 11:  LATCbits.LATC2 = 1;
  5151  002652  847B               	bsf	123,2,c	;volatile
  5152  002654                     
  5153                           ;LCD.c: 12:  _delay((unsigned long)((5)*(64000000/4000000.0)));
  5154  002654  0E1A               	movlw	26
  5155  002656                     u4177:
  5156  002656  2EE8               	decfsz	wreg,f,c
  5157  002658  D7FE               	bra	u4177
  5158  00265A  D000               	nop2	
  5159  00265C                     
  5160                           ;LCD.c: 13:  LATCbits.LATC2 = 0;
  5161  00265C  947B               	bcf	123,2,c	;volatile
  5162                           
  5163                           ;LCD.c: 14:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  5164  00265E  0E1A               	movlw	26
  5165  002660                     u4187:
  5166  002660  2EE8               	decfsz	wreg,f,c
  5167  002662  D7FE               	bra	u4187
  5168  002664  D000               	nop2	
  5169  002666  0012               	return		;funcret
  5170  002668                     __end_of_LCD_E_TOG:
  5171                           	callstack 0
  5172                           
  5173 ;; *************** function _Interrupts_init *****************
  5174 ;; Defined at:
  5175 ;;		line 8 in file "interrupts.c"
  5176 ;; Parameters:    Size  Location     Type
  5177 ;;		None
  5178 ;; Auto vars:     Size  Location     Type
  5179 ;;		None
  5180 ;; Return value:  Size  Location     Type
  5181 ;;                  1    wreg      void 
  5182 ;; Registers used:
  5183 ;;		None
  5184 ;; Tracked objects:
  5185 ;;		On entry : 0/0
  5186 ;;		On exit  : 0/0
  5187 ;;		Unchanged: 0/0
  5188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5193 ;;Total ram usage:        0 bytes
  5194 ;; Hardware stack levels used: 1
  5195 ;; Hardware stack levels required when called: 1
  5196 ;; This function calls:
  5197 ;;		Nothing
  5198 ;; This function is called by:
  5199 ;;		_main
  5200 ;; This function uses a non-reentrant model
  5201 ;;
  5202                           
  5203                           	psect	text26
  5204  002668                     __ptext26:
  5205                           	callstack 0
  5206  002668                     _Interrupts_init:
  5207                           	callstack 29
  5208  002668                     
  5209                           ;interrupts.c: 12:     INTCONbits.PEIE=1;
  5210  002668  8CF2               	bsf	242,6,c	;volatile
  5211                           
  5212                           ;interrupts.c: 13:     PIE0bits.TMR0IE=1;
  5213  00266A  010E               	movlb	14	; () banked
  5214  00266C  8B29               	bsf	41,5,b	;volatile
  5215                           
  5216                           ;interrupts.c: 14:     PIE2bits.C1IE=1;
  5217  00266E  812B               	bsf	43,0,b	;volatile
  5218                           
  5219                           ;interrupts.c: 15:     INTCONbits.GIE=1;
  5220  002670  8EF2               	bsf	242,7,c	;volatile
  5221  002672                     
  5222                           ; BSR set to: 14
  5223  002672  0012               	return		;funcret
  5224  002674                     __end_of_Interrupts_init:
  5225                           	callstack 0
  5226                           
  5227 ;; *************** function _ADC_init *****************
  5228 ;; Defined at:
  5229 ;;		line 9 in file "ADC.c"
  5230 ;; Parameters:    Size  Location     Type
  5231 ;;		None
  5232 ;; Auto vars:     Size  Location     Type
  5233 ;;		None
  5234 ;; Return value:  Size  Location     Type
  5235 ;;                  1    wreg      void 
  5236 ;; Registers used:
  5237 ;;		wreg, status,2
  5238 ;; Tracked objects:
  5239 ;;		On entry : 0/0
  5240 ;;		On exit  : 0/0
  5241 ;;		Unchanged: 0/0
  5242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5247 ;;Total ram usage:        0 bytes
  5248 ;; Hardware stack levels used: 1
  5249 ;; Hardware stack levels required when called: 1
  5250 ;; This function calls:
  5251 ;;		Nothing
  5252 ;; This function is called by:
  5253 ;;		_main
  5254 ;; This function uses a non-reentrant model
  5255 ;;
  5256                           
  5257                           	psect	text27
  5258  002620                     __ptext27:
  5259                           	callstack 0
  5260  002620                     _ADC_init:
  5261                           	callstack 29
  5262  002620                     
  5263                           ;ADC.c: 11:     TRISAbits.TRISA3=1;
  5264  002620  8681               	bsf	129,3,c	;volatile
  5265                           
  5266                           ;ADC.c: 12:     ANSELAbits.ANSELA3=1;
  5267  002622  010E               	movlb	14	; () banked
  5268  002624  8792               	bsf	146,3,b	;volatile
  5269                           
  5270                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
  5271  002626  010F               	movlb	15	; () banked
  5272  002628  9958               	bcf	88,4,b	;volatile
  5273  00262A                     
  5274                           ; BSR set to: 15
  5275                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  5276  00262A  0EFC               	movlw	-4
  5277  00262C  1758               	andwf	88,f,b	;volatile
  5278                           
  5279                           ;ADC.c: 17:     ADPCH=0b11;
  5280  00262E  0E03               	movlw	3
  5281  002630  6F5F               	movwf	95,b	;volatile
  5282  002632                     
  5283                           ; BSR set to: 15
  5284                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
  5285  002632  9460               	bcf	96,2,c	;volatile
  5286  002634                     
  5287                           ; BSR set to: 15
  5288                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
  5289  002634  8860               	bsf	96,4,c	;volatile
  5290  002636                     
  5291                           ; BSR set to: 15
  5292                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
  5293  002636  8E60               	bsf	96,7,c	;volatile
  5294  002638                     
  5295                           ; BSR set to: 15
  5296  002638  0012               	return		;funcret
  5297  00263A                     __end_of_ADC_init:
  5298                           	callstack 0
  5299                           
  5300 ;; *************** function _ADC_getval *****************
  5301 ;; Defined at:
  5302 ;;		line 23 in file "ADC.c"
  5303 ;; Parameters:    Size  Location     Type
  5304 ;;		None
  5305 ;; Auto vars:     Size  Location     Type
  5306 ;;  tmpval          2    3[COMRAM] unsigned int 
  5307 ;; Return value:  Size  Location     Type
  5308 ;;                  2    1[COMRAM] unsigned int 
  5309 ;; Registers used:
  5310 ;;		wreg, status,2, status,0
  5311 ;; Tracked objects:
  5312 ;;		On entry : 0/0
  5313 ;;		On exit  : 0/0
  5314 ;;		Unchanged: 0/0
  5315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5316 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5317 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5319 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5320 ;;Total ram usage:        4 bytes
  5321 ;; Hardware stack levels used: 1
  5322 ;; Hardware stack levels required when called: 1
  5323 ;; This function calls:
  5324 ;;		Nothing
  5325 ;; This function is called by:
  5326 ;;		_main
  5327 ;; This function uses a non-reentrant model
  5328 ;;
  5329                           
  5330                           	psect	text28
  5331  002584                     __ptext28:
  5332                           	callstack 0
  5333  002584                     _ADC_getval:
  5334                           	callstack 29
  5335  002584                     
  5336                           ;ADC.c: 25:     unsigned int tmpval;;ADC.c: 27:     ADCON0bits.GO = 1;
  5337  002584  8060               	bsf	96,0,c	;volatile
  5338  002586                     l18:
  5339  002586  B060               	btfsc	96,0,c	;volatile
  5340  002588  EFC8  F012         	goto	u2261
  5341  00258C  EFCA  F012         	goto	u2260
  5342  002590                     u2261:
  5343  002590  EFC3  F012         	goto	l18
  5344  002594                     u2260:
  5345  002594                     
  5346                           ;ADC.c: 31:     tmpval = ADRESH;
  5347  002594  CF64 F004          	movff	3940,ADC_getval@tmpval	;volatile
  5348  002598  6A05               	clrf	(ADC_getval@tmpval+1)^0,c
  5349  00259A                     
  5350                           ;ADC.c: 35:     tmpval = 255 - tmpval;
  5351  00259A  5004               	movf	ADC_getval@tmpval^0,w,c
  5352  00259C  08FF               	sublw	255
  5353  00259E  6E04               	movwf	ADC_getval@tmpval^0,c
  5354  0025A0  5005               	movf	(ADC_getval@tmpval+1)^0,w,c
  5355  0025A2  A0D8               	btfss	status,0,c
  5356  0025A4  2AE8               	incf	wreg,f,c
  5357  0025A6  0800               	sublw	0
  5358  0025A8  6E05               	movwf	(ADC_getval@tmpval+1)^0,c
  5359  0025AA                     
  5360                           ;ADC.c: 37:     return tmpval;
  5361  0025AA  C004  F002         	movff	ADC_getval@tmpval,?_ADC_getval
  5362  0025AE  C005  F003         	movff	ADC_getval@tmpval+1,?_ADC_getval+1
  5363  0025B2  0012               	return		;funcret
  5364  0025B4                     __end_of_ADC_getval:
  5365                           	callstack 0
  5366                           
  5367 ;; *************** function _HighISR *****************
  5368 ;; Defined at:
  5369 ;;		line 22 in file "interrupts.c"
  5370 ;; Parameters:    Size  Location     Type
  5371 ;;		None
  5372 ;; Auto vars:     Size  Location     Type
  5373 ;;		None
  5374 ;; Return value:  Size  Location     Type
  5375 ;;                  1    wreg      void 
  5376 ;; Registers used:
  5377 ;;		wreg, status,2, status,0
  5378 ;; Tracked objects:
  5379 ;;		On entry : 0/0
  5380 ;;		On exit  : 0/0
  5381 ;;		Unchanged: 0/0
  5382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5385 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5386 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5387 ;;Total ram usage:        1 bytes
  5388 ;; Hardware stack levels used: 1
  5389 ;; This function calls:
  5390 ;;		Nothing
  5391 ;; This function is called by:
  5392 ;;		Interrupt level 2
  5393 ;; This function uses a non-reentrant model
  5394 ;;
  5395                           
  5396                           	psect	intcode
  5397  000008                     __pintcode:
  5398                           	callstack 0
  5399  000008                     _HighISR:
  5400                           	callstack 22
  5401                           
  5402                           ;incstack = 0
  5403  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5404  00000A                     
  5405                           ;interrupts.c: 24:     if (PIR2bits.C1IF == 1){
  5406  00000A  010E               	movlb	14	; () banked
  5407  00000C  A135               	btfss	53,0,b	;volatile
  5408  00000E  EF0B  F000         	goto	i2u151_41
  5409  000012  EF0D  F000         	goto	i2u151_40
  5410  000016                     i2u151_41:
  5411  000016  EF21  F000         	goto	i2l1937
  5412  00001A                     i2u151_40:
  5413  00001A                     
  5414                           ; BSR set to: 14
  5415                           ;interrupts.c: 25:         LATHbits.LATH3 = !LATHbits.LATH3;
  5416  00001A  A680               	btfss	128,3,c	;volatile
  5417  00001C  EF12  F000         	goto	i2u152_41
  5418  000020  EF16  F000         	goto	i2u152_40
  5419  000024                     i2u152_41:
  5420  000024  6A01               	clrf	??_HighISR^0,c
  5421  000026  2A01               	incf	??_HighISR^0,f,c
  5422  000028  EF17  F000         	goto	i2u153_48
  5423  00002C                     i2u152_40:
  5424  00002C  6A01               	clrf	??_HighISR^0,c
  5425  00002E                     i2u153_48:
  5426  00002E  4601               	rlncf	??_HighISR^0,f,c
  5427  000030  4601               	rlncf	??_HighISR^0,f,c
  5428  000032  4601               	rlncf	??_HighISR^0,f,c
  5429  000034  5080               	movf	128,w,c	;volatile
  5430  000036  1801               	xorwf	??_HighISR^0,w,c
  5431  000038  0BF7               	andlw	-9
  5432  00003A  1801               	xorwf	??_HighISR^0,w,c
  5433  00003C  6E80               	movwf	128,c	;volatile
  5434  00003E                     
  5435                           ;interrupts.c: 26:         PIR2bits.C1IF=0;
  5436  00003E  010E               	movlb	14	; () banked
  5437  000040  9135               	bcf	53,0,b	;volatile
  5438  000042                     i2l1937:
  5439                           
  5440                           ; BSR set to: 14
  5441                           ;interrupts.c: 29:     if (PIR0bits.TMR0IF == 1){
  5442  000042  AB33               	btfss	51,5,b	;volatile
  5443  000044  EF26  F000         	goto	i2u154_41
  5444  000048  EF28  F000         	goto	i2u154_40
  5445  00004C                     i2u154_41:
  5446  00004C  EF3F  F000         	goto	i2l198
  5447  000050                     i2u154_40:
  5448  000050                     
  5449                           ; BSR set to: 14
  5450                           ;interrupts.c: 30:         LATDbits.LATD7 = !LATDbits.LATD7;
  5451  000050  AE7C               	btfss	124,7,c	;volatile
  5452  000052  EF2D  F000         	goto	i2u155_41
  5453  000056  EF31  F000         	goto	i2u155_40
  5454  00005A                     i2u155_41:
  5455  00005A  6A01               	clrf	??_HighISR^0,c
  5456  00005C  2A01               	incf	??_HighISR^0,f,c
  5457  00005E  EF32  F000         	goto	i2u156_48
  5458  000062                     i2u155_40:
  5459  000062  6A01               	clrf	??_HighISR^0,c
  5460  000064                     i2u156_48:
  5461  000064  3201               	rrcf	??_HighISR^0,f,c
  5462  000066  3201               	rrcf	??_HighISR^0,f,c
  5463  000068  507C               	movf	124,w,c	;volatile
  5464  00006A  1801               	xorwf	??_HighISR^0,w,c
  5465  00006C  0B7F               	andlw	-129
  5466  00006E  1801               	xorwf	??_HighISR^0,w,c
  5467  000070  6E7C               	movwf	124,c	;volatile
  5468  000072                     
  5469                           ;interrupts.c: 31:         TMR0H=0b00001011;
  5470  000072  0E0B               	movlw	11
  5471  000074  6ED4               	movwf	212,c	;volatile
  5472  000076                     
  5473                           ;interrupts.c: 32:         TMR0L=0b11011011;
  5474  000076  0EDB               	movlw	219
  5475  000078  6ED3               	movwf	211,c	;volatile
  5476  00007A                     
  5477                           ;interrupts.c: 33:         PIR0bits.TMR0IF=0;
  5478  00007A  010E               	movlb	14	; () banked
  5479  00007C  9B33               	bcf	51,5,b	;volatile
  5480  00007E                     i2l198:
  5481                           
  5482                           ; BSR set to: 14
  5483  00007E  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5484  000080  0011               	retfie		f
  5485  000082                     __end_of_HighISR:
  5486                           	callstack 0
  5487                           
  5488                           	psect	rparam
  5489  0000                     
  5490                           	psect	temp
  5491  00005B                     btemp:
  5492                           	callstack 0
  5493  00005B                     	ds	1
  5494  0000                     int$flags	set	btemp
  5495  0000                     wtemp8	set	btemp+1
  5496  0000                     ttemp5	set	btemp+1
  5497  0000                     ttemp6	set	btemp+4
  5498  0000                     ttemp7	set	btemp+8
  5499                           
  5500                           	psect	idloc
  5501                           
  5502                           ;Config register IDLOC0 @ 0x200000
  5503                           ;	unspecified, using default values
  5504  200000                     	org	2097152
  5505  200000  0FFF               	dw	4095
  5506                           
  5507                           ;Config register IDLOC1 @ 0x200002
  5508                           ;	unspecified, using default values
  5509  200002                     	org	2097154
  5510  200002  0FFF               	dw	4095
  5511                           
  5512                           ;Config register IDLOC2 @ 0x200004
  5513                           ;	unspecified, using default values
  5514  200004                     	org	2097156
  5515  200004  0FFF               	dw	4095
  5516                           
  5517                           ;Config register IDLOC3 @ 0x200006
  5518                           ;	unspecified, using default values
  5519  200006                     	org	2097158
  5520  200006  0FFF               	dw	4095
  5521                           
  5522                           ;Config register IDLOC4 @ 0x200008
  5523                           ;	unspecified, using default values
  5524  200008                     	org	2097160
  5525  200008  0FFF               	dw	4095
  5526                           
  5527                           ;Config register IDLOC5 @ 0x20000A
  5528                           ;	unspecified, using default values
  5529  20000A                     	org	2097162
  5530  20000A  0FFF               	dw	4095
  5531                           
  5532                           ;Config register IDLOC6 @ 0x20000C
  5533                           ;	unspecified, using default values
  5534  20000C                     	org	2097164
  5535  20000C  0FFF               	dw	4095
  5536                           
  5537                           ;Config register IDLOC7 @ 0x20000E
  5538                           ;	unspecified, using default values
  5539  20000E                     	org	2097166
  5540  20000E  0FFF               	dw	4095
  5541                           
  5542                           	psect	config
  5543                           
  5544                           ;Config register CONFIG1L @ 0x300000
  5545                           ;	External Oscillator mode Selection bits
  5546                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5547                           ;	Power-up default value for COSC bits
  5548                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5549  300000                     	org	3145728
  5550  300000  AA                 	db	170
  5551                           
  5552                           ;Config register CONFIG1H @ 0x300001
  5553                           ;	unspecified, using default values
  5554                           ;	Clock Out Enable bit
  5555                           ;	CLKOUTEN = 0x1, unprogrammed default
  5556                           ;	Clock Switch Enable bit
  5557                           ;	CSWEN = 0x1, unprogrammed default
  5558                           ;	Fail-Safe Clock Monitor Enable bit
  5559                           ;	FCMEN = 0x1, unprogrammed default
  5560  300001                     	org	3145729
  5561  300001  FF                 	db	255
  5562                           
  5563                           ;Config register CONFIG2L @ 0x300002
  5564                           ;	unspecified, using default values
  5565                           ;	Master Clear Enable bit
  5566                           ;	MCLRE = 0x1, unprogrammed default
  5567                           ;	Power-up Timer Enable bit
  5568                           ;	PWRTE = 0x1, unprogrammed default
  5569                           ;	Low-power BOR enable bit
  5570                           ;	LPBOREN = 0x1, unprogrammed default
  5571                           ;	Brown-out Reset Enable bits
  5572                           ;	BOREN = 0x3, unprogrammed default
  5573  300002                     	org	3145730
  5574  300002  FF                 	db	255
  5575                           
  5576                           ;Config register CONFIG2H @ 0x300003
  5577                           ;	unspecified, using default values
  5578                           ;	Brown Out Reset Voltage selection bits
  5579                           ;	BORV = 0x3, unprogrammed default
  5580                           ;	ZCD Disable bit
  5581                           ;	ZCD = 0x1, unprogrammed default
  5582                           ;	PPSLOCK bit One-Way Set Enable bit
  5583                           ;	PPS1WAY = 0x1, unprogrammed default
  5584                           ;	Stack Full/Underflow Reset Enable bit
  5585                           ;	STVREN = 0x1, unprogrammed default
  5586                           ;	Debugger Enable bit
  5587                           ;	DEBUG = 0x1, unprogrammed default
  5588                           ;	Extended Instruction Set Enable bit
  5589                           ;	XINST = 0x1, unprogrammed default
  5590  300003                     	org	3145731
  5591  300003  FF                 	db	255
  5592                           
  5593                           ;Config register CONFIG3L @ 0x300004
  5594                           ;	WDT Period Select bits
  5595                           ;	WDTCPS = 0x1F, unprogrammed default
  5596                           ;	WDT operating mode
  5597                           ;	WDTE = OFF, WDT Disabled
  5598  300004                     	org	3145732
  5599  300004  9F                 	db	159
  5600                           
  5601                           ;Config register CONFIG3H @ 0x300005
  5602                           ;	unspecified, using default values
  5603                           ;	WDT Window Select bits
  5604                           ;	WDTCWS = 0x7, unprogrammed default
  5605                           ;	WDT input clock selector
  5606                           ;	WDTCCS = 0x7, unprogrammed default
  5607  300005                     	org	3145733
  5608  300005  FF                 	db	255
  5609                           
  5610                           ;Config register CONFIG4L @ 0x300006
  5611                           ;	unspecified, using default values
  5612                           ;	Write Protection Block 0
  5613                           ;	WRT0 = 0x1, unprogrammed default
  5614                           ;	Write Protection Block 1
  5615                           ;	WRT1 = 0x1, unprogrammed default
  5616                           ;	Write Protection Block 2
  5617                           ;	WRT2 = 0x1, unprogrammed default
  5618                           ;	Write Protection Block 3
  5619                           ;	WRT3 = 0x1, unprogrammed default
  5620                           ;	Write Protection Block 3
  5621                           ;	WRT4 = 0x1, unprogrammed default
  5622                           ;	Write Protection Block 3
  5623                           ;	WRT5 = 0x1, unprogrammed default
  5624                           ;	Write Protection Block 3
  5625                           ;	WRT6 = 0x1, unprogrammed default
  5626                           ;	Write Protection Block 3
  5627                           ;	WRT7 = 0x1, unprogrammed default
  5628  300006                     	org	3145734
  5629  300006  FF                 	db	255
  5630                           
  5631                           ;Config register CONFIG4H @ 0x300007
  5632                           ;	unspecified, using default values
  5633                           ;	Configuration Register Write Protection bit
  5634                           ;	WRTC = 0x1, unprogrammed default
  5635                           ;	Boot Block Write Protection bit
  5636                           ;	WRTB = 0x1, unprogrammed default
  5637                           ;	Data EEPROM Write Protection bit
  5638                           ;	WRTD = 0x1, unprogrammed default
  5639                           ;	Scanner Enable bit
  5640                           ;	SCANE = 0x1, unprogrammed default
  5641                           ;	Low Voltage Programming Enable bit
  5642                           ;	LVP = 0x1, unprogrammed default
  5643  300007                     	org	3145735
  5644  300007  FF                 	db	255
  5645                           
  5646                           ;Config register CONFIG5L @ 0x300008
  5647                           ;	unspecified, using default values
  5648                           ;	UserNVM Program Memory Code Protection bit
  5649                           ;	CP = 0x1, unprogrammed default
  5650                           ;	DataNVM Memory Code Protection bit
  5651                           ;	CPD = 0x1, unprogrammed default
  5652  300008                     	org	3145736
  5653  300008  FF                 	db	255
  5654                           
  5655                           ;Config register CONFIG5H @ 0x300009
  5656                           ;	unspecified, using default values
  5657  300009                     	org	3145737
  5658  300009  FF                 	db	255
  5659                           
  5660                           ;Config register CONFIG6L @ 0x30000A
  5661                           ;	unspecified, using default values
  5662                           ;	Table Read Protection Block 0
  5663                           ;	EBTR0 = 0x1, unprogrammed default
  5664                           ;	Table Read Protection Block 1
  5665                           ;	EBTR1 = 0x1, unprogrammed default
  5666                           ;	Table Read Protection Block 2
  5667                           ;	EBTR2 = 0x1, unprogrammed default
  5668                           ;	Table Read Protection Block 3
  5669                           ;	EBTR3 = 0x1, unprogrammed default
  5670                           ;	Table Read Protection Block 4
  5671                           ;	EBTR4 = 0x1, unprogrammed default
  5672                           ;	Table Read Protection Block 5
  5673                           ;	EBTR5 = 0x1, unprogrammed default
  5674                           ;	Table Read Protection Block 6
  5675                           ;	EBTR6 = 0x1, unprogrammed default
  5676                           ;	Table Read Protection Block 7
  5677                           ;	EBTR7 = 0x1, unprogrammed default
  5678  30000A                     	org	3145738
  5679  30000A  FF                 	db	255
  5680                           
  5681                           ;Config register CONFIG6H @ 0x30000B
  5682                           ;	unspecified, using default values
  5683                           ;	Boot Block Table Read Protection bit
  5684                           ;	EBTRB = 0x1, unprogrammed default
  5685  30000B                     	org	3145739
  5686  30000B  FF                 	db	255
  5687                           tosu	equ	0xFFF
  5688                           tosh	equ	0xFFE
  5689                           tosl	equ	0xFFD
  5690                           stkptr	equ	0xFFC
  5691                           pclatu	equ	0xFFB
  5692                           pclath	equ	0xFFA
  5693                           pcl	equ	0xFF9
  5694                           tblptru	equ	0xFF8
  5695                           tblptrh	equ	0xFF7
  5696                           tblptrl	equ	0xFF6
  5697                           tablat	equ	0xFF5
  5698                           prodh	equ	0xFF4
  5699                           prodl	equ	0xFF3
  5700                           indf0	equ	0xFEF
  5701                           postinc0	equ	0xFEE
  5702                           postdec0	equ	0xFED
  5703                           preinc0	equ	0xFEC
  5704                           plusw0	equ	0xFEB
  5705                           fsr0h	equ	0xFEA
  5706                           fsr0l	equ	0xFE9
  5707                           wreg	equ	0xFE8
  5708                           indf1	equ	0xFE7
  5709                           postinc1	equ	0xFE6
  5710                           postdec1	equ	0xFE5
  5711                           preinc1	equ	0xFE4
  5712                           plusw1	equ	0xFE3
  5713                           fsr1h	equ	0xFE2
  5714                           fsr1l	equ	0xFE1
  5715                           bsr	equ	0xFE0
  5716                           indf2	equ	0xFDF
  5717                           postinc2	equ	0xFDE
  5718                           postdec2	equ	0xFDD
  5719                           preinc2	equ	0xFDC
  5720                           plusw2	equ	0xFDB
  5721                           fsr2h	equ	0xFDA
  5722                           fsr2l	equ	0xFD9
  5723                           status	equ	0xFD8

Data Sizes:
    Strings     33
    Constant    0
    Data        24
    BSS         44
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     88      90
    BANK0           160    119     153
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 25
		 -> main@buf(BANK0[25]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 25
		 -> main@buf(BANK0[25]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1664_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 25
		 -> main@buf(BANK0[25]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 25
		 -> main@buf(BANK0[25]), 

    LCD_sendstring@string	PTR unsigned char  size(2) Largest target is 25
		 -> main@buf(BANK0[25]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _LCD_sendstring->_LCD_sendbyte
    _LCD_Init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                91    91      0   20806
                                             28 BANK0     91    91      0
                         _ADC_getval
                           _ADC_init
                    _Interrupts_init
                           _LCD_Init
                       _LCD_sendbyte
                     _LCD_sendstring
                  _LEDarray_disp_bin
                      _LEDarray_init
                        _Timer0_init
                            ___lwdiv
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             24    10     14   12113
                                              6 BANK0     22     8     14
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   11441
                                             86 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6   10911
                                             64 COMRAM    22    16      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5683
                                             28 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3417
                                             17 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             19 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              1 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              1 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    2695
                                              8 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              1 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1592
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     618
                                              1 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     502
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_sendstring                                       2     0      2    1385
                                              6 COMRAM     2     0      2
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0    1276
                                              6 COMRAM     2     2      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (2) _LCD_sendbyte                                         4     3      1    1188
                                              2 COMRAM     4     3      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (3) _LCD_sendnibble                                       1     1      0      88
                                              1 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (4) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_getval                                           4     2      2      46
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_getval
   _ADC_init
   _Interrupts_init
   _LCD_Init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
   _LCD_sendbyte
   _LCD_sendstring
     _LCD_sendbyte
   _LEDarray_disp_bin
   _LEDarray_init
   _Timer0_init
   ___lwdiv
   ___wmul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc
         _isdigit

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     77      99       5       95.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     58      5A       1       95.7%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     113       8        0.0%
DATA                 0      0     113       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Nov 08 00:39:12 2021

                        l20 2594                          l21 25B2                          l15 2638  
                        l18 2586                          l61 0F0A                          l63 0F04  
                        l76 11B8         ___wmul@multiplicand 0004           ??_Interrupts_init 0002  
                       l111 25FE                         l120 20CE                         l121 20D0  
                       l130 213C                         l122 20E4                         l114 208C  
                       l123 20E6                         l115 208E                         l132 213E  
                       l124 20FA                         l116 20A2                         l125 20FC  
                       l117 20A4                         l126 2110                         l118 20B8  
                       l231 2666                         l127 2112                         l119 20BA  
                       l240 22CE                         l128 2126                         l129 2128  
                       l209 261E                         l242 22DC                         l234 228C  
                       l236 22A2                         l245 2582                         l238 22B8  
                       l191 2672                         l248 1FAC                         l259 2552  
                       l268 25D8                         l382 1D6E                         l395 1ED2  
                       l766 2274                         l759 226C                         l946 2394  
                       l980 21C6                         l982 2200                         l990 180C  
                       l977 2184                         l988 1804                         _abs 2472  
                       _pad 2140                         wreg 000FE8         __size_of_ADC_getval 0030  
               main@daydate 00CF          main@light_strength 00C9                        l1022 14D2  
                      l1008 1A42                        l1051 24B0                        l1043 233A  
                      ?_abs 0014                        l1108 2076                        l1116 2470  
                      l1044 2342                        l1125 251E                        l1037 1762  
                      l1119 2674                        l1048 24A8                        l3001 1EB2  
                      l1082 1BE6                        l3011 2170                        l2301 22BA  
                      l1085 24E8                        l1093 23E6                        l3021 21D4  
                      l3013 217C                        l3005 2140                        l3101 1A02  
                      l2303 22C8                        l3031 24B2                        l1079 1BDE  
                      l3111 1A58                        l3023 21E8                        l3015 2190  
                      l3007 214E                        l3103 1A0A                        l2305 22D0  
                      l3041 23DC                        l3121 1ABE                        l3113 1A5C  
                      l3017 21A4                        l3009 2162                        l3105 1A1A  
                      l3201 157E                        l2307 22D4                        l2411 256E  
                      l3043 23E0                        l3035 2396                        l3131 1AEA  
                      l3115 1A60                        l3027 2472                        l3019 21A8  
                      l3051 17AC                        l3211 1610                        l3203 158C  
                      l2181 2654                        l2413 2574                        l2405 2556  
                      l2501 210A                        l3037 239A                        l3141 1B9E  
                      l3133 1B22                        l3125 1AC4                        l3117 1A80  
                      l3109 1A44                        l3029 248C                        l3061 1814  
                      l3053 17CC                        l3221 16E0                        l3213 1638  
                      l3301 0EA4                        l2431 2634                        l2183 265C  
                      l2415 257A                        l2407 2560                        l2503 2120  
                      l3039 23AE                        l3143 1BB0                        l3127 1ADA  
                      l3119 1ABA                        l3071 184C                        l3063 1826  
                      l3055 17DC                        l3047 1764                        l3231 171C  
                      l3223 16EE                        l3215 1680                        l3207 15D6  
                      l3151 13D8                        l3311 0EEE                        l3303 0EAC  
                      l2433 2636                        l2425 2620                        l2409 2566  
                      l2521 2524                        l2505 2136                        l3145 1BC2  
                      l3137 1B5C                        l3129 1AE2                        l3073 1852  
                      l3081 1944                        l3065 1834                        l3057 17DE  
                      l3049 1784                        l3225 1702                        l3209 15E8  
                      l3161 1430                        l3153 1400                        l3401 11B8  
                      l3321 0F68                        l3313 0F0C                        l3305 0EB4  
                      l2435 2584                        l2427 262A                        l2179 2652  
                      l2291 2286                        l2523 2536                        l2443 25DA  
                      l2451 261C                        l2531 221C                        l3083 195E  
                      l3091 19BE                        l3075 18D4                        l3067 183A  
                      l3059 17F8                        l3219 16B8                        l3163 1432  
                      l3155 140E                        l3235 1728                        l3251 22F4  
                      l3411 1220                        l3403 11CC                        l3331 0FAA  
                      l3323 0F6C                        l3315 0F26                        l3307 0EC0  
                      l2437 259A                        l2429 2632                        l2453 2668  
                      l2293 228E                        l2461 1F0A                        l2525 253A  
                      l2445 2600                        l2541 2256                        l2533 2224  
                      l3501 1B0C                        l3093 19D0                        l3085 197C  
                      l3077 18DA                        l3069 1842                        l3237 1750  
                      l3229 170E                        l3181 145C                        l3173 1450  
                      l3165 1444                        l3157 1420                        l3253 231A  
                      l3261 2366                        l3421 1296                        l3405 11DE  
                      l3413 1242                        l3341 0FF0                        l3333 0FC6  
                      l3325 0F88                        l3317 0F32                        l3309 0ED8  
                      l2439 25AA                        l2295 229C                        l2471 1F3E  
                      l2463 1F1A                        l2455 1ED4                        l2519 2520  
                      l2447 2608                        l2543 225E                        l2535 222C  
                      l2527 2202                        l3095 19DE                        l3087 1996  
                      l3079 18E0                        l3191 14E2                        l3159 1424  
                      l3247 22DE                        l3263 2382                        l3255 2344  
                      l3431 1328                        l3415 1254                        l3423 12B8  
                      l3407 11F4                        l3351 102C                        l3343 0FF4  
                      l3335 0FCA                        l3327 0F9E                        l3319 0F3A  
                      l3271 0E30                        l2297 22A4                        l2289 2278  
                      l2481 1F72                        l2473 1F48                        l2465 1F24  
                      l2457 1EEC                        l2449 2612                        l2545 2260  
                      l2537 223A                        l2529 220A                        l3097 19E4  
                      l3089 19B0                        l3193 150A                        l3185 1468  
                      l3177 1456                        l3169 144A                        l3249 22E6  
                      l3257 2356                        l3441 13B4                        l3425 12D2  
                      l3417 126A                        l3409 120A                        l3433 134A  
                      l3361 1084                        l3353 1030                        l3345 0FF8  
                      l3337 0FD2                        l3329 0FA2                        l3281 0E4A  
                      l3273 0E34                        l2299 22B2                        l2483 1F8A  
                      l2475 1F50                        l2467 1F2C                        l2459 1F04  
                      l2491 209C                        l2547 2266                        l2539 2240  
                      l3099 19F6                        l3195 1540                        l3187 14C0  
                      l3259 235E                        l3443 13BE                        l3435 1386  
                      l3427 1304                        l3419 1280                        l3371 10BA  
                      l3363 108C                        l3355 1038                        l3347 100E  
                      l3339 0FE8                        l3291 0E7C                        l3283 0E52  
                      l3275 0E3C                        l3267 0E24                        l2485 1F94  
                      l2477 1F5A                        l2469 1F36                        l2493 20B2  
                      l2901 242E                        l3197 1550                        l3189 14E0  
                      l3437 1390                        l3429 130C                        l3381 10F0  
                      l3373 10BE                        l3365 1094                        l3357 1040  
                      l3349 1016                        l3293 0E84                        l3285 0E52  
                      l3277 0E40                        l3269 0E2C                        l2479 1F68  
                      l2495 20C8                        l2487 2078                        l2903 243A  
                      l2911 24F6                        l3199 155E                        l3439 139C  
                      l3391 116E                        l3383 113C                        l3375 10C6  
                      l3367 109C                        l3359 1080                        l3295 0E8C  
                      l3287 0E64                        l3279 0E40                        l2497 20DE  
                      l2489 2086                        l2921 25D0                        l2905 244C  
                      l2913 24FA                        l3393 1182                        l3385 1150  
                      l3377 10CE                        l3369 10A4                        l3297 0E94  
                      l3289 0E6C                        l2499 20F4                        l2931 1C1A  
                      l2907 2450                        l2915 2512                        l3395 1194  
                      l3387 1162                        l3379 10DA                        l3299 0E9C  
                      l2941 1C5C                        l2933 1C1E                        l2925 1BE8  
                      l2909 24EA                        l3397 11A6                        l3389 1166  
                      ?_pad 0012                        l2919 25B4                        l2951 1CB6  
                      l2943 1C7A                        l2935 1C2C                        l2927 1BEC  
                      l3399 11AC                        l2953 1CE4                        l2945 1C82  
                      l2961 1D1E                        l2937 1C4C                        l2929 1BFA  
                      l2963 1D2E                        l2955 1D04                        l2947 1C96  
                      l2939 1C50                        l2971 1D74                        l2891 1FD2  
                      l3499 1492                        l2965 1D4E                        l2957 1D06  
                      l2949 1CA4                        l2981 1DD4                        l2973 1D82  
                      l2893 1FDC                        l2959 1D18                        l2991 1E4A  
                      l2983 1DF2                        l2975 1DA2                        l2895 1FFA  
                      l2887 1FAE                        l2993 1E6A                        l2985 1DFA  
                      l2977 1DA6                        l2969 1D70                        l2897 2030  
                      l2889 1FC0                        l2995 1E7C                        l2987 1E0E  
                      l2979 1DB4                        l2989 1E1C                        l2997 1E82  
                      l2999 1E92                        STR_1 0E13                        STR_2 0E01  
                      u2100 229C                        u2101 2298                        u2110 22B2  
                      u2111 22AE                        u2120 22C8                        u2121 22C4  
                      u2300 20C8                        u2301 20C4                        u2310 20DE  
                      u3110 1FC0                        u2311 20DA                        u3111 1FBC  
                      u2320 20F4                        u3200 1C7A                        u3120 1FD2  
                      u4000 1220                        u2321 20F0                        u3201 1C76  
                      u3121 1FCE                        u4001 121C                        u2090 2286  
                      u2330 210A                        u3210 1CA4                        u3130 1FFA  
                      u4010 1254                        u2091 2282                        u2331 2106  
                      u3211 1CA0                        u3131 1FF6                        u4011 1250  
                      u2260 2594                        u2340 2120                        u3220 1CE4  
                      u3140 2030                        u3300 214E                        u4020 126A  
                      u2261 2590                        u2245 255E                        u2341 211C  
                      u3221 1CE0                        u3141 202C                        u3301 214A  
                      u4021 1266                        u2246 2560                        u2350 2136  
                      u2270 2086                        u3230 1D2E                        u3150 2470  
                      u3310 2170                        u4030 1280                        u2351 2132  
                      u2271 2082                        u3231 1D2A                        u3151 246C  
                      u3311 216C                        u4031 127C                        u2360 2552  
                      u2280 209C                        u3240 1D82                        u3160 2512  
                      u3320 21C6                        u3400 1796                        u4040 1296  
                      u2361 254E                        u2281 2098                        u3241 1D7E  
                      u3161 250E                        u3321 21C2                        u4041 1292  
                      u2290 20B2                        u2370 221C                        u3170 1BFA  
                      u3250 1DB4                        u3330 21D4                        u3410 17AC  
                      u4107 1F38                        u2291 20AE                        u2371 2218  
                      u3171 1BF6                        u3251 1DB0                        u3331 21D0  
                      u3411 17A8                        u2380 223A                        u3180 1C2C  
                      u3260 1DF2                        u3340 248C                        u3500 19BE  
                      u3420 17DC                        u4117 1F4A                        u2381 2236  
                      u3181 1C28                        u3261 1DEE                        u3341 2488  
                      u3501 19BA                        u3421 17D8                        u2390 2256  
                      u3350 24E2                        u3270 1E1C                        u3510 19D0  
                      u3430 17F8                        u4127 1F60                        u2391 2252  
                      u3351 24DC                        u3191 1C56                        u3271 1E18  
                      u3511 19CC                        u3431 17F4                        u3360 24E4  
                      u3600 1BC2                        u3280 1E4A                        u3520 19DE  
                      u3440 1826                        u4137 1F7C                        u3601 1BBE  
                      u3281 1E46                        u3521 19DA                        u3441 1822  
                      u4057 13A8                        u3370 23AE                        u3290 1E92  
                      u3530 19F6                        u3450 1834                        u3610 1400  
                      u4147 1F9E                        u3371 23AA                        u3291 1E8E  
                      u3531 19F2                        u3451 1830                        u3611 13FC  
                      u4067 13C6                        u3380 23DC                        u3540 1A80  
                      u3460 195E                        u3700 1638                        u3620 14D2  
                      u4157 257C                        u4077 1EF6                        u3381 23D8  
                      u3541 1A7C                        u3461 195A                        u3701 1634  
                      u3621 14CE                        u3550 1ABA                        u3470 197C  
                      u3390 1794                        u3710 16E0                        u3630 14E0  
                      u4167 22D6                        u4087 1F10                        u3551 1AB6  
                      u3471 1978                        u3391 178E                        u3711 16DC  
                      u3631 14DC                        u3560 1AD6                        u3480 1996  
                      u3640 150A                        u3720 233A                        u3800 0F68  
                      u4177 2656                        u4097 1F26                        u3561 1AD2  
                      u3481 1992                        u3641 1506                        u3721 2336  
                      u3801 0F64                        u3570 1B98                        u3490 19B0  
                      u3650 1550                        u3810 0F7E                        u4187 2660  
                      u3571 1B92                        u3491 19AC                        u3651 154C  
                      u3811 0F76                        u3731 0E5C                        u3580 1B9A  
                      u3660 15D0                        u3900 113C                        u3820 0F9E  
                      u3740 0ED8                        u3661 15CA                        u3901 1138  
                      u3821 0F9A                        u3741 0ED4                        u3590 1BB0  
                      u3670 15D2                        u3910 1150                        u3830 0FC6  
                      u3750 0EEE                        u3591 1BAC                        u3911 114C  
                      u3831 0FC2                        u3751 0EEA                        u3680 15E8  
                      u3920 1162                        u3840 0FE8                        u3760 0F04  
                      u3681 15E4                        u3921 115E                        u3841 0FE4  
                      u3761 0F00                        u3690 1610                        u3930 1182  
                      u3850 100E                        u3818 0F82                        u3770 0F26  
                      u3691 160C                        u3931 117E                        u3851 100A  
                      u3771 0F22                        u3940 1194                        u3860 102C  
                      u3780 0F4A                        u3941 1190                        u3861 1028  
                      u3781 0F44                        u3950 11A6                        u3870 1080  
                      u3790 0F4C                        u3951 11A2                        u3871 107C  
                      u3960 11CC                        u3880 10BA                        u3961 11C8  
                      u3881 10B6                        u3970 11DE                        u3890 10F0  
                      u3971 11DA                        u3891 10EC                        u3980 11F4  
                      u3981 11F0                        u3990 120A                        u3991 1206  
               main@curtime 00BF                 main@midtime 00B5          __size_of_LCD_E_TOG 0016  
                      abs@a 0014                 main@minutes 00D1                        _dbuf 0100  
                      _atoi 1A44                        _main 0E24                        _dtoa 1764  
                      _prec 00F7                        _nout 00F3                        pad@i 0019  
                      pad@p 0016                        fsr1h 000FE2                        fsr2h 000FDA  
                      indf2 000FDF                        fsr1l 000FE1                        pad@w 001B  
                      fsr2l 000FD9                        btemp 005B                        prodh 000FF4  
                      prodl 000FF3                        start 0082            __end_of_ADC_init 263A  
           __end_of_HighISR 0082                ___param_bank 000000                       ??_abs 0016  
                     ??_pad 0018            __end_of_LCD_Init 1FAE             __end_of___aodiv 1D70  
                     ?_atoi 0009                       ?_main 0001                       ?_dtoa 001D  
           __end_of___aomod 1ED4                       _ADPCH 000F5F             __end_of___lwdiv 2276  
                     i2l198 007E                vfpfcnvrt@fmt 0043                       _TMR0H 000FD4  
                     _TMR0L 000FD3                       _flags 0059                       _fputc 1FAE  
                     _fputs 242E             __end_of_isdigit 24EA                       atoi@n 0016  
                     pad@fp 0012                       atoi@s 0009                       _width 00F5  
                     _putch 2674                       dtoa@d 001F                       dtoa@i 003F  
                     dtoa@n 0037                       dtoa@p 0031                       dtoa@s 0035  
                     dtoa@w 0033             __end_of_isspace 23E8               ?_LCD_sendbyte 0003  
                     tablat 000FF5                       plusw1 000FE3                       plusw2 000FDB  
                     ttemp5 005C                       ttemp6 005F                       ttemp7 0063  
                     status 000FD8                       wtemp8 005C             __end_of_sprintf 2396  
   __size_of_LCD_sendnibble 0068     __size_of_LCD_sendstring 0034             __initialization 23E8  
              __end_of_atoi 1BE8                __end_of_main 13D8                __end_of_dtoa 1A44  
         __end_of_LCD_E_TOG 2668                      ??_atoi 000B                      ??_main 007C  
                    ??_dtoa 0027               main@dawn_dusk 00CB               __activetblptr 000003  
    __size_of_LEDarray_init 0026                      ?_fputc 0002                      ?_fputs 000B  
                    _ADRESH 000F64               main@leap_year 00BB              ??_LCD_sendbyte 0004  
                    ?_putch 0001                      i2l1931 000A                      i2l1941 0072  
                    i2l1933 001A                      i2l1943 0076                      i2l1935 003E  
                    i2l1945 007A                      i2l1937 0042                      i2l1939 0050  
             vfpfcnvrt@done 0053                   ??_HighISR 0001           _LEDarray_disp_bin 2078  
        ?_LEDarray_disp_bin 0002                ??_ADC_getval 0004               ??_Timer0_init 0002  
              vfprintf@cfmt 0057                   ??___aodiv 0012                   ??___aomod 0012  
                    ___wmul 25B4                   ??___lwdiv 0006         ??_LEDarray_disp_bin 0004  
                    clear_0 240E                      clear_1 241A               main@monthdays 009D  
                    isa$std 000001                      pad@buf 0014                      dtoa@fp 001D  
                    _strlen 24EA                      fputc@c 0002                      fputs@c 000F  
                    fputs@i 0010                      fputs@s 000B                   ??_isdigit 0004  
              __mediumconst 0000                   ??_isspace 0004                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8                   ?_ADC_init 0001  
                    putch@c 0001            __end_of_vfprintf 2344                   ??_sprintf 0059  
        __end_of_ADC_getval 25B4   __end_of_LEDarray_disp_bin 2140                  __accesstop 0060  
   __end_of__initialization 2424                   ?_LCD_Init 0001               ___rparam_used 000001  
             _LEDarray_init 25DA             _Interrupts_init 2668              __pcstackCOMRAM 0001  
              __pidataBANK0 263A               __end_of_fputc 2078               __end_of_fputs 2472  
             __end_of_putch 2676         __end_of_Timer0_init 2620                  ??_ADC_init 0002  
                   ??_fputc 0006                     ??_fputs 000F                     ??_putch 0002  
                __pbssBANK0 00EF                  __pbssBANK1 0100                  ??_LCD_Init 0007  
            _LCD_sendnibble 2276              ?_LEDarray_init 0001              _LCD_sendstring 2520  
                   ?___wmul 0002        __end_of_LCD_sendbyte 2584                     ?_strlen 0002  
           LCD_sendbyte@LSB 0005             LCD_sendbyte@MSB 0004          __size_of_vfpfcnvrt 038C  
    __end_of_LCD_sendnibble 22DE  __size_of_LEDarray_disp_bin 00C8     __end_of_Interrupts_init 2674  
                   _HighISR 0008      __end_of_LCD_sendstring 2554                   _ADREFbits 000F58  
                   __Hparam 0000                     __Lparam 0000                 _Timer0_init 2600  
                   ___aodiv 1BE8                     ___aomod 1D70             __size_of___wmul 0026  
                   ___lwdiv 2202                   ?_vfprintf 0060                __psmallconst 0E00  
                   __pcinit 23E8                     __ramtop 0E00                     __ptext0 0E24  
                   __ptext1 2344                     __ptext2 22DE                     __ptext3 13D8  
                   __ptext4 1764                     __ptext5 2140                     __ptext6 24EA  
                   __ptext7 242E                     __ptext8 1FAE                     __ptext9 2674  
           __size_of_strlen 0036                __size_of_abs 0040                __size_of_pad 00C2  
                   _isdigit 24B2                     _isspace 2396                   _LCD_E_TOG 2652  
                   atoi@neg 000F                     main@buf 0084                     _sprintf 2344  
      end_of_initialization 2424             ?_LCD_sendnibble 0001            ADC_getval@tmpval 0004  
                   fputc@fp 0004             ??_LEDarray_init 0002                     fputs@fp 000D  
           ?_LCD_sendstring 0007           __end_of_vfpfcnvrt 1764                     postdec1 000FE5  
                   postdec2 000FDD                     postinc0 000FEE                     postinc1 000FE6  
                   postinc2 000FDE                  main@F14546 00D7                  main@F14549 00EF  
                ??_vfprintf 0057                     strlen@a 0004                     strlen@s 0002  
                ?_LCD_E_TOG 0001                   _TRISAbits 000F81                   _TRISBbits 000F82  
                 _TRISCbits 000F83           main@daylight_flag 00C5                   _TRISDbits 000F84  
                 _TRISEbits 000F85                   _TRISFbits 000F86                   _TRISGbits 000F87  
                 _TRISHbits 000F88           __size_of_ADC_init 001A            ?_Interrupts_init 0001  
         __size_of_LCD_Init 00DA       __size_of_LCD_sendbyte 0030                 vfpfcnvrt@ap 0045  
               vfpfcnvrt@fp 0041                 vfpfcnvrt@ll 004B              __end_of___wmul 25DA  
      LCD_sendnibble@number 0002              __end_of_strlen 2520         start_initialization 23E8  
               __end_of_abs 24B2                 __end_of_pad 2202                _LCD_sendbyte 2554  
               vfprintf@fmt 0062             main@day_of_week 00C1        LCD_sendstring@string 0007  
                  ??___wmul 0006                 __pdataBANK0 00D7                    ??_strlen 0004  
               __pbssCOMRAM 0059                 ??_LCD_E_TOG 0002               __pcstackBANK0 0060  
          ___aodiv@dividend 0002                    ?_HighISR 0001                   _atoi$1782 0011  
                 _atoi$1783 0015                   _atoi$1784 0013            ___lwdiv@dividend 0002  
                 _dtoa$1747 002F                ?_Timer0_init 0001                   __pintcode 0008  
                  ?___aodiv 0002                    ?___aomod 0002            ___aodiv@quotient 0014  
                  ?___lwdiv 0002           __size_of_vfprintf 0066                 __smallconst 0E00  
                  ?_isdigit 0002                    ?_isspace 0002            ??_LCD_sendnibble 0002  
                  _ADC_init 2620            ___lwdiv@quotient 0006            ??_LCD_sendstring 0009  
                  ?_sprintf 0066              __size_of_fputc 00CA              __size_of_fputs 0044  
            __size_of_putch 0002            LCD_sendbyte@Byte 0006                    _LCD_Init 1ED4  
          LCD_sendbyte@type 0003              ___wmul@product 0006                    _LATAbits 000F79  
                  _LATBbits 000F7A                    _LATCbits 000F7B                    _LATDbits 000F7C  
                  _LATEbits 000F7D                    _LATFbits 000F7E                    _LATGbits 000F7F  
                  _LATHbits 000F80                    _PIE0bits 000E29                    _PIE2bits 000E2B  
                  i2u151_40 001A                    i2u151_41 0016                    i2u152_40 002C  
                  i2u152_41 0024                    i2u154_40 0050                    i2u153_48 002E  
                  i2u154_41 004C                    i2u155_40 0062                    i2u155_41 005A  
                  i2u156_48 0064                    _PIR0bits 000E33                    _PIR2bits 000E35  
                 _vfpfcnvrt 13D8                  _ADCON0bits 000F60           ___wmul@multiplier 0002  
                 main@month 00D3                _isspace$1800 0008                   copy_data0 23FC  
          __size_of_HighISR 007A       __end_of_LEDarray_init 2600                    __Hrparam 0000  
                _ADC_getval 2584                  vfprintf@ap 0064                    __Lrparam 0000  
                vfprintf@fp 0060            __size_of___aodiv 0188            __size_of___aomod 0164  
                ?_vfpfcnvrt 0041            __size_of___lwdiv 0074             ___aodiv@divisor 000A  
           ___aodiv@counter 0012                  _ANSELAbits 000E92                  _ANSELFbits 000EB4  
                sprintf@fmt 0068                  _T0CON0bits 000FD5                  _T0CON1bits 000FD6  
          __size_of_isdigit 0038             ___lwdiv@divisor 0004            __size_of_isspace 0052  
           ___lwdiv@counter 0008                    __ptext10 2472                    __ptext11 1D70  
                  __ptext20 2078                    __ptext12 1BE8                    __ptext21 2520  
                  __ptext13 1A44                    __ptext22 1ED4                    __ptext14 2396  
                  __ptext23 2554                    __ptext15 24B2                    __ptext24 2276  
                  __ptext16 25B4                    __ptext25 2652                    __ptext17 2202  
                  __ptext26 2668                    __ptext18 2600                    __ptext27 2620  
                  __ptext19 25DA                    __ptext28 2584     LEDarray_disp_bin@number 0002  
          __size_of_sprintf 0052               __size_of_atoi 01A4               __size_of_main 05B4  
             __size_of_dtoa 02E0                    isa$xinst 000000    __size_of_Interrupts_init 000C  
                  int$flags 005B        __size_of_Timer0_init 0020                    _vfprintf 22DE  
                  main@diff 00B7                    main@hour 00D5                    main@secs 00BD  
                  main@temp 00B9                    main@year 00C3            ___aomod@dividend 0002  
            _vfpfcnvrt$1762 0055                  _INTCONbits 000FF2          main@set_brightness 00C7  
                  isdigit@c 0002                    intlevel2 0000                   sprintf@ap 0074  
                  isspace@c 0002                 ?_ADC_getval 0002             ___aomod@divisor 000A  
               ??_vfpfcnvrt 0047             ___aomod@counter 0012                    sprintf@f 0076  
                  sprintf@s 0066                ___aodiv@sign 0013                ___aomod@sign 0013  
