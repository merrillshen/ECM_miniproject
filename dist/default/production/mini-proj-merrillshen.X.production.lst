

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Nov 02 10:40:52 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 05/05/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F67K40 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     
    58                           	psect	idataCOMRAM
    59  0004F8                     __pidataCOMRAM:
    60                           	callstack 0
    61                           
    62                           ;initializer for main@F14212
    63  0004F8  001F               	dw	31
    64  0004FA  001C               	dw	28
    65  0004FC  001F               	dw	31
    66  0004FE  001E               	dw	30
    67  000500  001F               	dw	31
    68  000502  001E               	dw	30
    69  000504  001F               	dw	31
    70  000506  001F               	dw	31
    71  000508  001E               	dw	30
    72  00050A  001F               	dw	31
    73  00050C  001E               	dw	30
    74  00050E  001F               	dw	31
    75  0000                     _PIR0bits	set	3635
    76  0000                     _PIR2bits	set	3637
    77  0000                     _PIE2bits	set	3627
    78  0000                     _PIE0bits	set	3625
    79  0000                     _ANSELFbits	set	3764
    80  0000                     _ANSELAbits	set	3730
    81  0000                     _ADPCH	set	3935
    82  0000                     _ADREFbits	set	3928
    83  0000                     _TMR0L	set	4051
    84  0000                     _TMR0H	set	4052
    85  0000                     _T0CON0bits	set	4053
    86  0000                     _T0CON1bits	set	4054
    87  0000                     _INTCONbits	set	4082
    88  0000                     _TRISBbits	set	3970
    89  0000                     _LATBbits	set	3962
    90  0000                     _TRISFbits	set	3974
    91  0000                     _LATFbits	set	3966
    92  0000                     _LATAbits	set	3961
    93  0000                     _TRISGbits	set	3975
    94  0000                     _LATGbits	set	3967
    95  0000                     _TRISDbits	set	3972
    96  0000                     _LATDbits	set	3964
    97  0000                     _TRISHbits	set	3976
    98  0000                     _LATHbits	set	3968
    99  0000                     _ADRESH	set	3940
   100  0000                     _ADCON0bits	set	3936
   101  0000                     _TRISAbits	set	3969
   102                           
   103                           ; #config settings
   104                           
   105                           	psect	cinit
   106  000470                     __pcinit:
   107                           	callstack 0
   108  000470                     start_initialization:
   109                           	callstack 0
   110  000470                     __initialization:
   111                           	callstack 0
   112                           
   113                           ; Initialize objects allocated to COMRAM (24 bytes)
   114                           ; load TBLPTR registers with __pidataCOMRAM
   115  000470  0EF8               	movlw	low __pidataCOMRAM
   116  000472  6EF6               	movwf	tblptrl,c
   117  000474  0E04               	movlw	high __pidataCOMRAM
   118  000476  6EF7               	movwf	tblptrh,c
   119  000478  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   120  00047A  6EF8               	movwf	tblptru,c
   121  00047C  EE00  F03E         	lfsr	0,__pdataCOMRAM
   122  000480  EE10 F018          	lfsr	1,24
   123  000484                     copy_data0:
   124  000484  0009               	tblrd		*+
   125  000486  CFF5 FFEE          	movff	tablat,postinc0
   126  00048A  50E5               	movf	postdec1,w,c
   127  00048C  50E1               	movf	fsr1l,w,c
   128  00048E  E1FA               	bnz	copy_data0
   129  000490                     end_of_initialization:
   130                           	callstack 0
   131  000490                     __end_of__initialization:
   132                           	callstack 0
   133  000490  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   134  000492  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   135  000494  0100               	movlb	0
   136  000496  EF3F  F000         	goto	_main	;jump to C main() function
   137                           
   138                           	psect	dataCOMRAM
   139  00003E                     __pdataCOMRAM:
   140                           	callstack 0
   141  00003E                     main@F14212:
   142                           	callstack 0
   143  00003E                     	ds	24
   144                           
   145                           	psect	cstackCOMRAM
   146  000001                     __pcstackCOMRAM:
   147                           	callstack 0
   148  000001                     ??_HighISR:
   149                           
   150                           ; 1 bytes @ 0x0
   151  000001                     	ds	1
   152  000002                     ?_ADC_getval:
   153                           	callstack 0
   154  000002                     LEDarray_disp_bin@number:
   155                           	callstack 0
   156                           
   157                           ; 2 bytes @ 0x1
   158  000002                     	ds	2
   159  000004                     ADC_getval@tmpval:
   160                           	callstack 0
   161                           
   162                           ; 2 bytes @ 0x3
   163  000004                     	ds	2
   164  000006                     ??_main:
   165                           
   166                           ; 1 bytes @ 0x5
   167  000006                     	ds	8
   168  00000E                     main@monthdays:
   169                           	callstack 0
   170                           
   171                           ; 24 bytes @ 0xD
   172  00000E                     	ds	24
   173  000026                     main@set_brightness:
   174                           	callstack 0
   175                           
   176                           ; 2 bytes @ 0x25
   177  000026                     	ds	2
   178  000028                     main@day_of_week:
   179                           	callstack 0
   180                           
   181                           ; 2 bytes @ 0x27
   182  000028                     	ds	2
   183  00002A                     main@light_strength:
   184                           	callstack 0
   185                           
   186                           ; 2 bytes @ 0x29
   187  00002A                     	ds	2
   188  00002C                     main@temp:
   189                           	callstack 0
   190                           
   191                           ; 2 bytes @ 0x2B
   192  00002C                     	ds	2
   193  00002E                     main@leap_year:
   194                           	callstack 0
   195                           
   196                           ; 2 bytes @ 0x2D
   197  00002E                     	ds	2
   198  000030                     main@year:
   199                           	callstack 0
   200                           
   201                           ; 2 bytes @ 0x2F
   202  000030                     	ds	2
   203  000032                     main@secs:
   204                           	callstack 0
   205                           
   206                           ; 2 bytes @ 0x31
   207  000032                     	ds	2
   208  000034                     main@minutes:
   209                           	callstack 0
   210                           
   211                           ; 2 bytes @ 0x33
   212  000034                     	ds	2
   213  000036                     main@daydate:
   214                           	callstack 0
   215                           
   216                           ; 2 bytes @ 0x35
   217  000036                     	ds	2
   218  000038                     main@daylight_flag:
   219                           	callstack 0
   220                           
   221                           ; 2 bytes @ 0x37
   222  000038                     	ds	2
   223  00003A                     main@hour:
   224                           	callstack 0
   225                           
   226                           ; 2 bytes @ 0x39
   227  00003A                     	ds	2
   228  00003C                     main@month:
   229                           	callstack 0
   230                           
   231                           ; 2 bytes @ 0x3B
   232  00003C                     	ds	2
   233                           
   234 ;;
   235 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   236 ;;
   237 ;; *************** function _main *****************
   238 ;; Defined at:
   239 ;;		line 13 in file "main.c"
   240 ;; Parameters:    Size  Location     Type
   241 ;;		None
   242 ;; Auto vars:     Size  Location     Type
   243 ;;  monthdays      24   13[COMRAM] unsigned int [12]
   244 ;;  month           2   59[COMRAM] unsigned int 
   245 ;;  hour            2   57[COMRAM] unsigned int 
   246 ;;  daylight_fla    2   55[COMRAM] unsigned int 
   247 ;;  daydate         2   53[COMRAM] unsigned int 
   248 ;;  minutes         2   51[COMRAM] unsigned int 
   249 ;;  secs            2   49[COMRAM] unsigned int 
   250 ;;  year            2   47[COMRAM] unsigned int 
   251 ;;  leap_year       2   45[COMRAM] unsigned int 
   252 ;;  temp            2   43[COMRAM] unsigned int 
   253 ;;  light_streng    2   41[COMRAM] unsigned int 
   254 ;;  day_of_week     2   39[COMRAM] unsigned int 
   255 ;;  set_brightne    2   37[COMRAM] unsigned int 
   256 ;; Return value:  Size  Location     Type
   257 ;;                  1    wreg      void 
   258 ;; Registers used:
   259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   260 ;; Tracked objects:
   261 ;;		On entry : 0/0
   262 ;;		On exit  : 0/0
   263 ;;		Unchanged: 0/0
   264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   266 ;;      Locals:        48       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   267 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   268 ;;      Totals:        56       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   269 ;;Total ram usage:       56 bytes
   270 ;; Hardware stack levels required when called: 2
   271 ;; This function calls:
   272 ;;		_ADC_getval
   273 ;;		_ADC_init
   274 ;;		_Interrupts_init
   275 ;;		_LEDarray_disp_bin
   276 ;;		_LEDarray_init
   277 ;;		_Timer0_init
   278 ;; This function is called by:
   279 ;;		Startup code after reset
   280 ;; This function uses a non-reentrant model
   281 ;;
   282                           
   283                           	psect	text0
   284  00007E                     __ptext0:
   285                           	callstack 0
   286  00007E                     _main:
   287                           	callstack 29
   288  00007E                     
   289                           ;main.c: 16:     LATHbits.LATH3=0;
   290  00007E  9680               	bcf	128,3,c	;volatile
   291                           
   292                           ;main.c: 17:     TRISHbits.TRISH3=0;
   293  000080  9688               	bcf	136,3,c	;volatile
   294                           
   295                           ;main.c: 20:     LATDbits.LATD7=0;
   296  000082  9E7C               	bcf	124,7,c	;volatile
   297                           
   298                           ;main.c: 21:     TRISDbits.TRISD7=0;
   299  000084  9E84               	bcf	132,7,c	;volatile
   300  000086                     
   301                           ;main.c: 24:     LEDarray_init();
   302  000086  EC4D  F002         	call	_LEDarray_init	;wreg free
   303  00008A                     
   304                           ;main.c: 25:     ADC_init();
   305  00008A  EC6F  F002         	call	_ADC_init	;wreg free
   306  00008E                     
   307                           ;main.c: 26:     Timer0_init();
   308  00008E  EC60  F002         	call	_Timer0_init	;wreg free
   309                           
   310                           ;main.c: 27:     Interrupts_init();
   311  000092  EC88  F002         	call	_Interrupts_init	;wreg free
   312  000096                     
   313                           ;main.c: 31:     unsigned int temp=0;
   314  000096  0E00               	movlw	0
   315  000098  6E2D               	movwf	(main@temp+1)^0,c
   316  00009A  0E00               	movlw	0
   317  00009C  6E2C               	movwf	main@temp^0,c
   318  00009E                     
   319                           ;main.c: 32:     unsigned int secs=0;
   320  00009E  0E00               	movlw	0
   321  0000A0  6E33               	movwf	(main@secs+1)^0,c
   322  0000A2  0E00               	movlw	0
   323  0000A4  6E32               	movwf	main@secs^0,c
   324  0000A6                     
   325                           ;main.c: 34:     unsigned int monthdays[12] = {31,28,31,30,31,30,31,31,30,31,30,31};
   326  0000A6  EE20  F03E         	lfsr	2,main@F14212
   327  0000AA  EE10  F00E         	lfsr	1,main@monthdays
   328  0000AE  0E17               	movlw	23
   329  0000B0                     u841:
   330  0000B0  CFDB FFE3          	movff	plusw2,plusw1
   331  0000B4  06E8               	decf	wreg,f,c
   332  0000B6  E2FC               	bc	u841
   333  0000B8                     
   334                           ;main.c: 35:     unsigned int daylight_flag = 0;
   335  0000B8  0E00               	movlw	0
   336  0000BA  6E39               	movwf	(main@daylight_flag+1)^0,c
   337  0000BC  0E00               	movlw	0
   338  0000BE  6E38               	movwf	main@daylight_flag^0,c
   339  0000C0                     
   340                           ;main.c: 38:     unsigned int set_brightness=50;
   341  0000C0  0E00               	movlw	0
   342  0000C2  6E27               	movwf	(main@set_brightness+1)^0,c
   343  0000C4  0E32               	movlw	50
   344  0000C6  6E26               	movwf	main@set_brightness^0,c
   345  0000C8                     
   346                           ;main.c: 39:     unsigned int minutes=0;
   347  0000C8  0E00               	movlw	0
   348  0000CA  6E35               	movwf	(main@minutes+1)^0,c
   349  0000CC  0E00               	movlw	0
   350  0000CE  6E34               	movwf	main@minutes^0,c
   351  0000D0                     
   352                           ;main.c: 40:     unsigned int hour=0;
   353  0000D0  0E00               	movlw	0
   354  0000D2  6E3B               	movwf	(main@hour+1)^0,c
   355  0000D4  0E00               	movlw	0
   356  0000D6  6E3A               	movwf	main@hour^0,c
   357  0000D8                     
   358                           ;main.c: 41:     unsigned int day_of_week = 0;
   359  0000D8  0E00               	movlw	0
   360  0000DA  6E29               	movwf	(main@day_of_week+1)^0,c
   361  0000DC  0E00               	movlw	0
   362  0000DE  6E28               	movwf	main@day_of_week^0,c
   363  0000E0                     
   364                           ;main.c: 42:     unsigned int daydate = 0;
   365  0000E0  0E00               	movlw	0
   366  0000E2  6E37               	movwf	(main@daydate+1)^0,c
   367  0000E4  0E00               	movlw	0
   368  0000E6  6E36               	movwf	main@daydate^0,c
   369  0000E8                     
   370                           ;main.c: 43:     unsigned int month = 0;
   371  0000E8  0E00               	movlw	0
   372  0000EA  6E3D               	movwf	(main@month+1)^0,c
   373  0000EC  0E00               	movlw	0
   374  0000EE  6E3C               	movwf	main@month^0,c
   375  0000F0                     
   376                           ;main.c: 44:     unsigned int year = 0;
   377  0000F0  0E00               	movlw	0
   378  0000F2  6E31               	movwf	(main@year+1)^0,c
   379  0000F4  0E00               	movlw	0
   380  0000F6  6E30               	movwf	main@year^0,c
   381  0000F8                     l1199:
   382                           
   383                           ;main.c: 47:         light_strength = ADC_getval();
   384  0000F8  EC20  F002         	call	_ADC_getval	;wreg free
   385  0000FC  C002  F02A         	movff	?_ADC_getval,main@light_strength
   386  000100  C003  F02B         	movff	?_ADC_getval+1,main@light_strength+1
   387  000104                     
   388                           ;main.c: 48:         if (light_strength >= set_brightness || (1<hour && hour<5 ) ) {
   389  000104  5026               	movf	main@set_brightness^0,w,c
   390  000106  5C2A               	subwf	main@light_strength^0,w,c
   391  000108  5027               	movf	(main@set_brightness+1)^0,w,c
   392  00010A  582B               	subwfb	(main@light_strength+1)^0,w,c
   393  00010C  B0D8               	btfsc	status,0,c
   394  00010E  EF8B  F000         	goto	u851
   395  000112  EF8D  F000         	goto	u850
   396  000116                     u851:
   397  000116  EFA3  F000         	goto	l51
   398  00011A                     u850:
   399  00011A  503B               	movf	(main@hour+1)^0,w,c
   400  00011C  E109               	bnz	u860
   401  00011E  0E02               	movlw	2
   402  000120  5C3A               	subwf	main@hour^0,w,c
   403  000122  A0D8               	btfss	status,0,c
   404  000124  EF96  F000         	goto	u861
   405  000128  EF98  F000         	goto	u860
   406  00012C                     u861:
   407  00012C  EFA6  F000         	goto	l49
   408  000130                     u860:
   409  000130  503B               	movf	(main@hour+1)^0,w,c
   410  000132  E107               	bnz	u871
   411  000134  0E05               	movlw	5
   412  000136  5C3A               	subwf	main@hour^0,w,c
   413  000138  B0D8               	btfsc	status,0,c
   414  00013A  EFA1  F000         	goto	u871
   415  00013E  EFA3  F000         	goto	u870
   416  000142                     u871:
   417  000142  EFA6  F000         	goto	l49
   418  000146                     u870:
   419  000146                     l51:
   420                           
   421                           ;main.c: 49:             LATHbits.LATH3 = 0;
   422  000146  9680               	bcf	128,3,c	;volatile
   423                           
   424                           ;main.c: 50:         }
   425  000148  EFA7  F000         	goto	l1207
   426  00014C                     l49:
   427                           
   428                           ;main.c: 52:             LATHbits.LATH3 = 1;
   429  00014C  8680               	bsf	128,3,c	;volatile
   430  00014E                     l1207:
   431                           
   432                           ;main.c: 57:         if (LATDbits.LATD7 != temp) { secs += 1; temp = LATDbits.LATD7;}
   433  00014E  BE7C               	btfsc	124,7,c	;volatile
   434  000150  EFAC  F000         	goto	u881
   435  000154  EFAF  F000         	goto	u880
   436  000158                     u881:
   437  000158  0E01               	movlw	1
   438  00015A  EFB0  F000         	goto	u890
   439  00015E                     u880:
   440  00015E  0E00               	movlw	0
   441  000160                     u890:
   442  000160  6E06               	movwf	??_main^0,c
   443  000162  6A07               	clrf	(??_main+1)^0,c
   444  000164  502C               	movf	main@temp^0,w,c
   445  000166  1806               	xorwf	??_main^0,w,c
   446  000168  E109               	bnz	u900
   447  00016A  502D               	movf	(main@temp+1)^0,w,c
   448  00016C  1807               	xorwf	(??_main+1)^0,w,c
   449  00016E  B4D8               	btfsc	status,2,c
   450  000170  EFBC  F000         	goto	u901
   451  000174  EFBE  F000         	goto	u900
   452  000178                     u901:
   453  000178  EFCD  F000         	goto	l1213
   454  00017C                     u900:
   455  00017C  4A32               	infsnz	main@secs^0,f,c
   456  00017E  2A33               	incf	(main@secs+1)^0,f,c
   457  000180  BE7C               	btfsc	124,7,c	;volatile
   458  000182  EFC5  F000         	goto	u911
   459  000186  EFC9  F000         	goto	u910
   460  00018A                     u911:
   461  00018A  6A06               	clrf	??_main^0,c
   462  00018C  2A06               	incf	??_main^0,f,c
   463  00018E  EFCA  F000         	goto	u918
   464  000192                     u910:
   465  000192  6A06               	clrf	??_main^0,c
   466  000194                     u918:
   467  000194  5006               	movf	??_main^0,w,c
   468  000196  6E2C               	movwf	main@temp^0,c
   469  000198  6A2D               	clrf	(main@temp+1)^0,c
   470  00019A                     l1213:
   471                           
   472                           ;main.c: 58:         if (secs == 60) { minutes += 1; secs = 0;}
   473  00019A  0E3C               	movlw	60
   474  00019C  1832               	xorwf	main@secs^0,w,c
   475  00019E  1033               	iorwf	(main@secs+1)^0,w,c
   476  0001A0  A4D8               	btfss	status,2,c
   477  0001A2  EFD5  F000         	goto	u921
   478  0001A6  EFD7  F000         	goto	u920
   479  0001AA                     u921:
   480  0001AA  EFDD  F000         	goto	l1219
   481  0001AE                     u920:
   482  0001AE  4A34               	infsnz	main@minutes^0,f,c
   483  0001B0  2A35               	incf	(main@minutes+1)^0,f,c
   484  0001B2  0E00               	movlw	0
   485  0001B4  6E33               	movwf	(main@secs+1)^0,c
   486  0001B6  0E00               	movlw	0
   487  0001B8  6E32               	movwf	main@secs^0,c
   488  0001BA                     l1219:
   489                           
   490                           ;main.c: 59:         if (minutes == 60) { hour += 1; minutes = 0;}
   491  0001BA  0E3C               	movlw	60
   492  0001BC  1834               	xorwf	main@minutes^0,w,c
   493  0001BE  1035               	iorwf	(main@minutes+1)^0,w,c
   494  0001C0  A4D8               	btfss	status,2,c
   495  0001C2  EFE5  F000         	goto	u931
   496  0001C6  EFE7  F000         	goto	u930
   497  0001CA                     u931:
   498  0001CA  EFED  F000         	goto	l1225
   499  0001CE                     u930:
   500  0001CE  4A3A               	infsnz	main@hour^0,f,c
   501  0001D0  2A3B               	incf	(main@hour+1)^0,f,c
   502  0001D2  0E00               	movlw	0
   503  0001D4  6E35               	movwf	(main@minutes+1)^0,c
   504  0001D6  0E00               	movlw	0
   505  0001D8  6E34               	movwf	main@minutes^0,c
   506  0001DA                     l1225:
   507                           
   508                           ;main.c: 60:         if (hour == 24) {hour = 0;}
   509  0001DA  0E18               	movlw	24
   510  0001DC  183A               	xorwf	main@hour^0,w,c
   511  0001DE  103B               	iorwf	(main@hour+1)^0,w,c
   512  0001E0  A4D8               	btfss	status,2,c
   513  0001E2  EFF5  F000         	goto	u941
   514  0001E6  EFF7  F000         	goto	u940
   515  0001EA                     u941:
   516  0001EA  EFFB  F000         	goto	l1229
   517  0001EE                     u940:
   518  0001EE  0E00               	movlw	0
   519  0001F0  6E3B               	movwf	(main@hour+1)^0,c
   520  0001F2  0E00               	movlw	0
   521  0001F4  6E3A               	movwf	main@hour^0,c
   522  0001F6                     l1229:
   523                           
   524                           ;main.c: 61:         LEDarray_disp_bin(hour);
   525  0001F6  C03A  F002         	movff	main@hour,LEDarray_disp_bin@number
   526  0001FA  C03B  F003         	movff	main@hour+1,LEDarray_disp_bin@number+1
   527  0001FE  ECBC  F001         	call	_LEDarray_disp_bin	;wreg free
   528  000202                     
   529                           ;main.c: 64:         leap_year = year % 4;
   530  000202  0E03               	movlw	3
   531  000204  1430               	andwf	main@year^0,w,c
   532  000206  6E2E               	movwf	main@leap_year^0,c
   533  000208  6A2F               	clrf	(main@leap_year+1)^0,c
   534  00020A                     
   535                           ;main.c: 65:         if (leap_year == 0) { monthdays[1] = 29;}
   536  00020A  502E               	movf	main@leap_year^0,w,c
   537  00020C  102F               	iorwf	(main@leap_year+1)^0,w,c
   538  00020E  A4D8               	btfss	status,2,c
   539  000210  EF0C  F001         	goto	u951
   540  000214  EF0E  F001         	goto	u950
   541  000218                     u951:
   542  000218  EF14  F001         	goto	l1237
   543  00021C                     u950:
   544  00021C  0E00               	movlw	0
   545  00021E  6E11               	movwf	(main@monthdays+3)^0,c
   546  000220  0E1D               	movlw	29
   547  000222  6E10               	movwf	(main@monthdays+2)^0,c
   548  000224  EF18  F001         	goto	l1239
   549  000228                     l1237:
   550  000228  0E00               	movlw	0
   551  00022A  6E11               	movwf	(main@monthdays+3)^0,c
   552  00022C  0E1C               	movlw	28
   553  00022E  6E10               	movwf	(main@monthdays+2)^0,c
   554  000230                     l1239:
   555                           
   556                           ;main.c: 68:         if (daydate > monthdays[month-1]) { month += 1; daydate = 1; daylig
      +                          ht_flag=0;}
   557  000230  0EFE               	movlw	254
   558  000232  6E06               	movwf	??_main^0,c
   559  000234  0EFF               	movlw	255
   560  000236  6E07               	movwf	(??_main+1)^0,c
   561  000238  C03C  F008         	movff	main@month,??_main+2
   562  00023C  C03D  F009         	movff	main@month+1,??_main+3
   563  000240  90D8               	bcf	status,0,c
   564  000242  3608               	rlcf	(??_main+2)^0,f,c
   565  000244  3609               	rlcf	(??_main+3)^0,f,c
   566  000246  5006               	movf	??_main^0,w,c
   567  000248  2608               	addwf	(??_main+2)^0,f,c
   568  00024A  5007               	movf	(??_main+1)^0,w,c
   569  00024C  2209               	addwfc	(??_main+3)^0,f,c
   570  00024E  0E0E               	movlw	low main@monthdays
   571  000250  2408               	addwf	(??_main+2)^0,w,c
   572  000252  6ED9               	movwf	fsr2l,c
   573  000254  0E00               	movlw	high main@monthdays
   574  000256  2009               	addwfc	(??_main+3)^0,w,c
   575  000258  6EDA               	movwf	fsr2h,c
   576  00025A  5036               	movf	main@daydate^0,w,c
   577  00025C  5CDE               	subwf	postinc2,w,c
   578  00025E  5037               	movf	(main@daydate+1)^0,w,c
   579  000260  58DE               	subwfb	postinc2,w,c
   580  000262  B0D8               	btfsc	status,0,c
   581  000264  EF36  F001         	goto	u961
   582  000268  EF38  F001         	goto	u960
   583  00026C                     u961:
   584  00026C  EF42  F001         	goto	l1247
   585  000270                     u960:
   586  000270  4A3C               	infsnz	main@month^0,f,c
   587  000272  2A3D               	incf	(main@month+1)^0,f,c
   588  000274  0E00               	movlw	0
   589  000276  6E37               	movwf	(main@daydate+1)^0,c
   590  000278  0E01               	movlw	1
   591  00027A  6E36               	movwf	main@daydate^0,c
   592  00027C  0E00               	movlw	0
   593  00027E  6E39               	movwf	(main@daylight_flag+1)^0,c
   594  000280  0E00               	movlw	0
   595  000282  6E38               	movwf	main@daylight_flag^0,c
   596  000284                     l1247:
   597                           
   598                           ;main.c: 69:         if (month > 12) { year += 1; month = 1;}
   599  000284  503D               	movf	(main@month+1)^0,w,c
   600  000286  E109               	bnz	u970
   601  000288  0E0D               	movlw	13
   602  00028A  5C3C               	subwf	main@month^0,w,c
   603  00028C  A0D8               	btfss	status,0,c
   604  00028E  EF4B  F001         	goto	u971
   605  000292  EF4D  F001         	goto	u970
   606  000296                     u971:
   607  000296  EF53  F001         	goto	l1253
   608  00029A                     u970:
   609  00029A  4A30               	infsnz	main@year^0,f,c
   610  00029C  2A31               	incf	(main@year+1)^0,f,c
   611  00029E  0E00               	movlw	0
   612  0002A0  6E3D               	movwf	(main@month+1)^0,c
   613  0002A2  0E01               	movlw	1
   614  0002A4  6E3C               	movwf	main@month^0,c
   615  0002A6                     l1253:
   616                           
   617                           ;main.c: 73:         if (day_of_week == 7) {
   618  0002A6  0E07               	movlw	7
   619  0002A8  1828               	xorwf	main@day_of_week^0,w,c
   620  0002AA  1029               	iorwf	(main@day_of_week+1)^0,w,c
   621  0002AC  A4D8               	btfss	status,2,c
   622  0002AE  EF5B  F001         	goto	u981
   623  0002B2  EF5D  F001         	goto	u980
   624  0002B6                     u981:
   625  0002B6  EF7C  F000         	goto	l1199
   626  0002BA                     u980:
   627  0002BA                     
   628                           ;main.c: 74:             if ((daydate+7) > monthdays[month-1]) {
   629  0002BA  0E07               	movlw	7
   630  0002BC  2436               	addwf	main@daydate^0,w,c
   631  0002BE  6E06               	movwf	??_main^0,c
   632  0002C0  0E00               	movlw	0
   633  0002C2  2037               	addwfc	(main@daydate+1)^0,w,c
   634  0002C4  6E07               	movwf	(??_main+1)^0,c
   635  0002C6  0EFE               	movlw	254
   636  0002C8  6E08               	movwf	(??_main+2)^0,c
   637  0002CA  0EFF               	movlw	255
   638  0002CC  6E09               	movwf	(??_main+3)^0,c
   639  0002CE  C03C  F00A         	movff	main@month,??_main+4
   640  0002D2  C03D  F00B         	movff	main@month+1,??_main+5
   641  0002D6  90D8               	bcf	status,0,c
   642  0002D8  360A               	rlcf	(??_main+4)^0,f,c
   643  0002DA  360B               	rlcf	(??_main+5)^0,f,c
   644  0002DC  5008               	movf	(??_main+2)^0,w,c
   645  0002DE  260A               	addwf	(??_main+4)^0,f,c
   646  0002E0  5009               	movf	(??_main+3)^0,w,c
   647  0002E2  220B               	addwfc	(??_main+5)^0,f,c
   648  0002E4  0E0E               	movlw	low main@monthdays
   649  0002E6  240A               	addwf	(??_main+4)^0,w,c
   650  0002E8  6ED9               	movwf	fsr2l,c
   651  0002EA  0E00               	movlw	high main@monthdays
   652  0002EC  200B               	addwfc	(??_main+5)^0,w,c
   653  0002EE  6EDA               	movwf	fsr2h,c
   654  0002F0  5006               	movf	??_main^0,w,c
   655  0002F2  5CDE               	subwf	postinc2,w,c
   656  0002F4  5007               	movf	(??_main+1)^0,w,c
   657  0002F6  58DE               	subwfb	postinc2,w,c
   658  0002F8  B0D8               	btfsc	status,0,c
   659  0002FA  EF81  F001         	goto	u991
   660  0002FE  EF83  F001         	goto	u990
   661  000302                     u991:
   662  000302  EF7C  F000         	goto	l1199
   663  000306                     u990:
   664  000306                     
   665                           ;main.c: 75:                 if (month == 3){
   666  000306  0E03               	movlw	3
   667  000308  183C               	xorwf	main@month^0,w,c
   668  00030A  103D               	iorwf	(main@month+1)^0,w,c
   669  00030C  A4D8               	btfss	status,2,c
   670  00030E  EF8B  F001         	goto	u1001
   671  000312  EF8D  F001         	goto	u1000
   672  000316                     u1001:
   673  000316  EF9C  F001         	goto	l1265
   674  00031A                     u1000:
   675  00031A                     
   676                           ;main.c: 76:                     if (daylight_flag ==0){
   677  00031A  5038               	movf	main@daylight_flag^0,w,c
   678  00031C  1039               	iorwf	(main@daylight_flag+1)^0,w,c
   679  00031E  A4D8               	btfss	status,2,c
   680  000320  EF94  F001         	goto	u1011
   681  000324  EF96  F001         	goto	u1010
   682  000328                     u1011:
   683  000328  EF9C  F001         	goto	l1265
   684  00032C                     u1010:
   685  00032C                     
   686                           ;main.c: 77:                         hour+=1;
   687  00032C  4A3A               	infsnz	main@hour^0,f,c
   688  00032E  2A3B               	incf	(main@hour+1)^0,f,c
   689  000330                     
   690                           ;main.c: 78:                         daylight_flag=1;
   691  000330  0E00               	movlw	0
   692  000332  6E39               	movwf	(main@daylight_flag+1)^0,c
   693  000334  0E01               	movlw	1
   694  000336  6E38               	movwf	main@daylight_flag^0,c
   695  000338                     l1265:
   696                           
   697                           ;main.c: 81:                 if (month ==10) {
   698  000338  0E0A               	movlw	10
   699  00033A  183C               	xorwf	main@month^0,w,c
   700  00033C  103D               	iorwf	(main@month+1)^0,w,c
   701  00033E  A4D8               	btfss	status,2,c
   702  000340  EFA4  F001         	goto	u1021
   703  000344  EFA6  F001         	goto	u1020
   704  000348                     u1021:
   705  000348  EF7C  F000         	goto	l1199
   706  00034C                     u1020:
   707  00034C                     
   708                           ;main.c: 82:                     if (daylight_flag ==0){
   709  00034C  5038               	movf	main@daylight_flag^0,w,c
   710  00034E  1039               	iorwf	(main@daylight_flag+1)^0,w,c
   711  000350  A4D8               	btfss	status,2,c
   712  000352  EFAD  F001         	goto	u1031
   713  000356  EFAF  F001         	goto	u1030
   714  00035A                     u1031:
   715  00035A  EFB8  F001         	goto	l61
   716  00035E                     u1030:
   717  00035E                     
   718                           ;main.c: 83:                         hour-=1;
   719  00035E  063A               	decf	main@hour^0,f,c
   720  000360  A0D8               	btfss	status,0,c
   721  000362  063B               	decf	(main@hour+1)^0,f,c
   722  000364                     
   723                           ;main.c: 84:                         daylight_flag=1;}
   724  000364  0E00               	movlw	0
   725  000366  6E39               	movwf	(main@daylight_flag+1)^0,c
   726  000368  0E01               	movlw	1
   727  00036A  6E38               	movwf	main@daylight_flag^0,c
   728  00036C  EF7C  F000         	goto	l1199
   729  000370                     l61:
   730  000370  EF7C  F000         	goto	l1199
   731  000374  EF3D  F000         	goto	start
   732  000378                     __end_of_main:
   733                           	callstack 0
   734                           
   735 ;; *************** function _Timer0_init *****************
   736 ;; Defined at:
   737 ;;		line 7 in file "timers.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;		None
   740 ;; Auto vars:     Size  Location     Type
   741 ;;		None
   742 ;; Return value:  Size  Location     Type
   743 ;;                  1    wreg      void 
   744 ;; Registers used:
   745 ;;		wreg, status,2
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   755 ;;Total ram usage:        0 bytes
   756 ;; Hardware stack levels used: 1
   757 ;; Hardware stack levels required when called: 1
   758 ;; This function calls:
   759 ;;		Nothing
   760 ;; This function is called by:
   761 ;;		_main
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           	psect	text1
   766  0004C0                     __ptext1:
   767                           	callstack 0
   768  0004C0                     _Timer0_init:
   769                           	callstack 29
   770  0004C0                     
   771                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
   772  0004C0  50D6               	movf	214,w,c	;volatile
   773  0004C2  0B1F               	andlw	-225
   774  0004C4  0940               	iorlw	64
   775  0004C6  6ED6               	movwf	214,c	;volatile
   776  0004C8                     
   777                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
   778  0004C8  88D6               	bsf	214,4,c	;volatile
   779                           
   780                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
   781  0004CA  50D6               	movf	214,w,c	;volatile
   782  0004CC  0BF0               	andlw	-16
   783  0004CE  0908               	iorlw	8
   784  0004D0  6ED6               	movwf	214,c	;volatile
   785  0004D2                     
   786                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
   787  0004D2  88D5               	bsf	213,4,c	;volatile
   788  0004D4                     
   789                           ;timers.c: 15:     TMR0H=65535;
   790  0004D4  68D4               	setf	212,c	;volatile
   791                           
   792                           ;timers.c: 16:     TMR0L=3035;
   793  0004D6  0EDB               	movlw	219
   794  0004D8  6ED3               	movwf	211,c	;volatile
   795  0004DA                     
   796                           ;timers.c: 17:     T0CON0bits.T0EN=1;
   797  0004DA  8ED5               	bsf	213,7,c	;volatile
   798  0004DC  0012               	return		;funcret
   799  0004DE                     __end_of_Timer0_init:
   800                           	callstack 0
   801                           
   802 ;; *************** function _LEDarray_init *****************
   803 ;; Defined at:
   804 ;;		line 8 in file "LEDarray.c"
   805 ;; Parameters:    Size  Location     Type
   806 ;;		None
   807 ;; Auto vars:     Size  Location     Type
   808 ;;		None
   809 ;; Return value:  Size  Location     Type
   810 ;;                  1    wreg      void 
   811 ;; Registers used:
   812 ;;		None
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   822 ;;Total ram usage:        0 bytes
   823 ;; Hardware stack levels used: 1
   824 ;; Hardware stack levels required when called: 1
   825 ;; This function calls:
   826 ;;		Nothing
   827 ;; This function is called by:
   828 ;;		_main
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832                           	psect	text2
   833  00049A                     __ptext2:
   834                           	callstack 0
   835  00049A                     _LEDarray_init:
   836                           	callstack 29
   837  00049A                     
   838                           ;LEDarray.c: 13:     LATGbits.LATG0=0;
   839  00049A  907F               	bcf	127,0,c	;volatile
   840                           
   841                           ;LEDarray.c: 14:     TRISGbits.TRISG0=0;
   842  00049C  9087               	bcf	135,0,c	;volatile
   843                           
   844                           ;LEDarray.c: 16:     LATGbits.LATG1=0;
   845  00049E  927F               	bcf	127,1,c	;volatile
   846                           
   847                           ;LEDarray.c: 17:     TRISGbits.TRISG1=0;
   848  0004A0  9287               	bcf	135,1,c	;volatile
   849                           
   850                           ;LEDarray.c: 19:     LATAbits.LATA2=0;
   851  0004A2  9479               	bcf	121,2,c	;volatile
   852                           
   853                           ;LEDarray.c: 20:     TRISAbits.TRISA2=0;
   854  0004A4  9481               	bcf	129,2,c	;volatile
   855                           
   856                           ;LEDarray.c: 22:     LATFbits.LATF6=0;
   857  0004A6  9C7E               	bcf	126,6,c	;volatile
   858                           
   859                           ;LEDarray.c: 23:     TRISFbits.TRISF6=0;
   860  0004A8  9C86               	bcf	134,6,c	;volatile
   861                           
   862                           ;LEDarray.c: 25:     LATAbits.LATA4=0;
   863  0004AA  9879               	bcf	121,4,c	;volatile
   864                           
   865                           ;LEDarray.c: 26:     TRISAbits.TRISA4=0;
   866  0004AC  9881               	bcf	129,4,c	;volatile
   867                           
   868                           ;LEDarray.c: 28:     LATAbits.LATA5=0;
   869  0004AE  9A79               	bcf	121,5,c	;volatile
   870                           
   871                           ;LEDarray.c: 29:     TRISAbits.TRISA5=0;
   872  0004B0  9A81               	bcf	129,5,c	;volatile
   873                           
   874                           ;LEDarray.c: 31:     LATFbits.LATF0=0;
   875  0004B2  907E               	bcf	126,0,c	;volatile
   876                           
   877                           ;LEDarray.c: 32:     TRISFbits.TRISF0=0;
   878  0004B4  9086               	bcf	134,0,c	;volatile
   879                           
   880                           ;LEDarray.c: 34:     LATBbits.LATB0=0;
   881  0004B6  907A               	bcf	122,0,c	;volatile
   882                           
   883                           ;LEDarray.c: 35:     TRISBbits.TRISB0=0;
   884  0004B8  9082               	bcf	130,0,c	;volatile
   885                           
   886                           ;LEDarray.c: 37:     LATBbits.LATB1=0;
   887  0004BA  927A               	bcf	122,1,c	;volatile
   888                           
   889                           ;LEDarray.c: 38:     TRISBbits.TRISB1=0;
   890  0004BC  9282               	bcf	130,1,c	;volatile
   891  0004BE  0012               	return		;funcret
   892  0004C0                     __end_of_LEDarray_init:
   893                           	callstack 0
   894                           
   895 ;; *************** function _LEDarray_disp_bin *****************
   896 ;; Defined at:
   897 ;;		line 45 in file "LEDarray.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;  number          2    1[COMRAM] unsigned int 
   900 ;; Auto vars:     Size  Location     Type
   901 ;;		None
   902 ;; Return value:  Size  Location     Type
   903 ;;                  1    wreg      void 
   904 ;; Registers used:
   905 ;;		None
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   911 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   914 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   915 ;;Total ram usage:        2 bytes
   916 ;; Hardware stack levels used: 1
   917 ;; Hardware stack levels required when called: 1
   918 ;; This function calls:
   919 ;;		Nothing
   920 ;; This function is called by:
   921 ;;		_main
   922 ;;		_LEDarray_disp_dec
   923 ;;		_LEDarray_disp_PPM
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927                           	psect	text3
   928  000378                     __ptext3:
   929                           	callstack 0
   930  000378                     _LEDarray_disp_bin:
   931                           	callstack 29
   932  000378                     
   933                           ;LEDarray.c: 45: void LEDarray_disp_bin(unsigned int number);LEDarray.c: 46: {;LEDarray.
      +                          c: 50:     if (number & 0b000000001) { LATGbits.LATG0=1;} else { LATGbits.LATG0=0;}
   934  000378  A002               	btfss	LEDarray_disp_bin@number^0,0,c
   935  00037A  EFC1  F001         	goto	u751
   936  00037E  EFC3  F001         	goto	u750
   937  000382                     u751:
   938  000382  EFC6  F001         	goto	l93
   939  000386                     u750:
   940  000386  807F               	bsf	127,0,c	;volatile
   941  000388  EFC7  F001         	goto	l94
   942  00038C                     l93:
   943  00038C  907F               	bcf	127,0,c	;volatile
   944  00038E                     l94:
   945                           
   946                           ;LEDarray.c: 51:     if (number & 0b000000010) { LATGbits.LATG1=1;} else { LATGbits.LATG
      +                          1=0;}
   947  00038E  A202               	btfss	LEDarray_disp_bin@number^0,1,c
   948  000390  EFCC  F001         	goto	u761
   949  000394  EFCE  F001         	goto	u760
   950  000398                     u761:
   951  000398  EFD1  F001         	goto	l95
   952  00039C                     u760:
   953  00039C  827F               	bsf	127,1,c	;volatile
   954  00039E  EFD2  F001         	goto	l96
   955  0003A2                     l95:
   956  0003A2  927F               	bcf	127,1,c	;volatile
   957  0003A4                     l96:
   958                           
   959                           ;LEDarray.c: 52:     if (number & 0b000000100) { LATAbits.LATA2=1;} else { LATAbits.LATA
      +                          2=0;}
   960  0003A4  A402               	btfss	LEDarray_disp_bin@number^0,2,c
   961  0003A6  EFD7  F001         	goto	u771
   962  0003AA  EFD9  F001         	goto	u770
   963  0003AE                     u771:
   964  0003AE  EFDC  F001         	goto	l97
   965  0003B2                     u770:
   966  0003B2  8479               	bsf	121,2,c	;volatile
   967  0003B4  EFDD  F001         	goto	l98
   968  0003B8                     l97:
   969  0003B8  9479               	bcf	121,2,c	;volatile
   970  0003BA                     l98:
   971                           
   972                           ;LEDarray.c: 53:     if (number & 0b000001000) { LATFbits.LATF6=1;} else { LATFbits.LATF
      +                          6=0;}
   973  0003BA  A602               	btfss	LEDarray_disp_bin@number^0,3,c
   974  0003BC  EFE2  F001         	goto	u781
   975  0003C0  EFE4  F001         	goto	u780
   976  0003C4                     u781:
   977  0003C4  EFE7  F001         	goto	l99
   978  0003C8                     u780:
   979  0003C8  8C7E               	bsf	126,6,c	;volatile
   980  0003CA  EFE8  F001         	goto	l100
   981  0003CE                     l99:
   982  0003CE  9C7E               	bcf	126,6,c	;volatile
   983  0003D0                     l100:
   984                           
   985                           ;LEDarray.c: 54:     if (number & 0b000010000) { LATAbits.LATA4=1;} else { LATAbits.LATA
      +                          4=0;}
   986  0003D0  A802               	btfss	LEDarray_disp_bin@number^0,4,c
   987  0003D2  EFED  F001         	goto	u791
   988  0003D6  EFEF  F001         	goto	u790
   989  0003DA                     u791:
   990  0003DA  EFF2  F001         	goto	l101
   991  0003DE                     u790:
   992  0003DE  8879               	bsf	121,4,c	;volatile
   993  0003E0  EFF3  F001         	goto	l102
   994  0003E4                     l101:
   995  0003E4  9879               	bcf	121,4,c	;volatile
   996  0003E6                     l102:
   997                           
   998                           ;LEDarray.c: 55:     if (number & 0b000100000) { LATAbits.LATA5=1;} else { LATAbits.LATA
      +                          5=0;}
   999  0003E6  AA02               	btfss	LEDarray_disp_bin@number^0,5,c
  1000  0003E8  EFF8  F001         	goto	u801
  1001  0003EC  EFFA  F001         	goto	u800
  1002  0003F0                     u801:
  1003  0003F0  EFFD  F001         	goto	l103
  1004  0003F4                     u800:
  1005  0003F4  8A79               	bsf	121,5,c	;volatile
  1006  0003F6  EFFE  F001         	goto	l104
  1007  0003FA                     l103:
  1008  0003FA  9A79               	bcf	121,5,c	;volatile
  1009  0003FC                     l104:
  1010                           
  1011                           ;LEDarray.c: 56:     if (number & 0b001000000) { LATFbits.LATF0=1;} else { LATFbits.LATF
      +                          0=0;}
  1012  0003FC  AC02               	btfss	LEDarray_disp_bin@number^0,6,c
  1013  0003FE  EF03  F002         	goto	u811
  1014  000402  EF05  F002         	goto	u810
  1015  000406                     u811:
  1016  000406  EF08  F002         	goto	l105
  1017  00040A                     u810:
  1018  00040A  807E               	bsf	126,0,c	;volatile
  1019  00040C  EF09  F002         	goto	l106
  1020  000410                     l105:
  1021  000410  907E               	bcf	126,0,c	;volatile
  1022  000412                     l106:
  1023                           
  1024                           ;LEDarray.c: 57:     if (number & 0b010000000) { LATBbits.LATB0=1;} else { LATBbits.LATB
      +                          0=0;}
  1025  000412  AE02               	btfss	LEDarray_disp_bin@number^0,7,c
  1026  000414  EF0E  F002         	goto	u821
  1027  000418  EF10  F002         	goto	u820
  1028  00041C                     u821:
  1029  00041C  EF13  F002         	goto	l107
  1030  000420                     u820:
  1031  000420  807A               	bsf	122,0,c	;volatile
  1032  000422  EF14  F002         	goto	l108
  1033  000426                     l107:
  1034  000426  907A               	bcf	122,0,c	;volatile
  1035  000428                     l108:
  1036                           
  1037                           ;LEDarray.c: 58:     if (number & 0b100000000) { LATBbits.LATB1=1;} else { LATBbits.LATB
      +                          1=0;}
  1038  000428  A003               	btfss	(LEDarray_disp_bin@number+1)^0,0,c
  1039  00042A  EF19  F002         	goto	u831
  1040  00042E  EF1B  F002         	goto	u830
  1041  000432                     u831:
  1042  000432  EF1E  F002         	goto	l109
  1043  000436                     u830:
  1044  000436  827A               	bsf	122,1,c	;volatile
  1045  000438  EF1F  F002         	goto	l111
  1046  00043C                     l109:
  1047  00043C  927A               	bcf	122,1,c	;volatile
  1048  00043E                     l111:
  1049  00043E  0012               	return		;funcret
  1050  000440                     __end_of_LEDarray_disp_bin:
  1051                           	callstack 0
  1052                           
  1053 ;; *************** function _Interrupts_init *****************
  1054 ;; Defined at:
  1055 ;;		line 8 in file "interrupts.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;		None
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;		None
  1060 ;; Return value:  Size  Location     Type
  1061 ;;                  1    wreg      void 
  1062 ;; Registers used:
  1063 ;;		None
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1073 ;;Total ram usage:        0 bytes
  1074 ;; Hardware stack levels used: 1
  1075 ;; Hardware stack levels required when called: 1
  1076 ;; This function calls:
  1077 ;;		Nothing
  1078 ;; This function is called by:
  1079 ;;		_main
  1080 ;; This function uses a non-reentrant model
  1081 ;;
  1082                           
  1083                           	psect	text4
  1084  000510                     __ptext4:
  1085                           	callstack 0
  1086  000510                     _Interrupts_init:
  1087                           	callstack 29
  1088  000510                     
  1089                           ;interrupts.c: 12:     INTCONbits.PEIE=1;
  1090  000510  8CF2               	bsf	242,6,c	;volatile
  1091                           
  1092                           ;interrupts.c: 13:     PIE0bits.TMR0IE=1;
  1093  000512  010E               	movlb	14	; () banked
  1094  000514  8B29               	bsf	41,5,b	;volatile
  1095                           
  1096                           ;interrupts.c: 14:     PIE2bits.C1IE=1;
  1097  000516  812B               	bsf	43,0,b	;volatile
  1098                           
  1099                           ;interrupts.c: 15:     INTCONbits.GIE=1;
  1100  000518  8EF2               	bsf	242,7,c	;volatile
  1101  00051A                     
  1102                           ; BSR set to: 14
  1103  00051A  0012               	return		;funcret
  1104  00051C                     __end_of_Interrupts_init:
  1105                           	callstack 0
  1106                           
  1107 ;; *************** function _ADC_init *****************
  1108 ;; Defined at:
  1109 ;;		line 9 in file "ADC.c"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;		None
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;		None
  1114 ;; Return value:  Size  Location     Type
  1115 ;;                  1    wreg      void 
  1116 ;; Registers used:
  1117 ;;		wreg, status,2
  1118 ;; Tracked objects:
  1119 ;;		On entry : 0/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1127 ;;Total ram usage:        0 bytes
  1128 ;; Hardware stack levels used: 1
  1129 ;; Hardware stack levels required when called: 1
  1130 ;; This function calls:
  1131 ;;		Nothing
  1132 ;; This function is called by:
  1133 ;;		_main
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           	psect	text5
  1138  0004DE                     __ptext5:
  1139                           	callstack 0
  1140  0004DE                     _ADC_init:
  1141                           	callstack 29
  1142  0004DE                     
  1143                           ;ADC.c: 11:     TRISAbits.TRISA3=1;
  1144  0004DE  8681               	bsf	129,3,c	;volatile
  1145                           
  1146                           ;ADC.c: 12:     ANSELAbits.ANSELA3=1;
  1147  0004E0  010E               	movlb	14	; () banked
  1148  0004E2  8792               	bsf	146,3,b	;volatile
  1149                           
  1150                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
  1151  0004E4  010F               	movlb	15	; () banked
  1152  0004E6  9958               	bcf	88,4,b	;volatile
  1153  0004E8                     
  1154                           ; BSR set to: 15
  1155                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  1156  0004E8  0EFC               	movlw	-4
  1157  0004EA  1758               	andwf	88,f,b	;volatile
  1158                           
  1159                           ;ADC.c: 17:     ADPCH=0b11;
  1160  0004EC  0E03               	movlw	3
  1161  0004EE  6F5F               	movwf	95,b	;volatile
  1162  0004F0                     
  1163                           ; BSR set to: 15
  1164                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
  1165  0004F0  9460               	bcf	96,2,c	;volatile
  1166  0004F2                     
  1167                           ; BSR set to: 15
  1168                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
  1169  0004F2  8860               	bsf	96,4,c	;volatile
  1170  0004F4                     
  1171                           ; BSR set to: 15
  1172                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
  1173  0004F4  8E60               	bsf	96,7,c	;volatile
  1174  0004F6                     
  1175                           ; BSR set to: 15
  1176  0004F6  0012               	return		;funcret
  1177  0004F8                     __end_of_ADC_init:
  1178                           	callstack 0
  1179                           
  1180 ;; *************** function _ADC_getval *****************
  1181 ;; Defined at:
  1182 ;;		line 23 in file "ADC.c"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;		None
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;  tmpval          2    3[COMRAM] unsigned int 
  1187 ;; Return value:  Size  Location     Type
  1188 ;;                  2    1[COMRAM] unsigned int 
  1189 ;; Registers used:
  1190 ;;		wreg, status,2, status,0
  1191 ;; Tracked objects:
  1192 ;;		On entry : 0/0
  1193 ;;		On exit  : 0/0
  1194 ;;		Unchanged: 0/0
  1195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1196 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1197 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1199 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1200 ;;Total ram usage:        4 bytes
  1201 ;; Hardware stack levels used: 1
  1202 ;; Hardware stack levels required when called: 1
  1203 ;; This function calls:
  1204 ;;		Nothing
  1205 ;; This function is called by:
  1206 ;;		_main
  1207 ;; This function uses a non-reentrant model
  1208 ;;
  1209                           
  1210                           	psect	text6
  1211  000440                     __ptext6:
  1212                           	callstack 0
  1213  000440                     _ADC_getval:
  1214                           	callstack 29
  1215  000440                     
  1216                           ;ADC.c: 25:     unsigned int tmpval;;ADC.c: 27:     ADCON0bits.GO = 1;
  1217  000440  8060               	bsf	96,0,c	;volatile
  1218  000442                     l18:
  1219  000442  B060               	btfsc	96,0,c	;volatile
  1220  000444  EF26  F002         	goto	u741
  1221  000448  EF28  F002         	goto	u740
  1222  00044C                     u741:
  1223  00044C  EF21  F002         	goto	l18
  1224  000450                     u740:
  1225  000450                     
  1226                           ;ADC.c: 31:     tmpval = ADRESH;
  1227  000450  CF64 F004          	movff	3940,ADC_getval@tmpval	;volatile
  1228  000454  6A05               	clrf	(ADC_getval@tmpval+1)^0,c
  1229  000456                     
  1230                           ;ADC.c: 35:     tmpval = 255 - tmpval;
  1231  000456  5004               	movf	ADC_getval@tmpval^0,w,c
  1232  000458  08FF               	sublw	255
  1233  00045A  6E04               	movwf	ADC_getval@tmpval^0,c
  1234  00045C  5005               	movf	(ADC_getval@tmpval+1)^0,w,c
  1235  00045E  A0D8               	btfss	status,0,c
  1236  000460  2AE8               	incf	wreg,f,c
  1237  000462  0800               	sublw	0
  1238  000464  6E05               	movwf	(ADC_getval@tmpval+1)^0,c
  1239  000466                     
  1240                           ;ADC.c: 37:     return tmpval;
  1241  000466  C004  F002         	movff	ADC_getval@tmpval,?_ADC_getval
  1242  00046A  C005  F003         	movff	ADC_getval@tmpval+1,?_ADC_getval+1
  1243  00046E  0012               	return		;funcret
  1244  000470                     __end_of_ADC_getval:
  1245                           	callstack 0
  1246                           
  1247 ;; *************** function _HighISR *****************
  1248 ;; Defined at:
  1249 ;;		line 22 in file "interrupts.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;		None
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;		None
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  1    wreg      void 
  1256 ;; Registers used:
  1257 ;;		wreg, status,2, status,0
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1265 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1266 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1267 ;;Total ram usage:        1 bytes
  1268 ;; Hardware stack levels used: 1
  1269 ;; This function calls:
  1270 ;;		Nothing
  1271 ;; This function is called by:
  1272 ;;		Interrupt level 2
  1273 ;; This function uses a non-reentrant model
  1274 ;;
  1275                           
  1276                           	psect	intcode
  1277  000008                     __pintcode:
  1278                           	callstack 0
  1279  000008                     _HighISR:
  1280                           	callstack 29
  1281                           
  1282                           ;incstack = 0
  1283  000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1284  00000A                     
  1285                           ;interrupts.c: 24:     if (PIR2bits.C1IF == 1){
  1286  00000A  010E               	movlb	14	; () banked
  1287  00000C  A135               	btfss	53,0,b	;volatile
  1288  00000E  EF0B  F000         	goto	i2u68_41
  1289  000012  EF0D  F000         	goto	i2u68_40
  1290  000016                     i2u68_41:
  1291  000016  EF21  F000         	goto	i2l1125
  1292  00001A                     i2u68_40:
  1293  00001A                     
  1294                           ; BSR set to: 14
  1295                           ;interrupts.c: 25:         LATHbits.LATH3 = !LATHbits.LATH3;
  1296  00001A  A680               	btfss	128,3,c	;volatile
  1297  00001C  EF12  F000         	goto	i2u69_41
  1298  000020  EF16  F000         	goto	i2u69_40
  1299  000024                     i2u69_41:
  1300  000024  6A01               	clrf	??_HighISR^0,c
  1301  000026  2A01               	incf	??_HighISR^0,f,c
  1302  000028  EF17  F000         	goto	i2u70_48
  1303  00002C                     i2u69_40:
  1304  00002C  6A01               	clrf	??_HighISR^0,c
  1305  00002E                     i2u70_48:
  1306  00002E  4601               	rlncf	??_HighISR^0,f,c
  1307  000030  4601               	rlncf	??_HighISR^0,f,c
  1308  000032  4601               	rlncf	??_HighISR^0,f,c
  1309  000034  5080               	movf	128,w,c	;volatile
  1310  000036  1801               	xorwf	??_HighISR^0,w,c
  1311  000038  0BF7               	andlw	-9
  1312  00003A  1801               	xorwf	??_HighISR^0,w,c
  1313  00003C  6E80               	movwf	128,c	;volatile
  1314  00003E                     
  1315                           ;interrupts.c: 26:         PIR2bits.C1IF=0;
  1316  00003E  010E               	movlb	14	; () banked
  1317  000040  9135               	bcf	53,0,b	;volatile
  1318  000042                     i2l1125:
  1319                           
  1320                           ; BSR set to: 14
  1321                           ;interrupts.c: 29:     if (PIR0bits.TMR0IF == 1){
  1322  000042  AB33               	btfss	51,5,b	;volatile
  1323  000044  EF26  F000         	goto	i2u71_41
  1324  000048  EF28  F000         	goto	i2u71_40
  1325  00004C                     i2u71_41:
  1326  00004C  EF3B  F000         	goto	i2l173
  1327  000050                     i2u71_40:
  1328  000050                     
  1329                           ; BSR set to: 14
  1330                           ;interrupts.c: 30:         LATDbits.LATD7 = !LATDbits.LATD7;
  1331  000050  AE7C               	btfss	124,7,c	;volatile
  1332  000052  EF2D  F000         	goto	i2u72_41
  1333  000056  EF31  F000         	goto	i2u72_40
  1334  00005A                     i2u72_41:
  1335  00005A  6A01               	clrf	??_HighISR^0,c
  1336  00005C  2A01               	incf	??_HighISR^0,f,c
  1337  00005E  EF32  F000         	goto	i2u73_48
  1338  000062                     i2u72_40:
  1339  000062  6A01               	clrf	??_HighISR^0,c
  1340  000064                     i2u73_48:
  1341  000064  3201               	rrcf	??_HighISR^0,f,c
  1342  000066  3201               	rrcf	??_HighISR^0,f,c
  1343  000068  507C               	movf	124,w,c	;volatile
  1344  00006A  1801               	xorwf	??_HighISR^0,w,c
  1345  00006C  0B7F               	andlw	-129
  1346  00006E  1801               	xorwf	??_HighISR^0,w,c
  1347  000070  6E7C               	movwf	124,c	;volatile
  1348  000072                     
  1349                           ;interrupts.c: 31:         PIR0bits.TMR0IF=0;
  1350  000072  010E               	movlb	14	; () banked
  1351  000074  9B33               	bcf	51,5,b	;volatile
  1352  000076                     i2l173:
  1353                           
  1354                           ; BSR set to: 14
  1355  000076  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1356  000078  0011               	retfie		f
  1357  00007A                     __end_of_HighISR:
  1358                           	callstack 0
  1359  0000                     
  1360                           	psect	rparam
  1361  0000                     
  1362                           	psect	temp
  1363  000056                     btemp:
  1364                           	callstack 0
  1365  000056                     	ds	1
  1366  0000                     int$flags	set	btemp
  1367  0000                     wtemp8	set	btemp+1
  1368  0000                     ttemp5	set	btemp+1
  1369  0000                     ttemp6	set	btemp+4
  1370  0000                     ttemp7	set	btemp+8
  1371                           
  1372                           	psect	idloc
  1373                           
  1374                           ;Config register IDLOC0 @ 0x200000
  1375                           ;	unspecified, using default values
  1376  200000                     	org	2097152
  1377  200000  0FFF               	dw	4095
  1378                           
  1379                           ;Config register IDLOC1 @ 0x200002
  1380                           ;	unspecified, using default values
  1381  200002                     	org	2097154
  1382  200002  0FFF               	dw	4095
  1383                           
  1384                           ;Config register IDLOC2 @ 0x200004
  1385                           ;	unspecified, using default values
  1386  200004                     	org	2097156
  1387  200004  0FFF               	dw	4095
  1388                           
  1389                           ;Config register IDLOC3 @ 0x200006
  1390                           ;	unspecified, using default values
  1391  200006                     	org	2097158
  1392  200006  0FFF               	dw	4095
  1393                           
  1394                           ;Config register IDLOC4 @ 0x200008
  1395                           ;	unspecified, using default values
  1396  200008                     	org	2097160
  1397  200008  0FFF               	dw	4095
  1398                           
  1399                           ;Config register IDLOC5 @ 0x20000A
  1400                           ;	unspecified, using default values
  1401  20000A                     	org	2097162
  1402  20000A  0FFF               	dw	4095
  1403                           
  1404                           ;Config register IDLOC6 @ 0x20000C
  1405                           ;	unspecified, using default values
  1406  20000C                     	org	2097164
  1407  20000C  0FFF               	dw	4095
  1408                           
  1409                           ;Config register IDLOC7 @ 0x20000E
  1410                           ;	unspecified, using default values
  1411  20000E                     	org	2097166
  1412  20000E  0FFF               	dw	4095
  1413                           
  1414                           	psect	config
  1415                           
  1416                           ;Config register CONFIG1L @ 0x300000
  1417                           ;	External Oscillator mode Selection bits
  1418                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  1419                           ;	Power-up default value for COSC bits
  1420                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  1421  300000                     	org	3145728
  1422  300000  AA                 	db	170
  1423                           
  1424                           ;Config register CONFIG1H @ 0x300001
  1425                           ;	unspecified, using default values
  1426                           ;	Clock Out Enable bit
  1427                           ;	CLKOUTEN = 0x1, unprogrammed default
  1428                           ;	Clock Switch Enable bit
  1429                           ;	CSWEN = 0x1, unprogrammed default
  1430                           ;	Fail-Safe Clock Monitor Enable bit
  1431                           ;	FCMEN = 0x1, unprogrammed default
  1432  300001                     	org	3145729
  1433  300001  FF                 	db	255
  1434                           
  1435                           ;Config register CONFIG2L @ 0x300002
  1436                           ;	unspecified, using default values
  1437                           ;	Master Clear Enable bit
  1438                           ;	MCLRE = 0x1, unprogrammed default
  1439                           ;	Power-up Timer Enable bit
  1440                           ;	PWRTE = 0x1, unprogrammed default
  1441                           ;	Low-power BOR enable bit
  1442                           ;	LPBOREN = 0x1, unprogrammed default
  1443                           ;	Brown-out Reset Enable bits
  1444                           ;	BOREN = 0x3, unprogrammed default
  1445  300002                     	org	3145730
  1446  300002  FF                 	db	255
  1447                           
  1448                           ;Config register CONFIG2H @ 0x300003
  1449                           ;	unspecified, using default values
  1450                           ;	Brown Out Reset Voltage selection bits
  1451                           ;	BORV = 0x3, unprogrammed default
  1452                           ;	ZCD Disable bit
  1453                           ;	ZCD = 0x1, unprogrammed default
  1454                           ;	PPSLOCK bit One-Way Set Enable bit
  1455                           ;	PPS1WAY = 0x1, unprogrammed default
  1456                           ;	Stack Full/Underflow Reset Enable bit
  1457                           ;	STVREN = 0x1, unprogrammed default
  1458                           ;	Debugger Enable bit
  1459                           ;	DEBUG = 0x1, unprogrammed default
  1460                           ;	Extended Instruction Set Enable bit
  1461                           ;	XINST = 0x1, unprogrammed default
  1462  300003                     	org	3145731
  1463  300003  FF                 	db	255
  1464                           
  1465                           ;Config register CONFIG3L @ 0x300004
  1466                           ;	WDT Period Select bits
  1467                           ;	WDTCPS = 0x1F, unprogrammed default
  1468                           ;	WDT operating mode
  1469                           ;	WDTE = OFF, WDT Disabled
  1470  300004                     	org	3145732
  1471  300004  9F                 	db	159
  1472                           
  1473                           ;Config register CONFIG3H @ 0x300005
  1474                           ;	unspecified, using default values
  1475                           ;	WDT Window Select bits
  1476                           ;	WDTCWS = 0x7, unprogrammed default
  1477                           ;	WDT input clock selector
  1478                           ;	WDTCCS = 0x7, unprogrammed default
  1479  300005                     	org	3145733
  1480  300005  FF                 	db	255
  1481                           
  1482                           ;Config register CONFIG4L @ 0x300006
  1483                           ;	unspecified, using default values
  1484                           ;	Write Protection Block 0
  1485                           ;	WRT0 = 0x1, unprogrammed default
  1486                           ;	Write Protection Block 1
  1487                           ;	WRT1 = 0x1, unprogrammed default
  1488                           ;	Write Protection Block 2
  1489                           ;	WRT2 = 0x1, unprogrammed default
  1490                           ;	Write Protection Block 3
  1491                           ;	WRT3 = 0x1, unprogrammed default
  1492                           ;	Write Protection Block 3
  1493                           ;	WRT4 = 0x1, unprogrammed default
  1494                           ;	Write Protection Block 3
  1495                           ;	WRT5 = 0x1, unprogrammed default
  1496                           ;	Write Protection Block 3
  1497                           ;	WRT6 = 0x1, unprogrammed default
  1498                           ;	Write Protection Block 3
  1499                           ;	WRT7 = 0x1, unprogrammed default
  1500  300006                     	org	3145734
  1501  300006  FF                 	db	255
  1502                           
  1503                           ;Config register CONFIG4H @ 0x300007
  1504                           ;	unspecified, using default values
  1505                           ;	Configuration Register Write Protection bit
  1506                           ;	WRTC = 0x1, unprogrammed default
  1507                           ;	Boot Block Write Protection bit
  1508                           ;	WRTB = 0x1, unprogrammed default
  1509                           ;	Data EEPROM Write Protection bit
  1510                           ;	WRTD = 0x1, unprogrammed default
  1511                           ;	Scanner Enable bit
  1512                           ;	SCANE = 0x1, unprogrammed default
  1513                           ;	Low Voltage Programming Enable bit
  1514                           ;	LVP = 0x1, unprogrammed default
  1515  300007                     	org	3145735
  1516  300007  FF                 	db	255
  1517                           
  1518                           ;Config register CONFIG5L @ 0x300008
  1519                           ;	unspecified, using default values
  1520                           ;	UserNVM Program Memory Code Protection bit
  1521                           ;	CP = 0x1, unprogrammed default
  1522                           ;	DataNVM Memory Code Protection bit
  1523                           ;	CPD = 0x1, unprogrammed default
  1524  300008                     	org	3145736
  1525  300008  FF                 	db	255
  1526                           
  1527                           ;Config register CONFIG5H @ 0x300009
  1528                           ;	unspecified, using default values
  1529  300009                     	org	3145737
  1530  300009  FF                 	db	255
  1531                           
  1532                           ;Config register CONFIG6L @ 0x30000A
  1533                           ;	unspecified, using default values
  1534                           ;	Table Read Protection Block 0
  1535                           ;	EBTR0 = 0x1, unprogrammed default
  1536                           ;	Table Read Protection Block 1
  1537                           ;	EBTR1 = 0x1, unprogrammed default
  1538                           ;	Table Read Protection Block 2
  1539                           ;	EBTR2 = 0x1, unprogrammed default
  1540                           ;	Table Read Protection Block 3
  1541                           ;	EBTR3 = 0x1, unprogrammed default
  1542                           ;	Table Read Protection Block 4
  1543                           ;	EBTR4 = 0x1, unprogrammed default
  1544                           ;	Table Read Protection Block 5
  1545                           ;	EBTR5 = 0x1, unprogrammed default
  1546                           ;	Table Read Protection Block 6
  1547                           ;	EBTR6 = 0x1, unprogrammed default
  1548                           ;	Table Read Protection Block 7
  1549                           ;	EBTR7 = 0x1, unprogrammed default
  1550  30000A                     	org	3145738
  1551  30000A  FF                 	db	255
  1552                           
  1553                           ;Config register CONFIG6H @ 0x30000B
  1554                           ;	unspecified, using default values
  1555                           ;	Boot Block Table Read Protection bit
  1556                           ;	EBTRB = 0x1, unprogrammed default
  1557  30000B                     	org	3145739
  1558  30000B  FF                 	db	255
  1559                           tosu	equ	0xFFF
  1560                           tosh	equ	0xFFE
  1561                           tosl	equ	0xFFD
  1562                           stkptr	equ	0xFFC
  1563                           pclatu	equ	0xFFB
  1564                           pclath	equ	0xFFA
  1565                           pcl	equ	0xFF9
  1566                           tblptru	equ	0xFF8
  1567                           tblptrh	equ	0xFF7
  1568                           tblptrl	equ	0xFF6
  1569                           tablat	equ	0xFF5
  1570                           prodh	equ	0xFF4
  1571                           prodl	equ	0xFF3
  1572                           indf0	equ	0xFEF
  1573                           postinc0	equ	0xFEE
  1574                           postdec0	equ	0xFED
  1575                           preinc0	equ	0xFEC
  1576                           plusw0	equ	0xFEB
  1577                           fsr0h	equ	0xFEA
  1578                           fsr0l	equ	0xFE9
  1579                           wreg	equ	0xFE8
  1580                           indf1	equ	0xFE7
  1581                           postinc1	equ	0xFE6
  1582                           postdec1	equ	0xFE5
  1583                           preinc1	equ	0xFE4
  1584                           plusw1	equ	0xFE3
  1585                           fsr1h	equ	0xFE2
  1586                           fsr1l	equ	0xFE1
  1587                           bsr	equ	0xFE0
  1588                           indf2	equ	0xFDF
  1589                           postinc2	equ	0xFDE
  1590                           postdec2	equ	0xFDD
  1591                           preinc2	equ	0xFDC
  1592                           plusw2	equ	0xFDB
  1593                           fsr2h	equ	0xFDA
  1594                           fsr2l	equ	0xFD9
  1595                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        24
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     61      85
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_ADC_getval

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                56    56      0    1135
                                              5 COMRAM    56    56      0
                         _ADC_getval
                           _ADC_init
                    _Interrupts_init
                  _LEDarray_disp_bin
                      _LEDarray_init
                        _Timer0_init
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     502
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_getval                                           4     2      2      46
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _HighISR                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_getval
   _ADC_init
   _Interrupts_init
   _LEDarray_disp_bin
   _LEDarray_init
   _Timer0_init

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3D      55       1       90.4%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      55       8        0.0%
DATA                 0      0      55       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Nov 02 10:40:52 2021

                        l20 0450                          l21 046E                          l15 04F6  
                        l18 0442                          l51 0146                          l61 0370  
                        l49 014C                          l90 04BE                          l93 038C  
                        l94 038E                          l95 03A2                          l96 03A4  
                        l97 03B8                          l98 03BA                          l99 03CE  
         ??_Interrupts_init 0002                         l100 03D0                         l101 03E4  
                       l102 03E6                         l111 043E                         l103 03FA  
                       l104 03FC                         l105 0410                         l106 0412  
                       l107 0426                         l108 0428                         l109 043C  
                       l166 051A                         l184 04DC                         l871 04F4  
                       l863 04DE                         l865 04E8                         l881 049A  
                       l867 04F0                         l891 04DA                         l883 04C0  
                       l869 04F2                         l893 0510                         l885 04C8  
                       l887 04D2                         l889 04D4                         u800 03F4  
                       u801 03F0                         u810 040A                         u811 0406  
                       u740 0450                         u820 0420                         u900 017C  
                       u741 044C                         u821 041C                         u901 0178  
                       u830 0436                         u750 0386                         u910 0192  
                       u831 0432                         u751 0382                         u911 018A  
                       u760 039C                         u920 01AE                         u761 0398  
                       u921 01AA                         u841 00B0                         u770 03B2  
                       u930 01CE                         u850 011A                         u771 03AE  
                       u931 01CA                         u851 0116                         u780 03C8  
                       u940 01EE                         u860 0130                         u781 03C4  
                       u941 01EA                         u861 012C                         u790 03DE  
                       u950 021C                         u918 0194                         u870 0146  
                       u791 03DA                         u951 0218                         u871 0142  
                       u960 0270                         u880 015E                         u961 026C  
                       u881 0158                         u970 029A                         u890 0160  
                       u971 0296                         u980 02BA                         u981 02B6  
                       u990 0306                         u991 0302                         wreg 000FE8  
       __size_of_ADC_getval 0030                 main@daydate 0036          main@light_strength 002A  
                      l1201 0104                        l1211 0180                        l1203 011A  
                      l1141 0466                        l1221 01CE                        l1213 019A  
                      l1205 0130                        l1151 03B2                        l1231 0202  
                      l1223 01D2                        l1215 01AE                        l1207 014E  
                      l1137 0440                        l1161 0420                        l1153 03C8  
                      l1145 0378                        l1241 0270                        l1233 020A  
                      l1225 01DA                        l1217 01B2                        l1209 017C  
                      l1139 0456                        l1163 0436                        l1155 03DE  
                      l1147 0386                        l1251 029E                        l1243 0274  
                      l1235 021C                        l1227 01EE                        l1219 01BA  
                      l1171 008E                        l1157 03F4                        l1149 039C  
                      l1261 032C                        l1253 02A6                        l1245 027C  
                      l1237 0228                        l1229 01F6                        l1181 00A6  
                      l1173 0096                        l1165 007E                        l1159 040A  
                      l1271 0364                        l1263 0330                        l1255 02BA  
                      l1247 0284                        l1239 0230                        l1191 00D8  
                      l1183 00B8                        l1175 0096                        l1167 0086  
                      l1265 0338                        l1257 0306                        l1249 029A  
                      l1193 00E0                        l1185 00C0                        l1177 009E  
                      l1169 008A                        l1267 034C                        l1259 031A  
                      l1195 00E8                        l1187 00C8                        l1179 00A6  
                      l1269 035E                        l1197 00F0                        l1189 00D0  
                      l1199 00F8                        u1000 031A                        u1001 0316  
                      u1010 032C                        u1011 0328                        u1020 034C  
                      u1021 0348                        u1030 035E                        u1031 035A  
               main@minutes 0034                        _main 007E                        fsr1l 000FE1  
                      fsr2l 000FD9                        btemp 0056                        start 007A  
          __end_of_ADC_init 04F8             __end_of_HighISR 007A                ___param_bank 000000  
                     ?_main 0001                       _ADPCH 000F5F                       i2l173 0076  
                     _TMR0H 000FD4                       _TMR0L 000FD3                       tablat 000FF5  
                     plusw1 000FE3                       plusw2 000FDB                       ttemp5 0057  
                     ttemp6 005A                       ttemp7 005E                       status 000FD8  
                     wtemp8 0057             __initialization 0470                __end_of_main 0378  
                    ??_main 0006               __activetblptr 000000      __size_of_LEDarray_init 0026  
                    _ADRESH 000F64               main@leap_year 002E                      i2l1121 001A  
                    i2l1123 003E                      i2l1125 0042                      i2l1127 0050  
                    i2l1119 000A                      i2l1129 0072                   ??_HighISR 0001  
         _LEDarray_disp_bin 0378          ?_LEDarray_disp_bin 0002                ??_ADC_getval 0004  
             ??_Timer0_init 0002         ??_LEDarray_disp_bin 0004               main@monthdays 000E  
                    isa$std 000001                __pdataCOMRAM 003E                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8                   ?_ADC_init 0001  
        __end_of_ADC_getval 0470   __end_of_LEDarray_disp_bin 0440                  __accesstop 0060  
   __end_of__initialization 0490               ___rparam_used 000001               _LEDarray_init 049A  
           _Interrupts_init 0510              __pcstackCOMRAM 0001         __end_of_Timer0_init 04DE  
                ??_ADC_init 0002              ?_LEDarray_init 0001                     i2u71_40 0050  
                   i2u70_48 002E                     i2u71_41 004C                     i2u72_40 0062  
                   i2u72_41 005A                     i2u73_48 0064                     i2u68_40 001A  
                   i2u68_41 0016                     i2u69_40 002C                     i2u69_41 0024  
__size_of_LEDarray_disp_bin 00C8     __end_of_Interrupts_init 051C                     _HighISR 0008  
                 _ADREFbits 000F58                     __Hparam 0000                     __Lparam 0000  
               _Timer0_init 04C0                     __pcinit 0470                     __ramtop 0E00  
                   __ptext0 007E                     __ptext1 04C0                     __ptext2 049A  
                   __ptext3 0378                     __ptext4 0510                     __ptext5 04DE  
                   __ptext6 0440        end_of_initialization 0490            ADC_getval@tmpval 0004  
           ??_LEDarray_init 0002                     postdec1 000FE5                     postinc0 000FEE  
                   postinc2 000FDE                  main@F14212 003E                   _TRISAbits 000F81  
                 _TRISBbits 000F82           main@daylight_flag 0038                   _TRISDbits 000F84  
                 _TRISFbits 000F86                   _TRISGbits 000F87                   _TRISHbits 000F88  
         __size_of_ADC_init 001A            ?_Interrupts_init 0001               __pidataCOMRAM 04F8  
       start_initialization 0470             main@day_of_week 0028                    ?_HighISR 0001  
              ?_Timer0_init 0001                   __pintcode 0008                    _ADC_init 04DE  
                  _LATAbits 000F79                    _LATBbits 000F7A                    _LATDbits 000F7C  
                  _LATFbits 000F7E                    _LATGbits 000F7F                    _LATHbits 000F80  
                  _PIE0bits 000E29                    _PIE2bits 000E2B                    _PIR0bits 000E33  
                  _PIR2bits 000E35                  _ADCON0bits 000F60                   main@month 003C  
                 copy_data0 0484            __size_of_HighISR 0072       __end_of_LEDarray_init 04C0  
                  __Hrparam 0000                  _ADC_getval 0440                    __Lrparam 0000  
                _ANSELAbits 000E92                  _ANSELFbits 000EB4                  _T0CON0bits 000FD5  
                _T0CON1bits 000FD6     LEDarray_disp_bin@number 0002               __size_of_main 02FA  
                  isa$xinst 000000    __size_of_Interrupts_init 000C                    int$flags 0056  
      __size_of_Timer0_init 001E                    main@hour 003A                    main@secs 0032  
                  main@temp 002C                    main@year 0030                  _INTCONbits 000FF2  
        main@set_brightness 0026                    intlevel2 0000                 ?_ADC_getval 0002  
