

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Nov 01 21:46:09 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 05/05/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F67K40 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     _PIR0bits	set	3635
    56  0000                     _PIR2bits	set	3637
    57  0000                     _PIE2bits	set	3627
    58  0000                     _PIE0bits	set	3625
    59  0000                     _ANSELFbits	set	3764
    60  0000                     _ANSELAbits	set	3730
    61  0000                     _ADPCH	set	3935
    62  0000                     _ADREFbits	set	3928
    63  0000                     _INTCONbits	set	4082
    64  0000                     _TMR0L	set	4051
    65  0000                     _TMR0H	set	4052
    66  0000                     _T0CON0bits	set	4053
    67  0000                     _T0CON1bits	set	4054
    68  0000                     _TRISBbits	set	3970
    69  0000                     _LATBbits	set	3962
    70  0000                     _TRISFbits	set	3974
    71  0000                     _LATFbits	set	3966
    72  0000                     _LATAbits	set	3961
    73  0000                     _TRISGbits	set	3975
    74  0000                     _LATGbits	set	3967
    75  0000                     _TRISDbits	set	3972
    76  0000                     _LATDbits	set	3964
    77  0000                     _TRISHbits	set	3976
    78  0000                     _LATHbits	set	3968
    79  0000                     _ADRESH	set	3940
    80  0000                     _ADCON0bits	set	3936
    81  0000                     _TRISAbits	set	3969
    82                           
    83                           ; #config settings
    84                           
    85                           	psect	cinit
    86  000334                     __pcinit:
    87                           	callstack 0
    88  000334                     start_initialization:
    89                           	callstack 0
    90  000334                     __initialization:
    91                           	callstack 0
    92  000334                     end_of_initialization:
    93                           	callstack 0
    94  000334                     __end_of__initialization:
    95                           	callstack 0
    96  000334  9014               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    97  000336  9214               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    98  000338  0100               	movlb	0
    99  00033A  EF3F  F000         	goto	_main	;jump to C main() function
   100                           
   101                           	psect	cstackCOMRAM
   102  000001                     __pcstackCOMRAM:
   103                           	callstack 0
   104  000001                     ??_HighISR:
   105                           
   106                           ; 1 bytes @ 0x0
   107  000001                     	ds	1
   108  000002                     ?_ADC_getval:
   109                           	callstack 0
   110  000002                     LEDarray_disp_bin@number:
   111                           	callstack 0
   112                           
   113                           ; 2 bytes @ 0x1
   114  000002                     	ds	2
   115  000004                     ADC_getval@tmpval:
   116                           	callstack 0
   117                           
   118                           ; 2 bytes @ 0x3
   119  000004                     	ds	2
   120  000006                     ??_main:
   121                           
   122                           ; 1 bytes @ 0x5
   123  000006                     	ds	2
   124  000008                     main@set_brightness:
   125                           	callstack 0
   126                           
   127                           ; 2 bytes @ 0x7
   128  000008                     	ds	2
   129  00000A                     main@light_strength:
   130                           	callstack 0
   131                           
   132                           ; 2 bytes @ 0x9
   133  00000A                     	ds	2
   134  00000C                     main@temp:
   135                           	callstack 0
   136                           
   137                           ; 2 bytes @ 0xB
   138  00000C                     	ds	2
   139  00000E                     main@secs:
   140                           	callstack 0
   141                           
   142                           ; 2 bytes @ 0xD
   143  00000E                     	ds	2
   144  000010                     main@minutes:
   145                           	callstack 0
   146                           
   147                           ; 2 bytes @ 0xF
   148  000010                     	ds	2
   149  000012                     main@hour:
   150                           	callstack 0
   151                           
   152                           ; 2 bytes @ 0x11
   153  000012                     	ds	2
   154                           
   155 ;;
   156 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   157 ;;
   158 ;; *************** function _main *****************
   159 ;; Defined at:
   160 ;;		line 13 in file "main.c"
   161 ;; Parameters:    Size  Location     Type
   162 ;;		None
   163 ;; Auto vars:     Size  Location     Type
   164 ;;  hour            2   17[COMRAM] unsigned int 
   165 ;;  minutes         2   15[COMRAM] unsigned int 
   166 ;;  secs            2   13[COMRAM] unsigned int 
   167 ;;  temp            2   11[COMRAM] unsigned int 
   168 ;;  light_streng    2    9[COMRAM] unsigned int 
   169 ;;  set_brightne    2    7[COMRAM] unsigned int 
   170 ;; Return value:  Size  Location     Type
   171 ;;                  1    wreg      void 
   172 ;; Registers used:
   173 ;;		wreg, status,2, status,0, cstack
   174 ;; Tracked objects:
   175 ;;		On entry : 0/0
   176 ;;		On exit  : 0/0
   177 ;;		Unchanged: 0/0
   178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   180 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   181 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   182 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   183 ;;Total ram usage:       14 bytes
   184 ;; Hardware stack levels required when called: 2
   185 ;; This function calls:
   186 ;;		_ADC_getval
   187 ;;		_ADC_init
   188 ;;		_Interrupts_init
   189 ;;		_LEDarray_disp_bin
   190 ;;		_LEDarray_init
   191 ;;		_Timer0_init
   192 ;; This function is called by:
   193 ;;		Startup code after reset
   194 ;; This function uses a non-reentrant model
   195 ;;
   196                           
   197                           	psect	text0
   198  00007E                     __ptext0:
   199                           	callstack 0
   200  00007E                     _main:
   201                           	callstack 29
   202  00007E                     
   203                           ;main.c: 16:     LATHbits.LATH3=0;
   204  00007E  9680               	bcf	128,3,c	;volatile
   205                           
   206                           ;main.c: 17:     TRISHbits.TRISH3=0;
   207  000080  9688               	bcf	136,3,c	;volatile
   208                           
   209                           ;main.c: 20:     LATDbits.LATD7=0;
   210  000082  9E7C               	bcf	124,7,c	;volatile
   211                           
   212                           ;main.c: 21:     TRISDbits.TRISD7=0;
   213  000084  9E84               	bcf	132,7,c	;volatile
   214  000086                     
   215                           ;main.c: 24:     LEDarray_init();
   216  000086  EC64  F001         	call	_LEDarray_init	;wreg free
   217  00008A                     
   218                           ;main.c: 25:     ADC_init();
   219  00008A  EC87  F001         	call	_ADC_init	;wreg free
   220  00008E                     
   221                           ;main.c: 26:     Timer0_init();
   222  00008E  EC77  F001         	call	_Timer0_init	;wreg free
   223                           
   224                           ;main.c: 27:     Interrupts_init();
   225  000092  EC94  F001         	call	_Interrupts_init	;wreg free
   226  000096                     
   227                           ;main.c: 31:     unsigned int temp=0;
   228  000096  0E00               	movlw	0
   229  000098  6E0D               	movwf	(main@temp+1)^0,c
   230  00009A  0E00               	movlw	0
   231  00009C  6E0C               	movwf	main@temp^0,c
   232  00009E                     
   233                           ;main.c: 32:     unsigned int secs=0;
   234  00009E  0E00               	movlw	0
   235  0000A0  6E0F               	movwf	(main@secs+1)^0,c
   236  0000A2  0E00               	movlw	0
   237  0000A4  6E0E               	movwf	main@secs^0,c
   238  0000A6                     
   239                           ;main.c: 35:     unsigned int set_brightness=50;
   240  0000A6  0E00               	movlw	0
   241  0000A8  6E09               	movwf	(main@set_brightness+1)^0,c
   242  0000AA  0E32               	movlw	50
   243  0000AC  6E08               	movwf	main@set_brightness^0,c
   244  0000AE                     
   245                           ;main.c: 36:     unsigned int minutes=0;
   246  0000AE  0E00               	movlw	0
   247  0000B0  6E11               	movwf	(main@minutes+1)^0,c
   248  0000B2  0E00               	movlw	0
   249  0000B4  6E10               	movwf	main@minutes^0,c
   250  0000B6                     
   251                           ;main.c: 37:     unsigned int hour=0;
   252  0000B6  0E00               	movlw	0
   253  0000B8  6E13               	movwf	(main@hour+1)^0,c
   254  0000BA  0E00               	movlw	0
   255  0000BC  6E12               	movwf	main@hour^0,c
   256  0000BE                     l1113:
   257                           
   258                           ;main.c: 40:         light_strength = ADC_getval();
   259  0000BE  EC4C  F001         	call	_ADC_getval	;wreg free
   260  0000C2  C002  F00A         	movff	?_ADC_getval,main@light_strength
   261  0000C6  C003  F00B         	movff	?_ADC_getval+1,main@light_strength+1
   262                           
   263                           ;main.c: 41:         if (light_strength >= set_brightness || (1<hour && hour<5 ) ) {
   264  0000CA  5008               	movf	main@set_brightness^0,w,c
   265  0000CC  5C0A               	subwf	main@light_strength^0,w,c
   266  0000CE  5009               	movf	(main@set_brightness+1)^0,w,c
   267  0000D0  580B               	subwfb	(main@light_strength+1)^0,w,c
   268  0000D2  B0D8               	btfsc	status,0,c
   269  0000D4  EF6E  F000         	goto	u741
   270  0000D8  EF70  F000         	goto	u740
   271  0000DC                     u741:
   272  0000DC  EF86  F000         	goto	l49
   273  0000E0                     u740:
   274  0000E0  5013               	movf	(main@hour+1)^0,w,c
   275  0000E2  E109               	bnz	u750
   276  0000E4  0E02               	movlw	2
   277  0000E6  5C12               	subwf	main@hour^0,w,c
   278  0000E8  A0D8               	btfss	status,0,c
   279  0000EA  EF79  F000         	goto	u751
   280  0000EE  EF7B  F000         	goto	u750
   281  0000F2                     u751:
   282  0000F2  EF89  F000         	goto	l47
   283  0000F6                     u750:
   284  0000F6  5013               	movf	(main@hour+1)^0,w,c
   285  0000F8  E107               	bnz	u761
   286  0000FA  0E05               	movlw	5
   287  0000FC  5C12               	subwf	main@hour^0,w,c
   288  0000FE  B0D8               	btfsc	status,0,c
   289  000100  EF84  F000         	goto	u761
   290  000104  EF86  F000         	goto	u760
   291  000108                     u761:
   292  000108  EF89  F000         	goto	l47
   293  00010C                     u760:
   294  00010C                     l49:
   295                           
   296                           ;main.c: 42:             LATHbits.LATH3 = 0;
   297  00010C  9680               	bcf	128,3,c	;volatile
   298                           
   299                           ;main.c: 43:         }
   300  00010E  EF8A  F000         	goto	l1119
   301  000112                     l47:
   302                           
   303                           ;main.c: 45:             LATHbits.LATH3 = 1;
   304  000112  8680               	bsf	128,3,c	;volatile
   305  000114                     l1119:
   306                           
   307                           ;main.c: 48:         if (LATDbits.LATD7 != temp) {
   308  000114  BE7C               	btfsc	124,7,c	;volatile
   309  000116  EF8F  F000         	goto	u771
   310  00011A  EF92  F000         	goto	u770
   311  00011E                     u771:
   312  00011E  0E01               	movlw	1
   313  000120  EF93  F000         	goto	u780
   314  000124                     u770:
   315  000124  0E00               	movlw	0
   316  000126                     u780:
   317  000126  6E06               	movwf	??_main^0,c
   318  000128  6A07               	clrf	(??_main+1)^0,c
   319  00012A  500C               	movf	main@temp^0,w,c
   320  00012C  1806               	xorwf	??_main^0,w,c
   321  00012E  E109               	bnz	u790
   322  000130  500D               	movf	(main@temp+1)^0,w,c
   323  000132  1807               	xorwf	(??_main+1)^0,w,c
   324  000134  B4D8               	btfsc	status,2,c
   325  000136  EF9F  F000         	goto	u791
   326  00013A  EFA1  F000         	goto	u790
   327  00013E                     u791:
   328  00013E  EFB0  F000         	goto	l1125
   329  000142                     u790:
   330  000142                     
   331                           ;main.c: 49:             secs += 1;
   332  000142  4A0E               	infsnz	main@secs^0,f,c
   333  000144  2A0F               	incf	(main@secs+1)^0,f,c
   334  000146                     
   335                           ;main.c: 50:             temp = LATDbits.LATD7;
   336  000146  BE7C               	btfsc	124,7,c	;volatile
   337  000148  EFA8  F000         	goto	u801
   338  00014C  EFAC  F000         	goto	u800
   339  000150                     u801:
   340  000150  6A06               	clrf	??_main^0,c
   341  000152  2A06               	incf	??_main^0,f,c
   342  000154  EFAD  F000         	goto	u808
   343  000158                     u800:
   344  000158  6A06               	clrf	??_main^0,c
   345  00015A                     u808:
   346  00015A  5006               	movf	??_main^0,w,c
   347  00015C  6E0C               	movwf	main@temp^0,c
   348  00015E  6A0D               	clrf	(main@temp+1)^0,c
   349  000160                     l1125:
   350                           
   351                           ;main.c: 52:         if (secs == 60) {
   352  000160  0E3C               	movlw	60
   353  000162  180E               	xorwf	main@secs^0,w,c
   354  000164  100F               	iorwf	(main@secs+1)^0,w,c
   355  000166  A4D8               	btfss	status,2,c
   356  000168  EFB8  F000         	goto	u811
   357  00016C  EFBA  F000         	goto	u810
   358  000170                     u811:
   359  000170  EFC0  F000         	goto	l1131
   360  000174                     u810:
   361  000174                     
   362                           ;main.c: 53:             minutes += 1;
   363  000174  4A10               	infsnz	main@minutes^0,f,c
   364  000176  2A11               	incf	(main@minutes+1)^0,f,c
   365  000178                     
   366                           ;main.c: 54:             secs = 0;
   367  000178  0E00               	movlw	0
   368  00017A  6E0F               	movwf	(main@secs+1)^0,c
   369  00017C  0E00               	movlw	0
   370  00017E  6E0E               	movwf	main@secs^0,c
   371  000180                     l1131:
   372                           
   373                           ;main.c: 56:         if (minutes == 60) {
   374  000180  0E3C               	movlw	60
   375  000182  1810               	xorwf	main@minutes^0,w,c
   376  000184  1011               	iorwf	(main@minutes+1)^0,w,c
   377  000186  A4D8               	btfss	status,2,c
   378  000188  EFC8  F000         	goto	u821
   379  00018C  EFCA  F000         	goto	u820
   380  000190                     u821:
   381  000190  EFD0  F000         	goto	l1137
   382  000194                     u820:
   383  000194                     
   384                           ;main.c: 57:             hour += 1;
   385  000194  4A12               	infsnz	main@hour^0,f,c
   386  000196  2A13               	incf	(main@hour+1)^0,f,c
   387  000198                     
   388                           ;main.c: 58:             minutes = 0;
   389  000198  0E00               	movlw	0
   390  00019A  6E11               	movwf	(main@minutes+1)^0,c
   391  00019C  0E00               	movlw	0
   392  00019E  6E10               	movwf	main@minutes^0,c
   393  0001A0                     l1137:
   394                           
   395                           ;main.c: 60:         if (hour == 24) {
   396  0001A0  0E18               	movlw	24
   397  0001A2  1812               	xorwf	main@hour^0,w,c
   398  0001A4  1013               	iorwf	(main@hour+1)^0,w,c
   399  0001A6  A4D8               	btfss	status,2,c
   400  0001A8  EFD8  F000         	goto	u831
   401  0001AC  EFDA  F000         	goto	u830
   402  0001B0                     u831:
   403  0001B0  EFDE  F000         	goto	l1141
   404  0001B4                     u830:
   405  0001B4                     
   406                           ;main.c: 61:             hour = 0;
   407  0001B4  0E00               	movlw	0
   408  0001B6  6E13               	movwf	(main@hour+1)^0,c
   409  0001B8  0E00               	movlw	0
   410  0001BA  6E12               	movwf	main@hour^0,c
   411  0001BC                     l1141:
   412                           
   413                           ;main.c: 63:         LEDarray_disp_bin(hour);
   414  0001BC  C012  F002         	movff	main@hour,LEDarray_disp_bin@number
   415  0001C0  C013  F003         	movff	main@hour+1,LEDarray_disp_bin@number+1
   416  0001C4  ECE8  F000         	call	_LEDarray_disp_bin	;wreg free
   417  0001C8  EF5F  F000         	goto	l1113
   418  0001CC  EF3D  F000         	goto	start
   419  0001D0                     __end_of_main:
   420                           	callstack 0
   421                           
   422 ;; *************** function _Timer0_init *****************
   423 ;; Defined at:
   424 ;;		line 7 in file "timers.c"
   425 ;; Parameters:    Size  Location     Type
   426 ;;		None
   427 ;; Auto vars:     Size  Location     Type
   428 ;;		None
   429 ;; Return value:  Size  Location     Type
   430 ;;                  1    wreg      void 
   431 ;; Registers used:
   432 ;;		wreg, status,2
   433 ;; Tracked objects:
   434 ;;		On entry : 0/0
   435 ;;		On exit  : 0/0
   436 ;;		Unchanged: 0/0
   437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   442 ;;Total ram usage:        0 bytes
   443 ;; Hardware stack levels used: 1
   444 ;; Hardware stack levels required when called: 1
   445 ;; This function calls:
   446 ;;		Nothing
   447 ;; This function is called by:
   448 ;;		_main
   449 ;; This function uses a non-reentrant model
   450 ;;
   451                           
   452                           	psect	text1
   453  0002EE                     __ptext1:
   454                           	callstack 0
   455  0002EE                     _Timer0_init:
   456                           	callstack 29
   457  0002EE                     
   458                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
   459  0002EE  50D6               	movf	214,w,c	;volatile
   460  0002F0  0B1F               	andlw	-225
   461  0002F2  0940               	iorlw	64
   462  0002F4  6ED6               	movwf	214,c	;volatile
   463  0002F6                     
   464                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
   465  0002F6  88D6               	bsf	214,4,c	;volatile
   466                           
   467                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
   468  0002F8  50D6               	movf	214,w,c	;volatile
   469  0002FA  0BF0               	andlw	-16
   470  0002FC  0908               	iorlw	8
   471  0002FE  6ED6               	movwf	214,c	;volatile
   472  000300                     
   473                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
   474  000300  88D5               	bsf	213,4,c	;volatile
   475                           
   476                           ;timers.c: 15:     TMR0H=62500;
   477  000302  0E24               	movlw	36
   478  000304  6ED4               	movwf	212,c	;volatile
   479                           
   480                           ;timers.c: 16:     TMR0L=0;
   481  000306  0E00               	movlw	0
   482  000308  6ED3               	movwf	211,c	;volatile
   483  00030A                     
   484                           ;timers.c: 17:     T0CON0bits.T0EN=1;
   485  00030A  8ED5               	bsf	213,7,c	;volatile
   486  00030C  0012               	return		;funcret
   487  00030E                     __end_of_Timer0_init:
   488                           	callstack 0
   489                           
   490 ;; *************** function _LEDarray_init *****************
   491 ;; Defined at:
   492 ;;		line 8 in file "LEDarray.c"
   493 ;; Parameters:    Size  Location     Type
   494 ;;		None
   495 ;; Auto vars:     Size  Location     Type
   496 ;;		None
   497 ;; Return value:  Size  Location     Type
   498 ;;                  1    wreg      void 
   499 ;; Registers used:
   500 ;;		None
   501 ;; Tracked objects:
   502 ;;		On entry : 0/0
   503 ;;		On exit  : 0/0
   504 ;;		Unchanged: 0/0
   505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   510 ;;Total ram usage:        0 bytes
   511 ;; Hardware stack levels used: 1
   512 ;; Hardware stack levels required when called: 1
   513 ;; This function calls:
   514 ;;		Nothing
   515 ;; This function is called by:
   516 ;;		_main
   517 ;; This function uses a non-reentrant model
   518 ;;
   519                           
   520                           	psect	text2
   521  0002C8                     __ptext2:
   522                           	callstack 0
   523  0002C8                     _LEDarray_init:
   524                           	callstack 29
   525  0002C8                     
   526                           ;LEDarray.c: 13:     LATGbits.LATG0=0;
   527  0002C8  907F               	bcf	127,0,c	;volatile
   528                           
   529                           ;LEDarray.c: 14:     TRISGbits.TRISG0=0;
   530  0002CA  9087               	bcf	135,0,c	;volatile
   531                           
   532                           ;LEDarray.c: 16:     LATGbits.LATG1=0;
   533  0002CC  927F               	bcf	127,1,c	;volatile
   534                           
   535                           ;LEDarray.c: 17:     TRISGbits.TRISG1=0;
   536  0002CE  9287               	bcf	135,1,c	;volatile
   537                           
   538                           ;LEDarray.c: 19:     LATAbits.LATA2=0;
   539  0002D0  9479               	bcf	121,2,c	;volatile
   540                           
   541                           ;LEDarray.c: 20:     TRISAbits.TRISA2=0;
   542  0002D2  9481               	bcf	129,2,c	;volatile
   543                           
   544                           ;LEDarray.c: 22:     LATFbits.LATF6=0;
   545  0002D4  9C7E               	bcf	126,6,c	;volatile
   546                           
   547                           ;LEDarray.c: 23:     TRISFbits.TRISF6=0;
   548  0002D6  9C86               	bcf	134,6,c	;volatile
   549                           
   550                           ;LEDarray.c: 25:     LATAbits.LATA4=0;
   551  0002D8  9879               	bcf	121,4,c	;volatile
   552                           
   553                           ;LEDarray.c: 26:     TRISAbits.TRISA4=0;
   554  0002DA  9881               	bcf	129,4,c	;volatile
   555                           
   556                           ;LEDarray.c: 28:     LATAbits.LATA5=0;
   557  0002DC  9A79               	bcf	121,5,c	;volatile
   558                           
   559                           ;LEDarray.c: 29:     TRISAbits.TRISA5=0;
   560  0002DE  9A81               	bcf	129,5,c	;volatile
   561                           
   562                           ;LEDarray.c: 31:     LATFbits.LATF0=0;
   563  0002E0  907E               	bcf	126,0,c	;volatile
   564                           
   565                           ;LEDarray.c: 32:     TRISFbits.TRISF0=0;
   566  0002E2  9086               	bcf	134,0,c	;volatile
   567                           
   568                           ;LEDarray.c: 34:     LATBbits.LATB0=0;
   569  0002E4  907A               	bcf	122,0,c	;volatile
   570                           
   571                           ;LEDarray.c: 35:     TRISBbits.TRISB0=0;
   572  0002E6  9082               	bcf	130,0,c	;volatile
   573                           
   574                           ;LEDarray.c: 37:     LATBbits.LATB1=0;
   575  0002E8  927A               	bcf	122,1,c	;volatile
   576                           
   577                           ;LEDarray.c: 38:     TRISBbits.TRISB1=0;
   578  0002EA  9282               	bcf	130,1,c	;volatile
   579  0002EC  0012               	return		;funcret
   580  0002EE                     __end_of_LEDarray_init:
   581                           	callstack 0
   582                           
   583 ;; *************** function _LEDarray_disp_bin *****************
   584 ;; Defined at:
   585 ;;		line 45 in file "LEDarray.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;  number          2    1[COMRAM] unsigned int 
   588 ;; Auto vars:     Size  Location     Type
   589 ;;		None
   590 ;; Return value:  Size  Location     Type
   591 ;;                  1    wreg      void 
   592 ;; Registers used:
   593 ;;		None
   594 ;; Tracked objects:
   595 ;;		On entry : 0/0
   596 ;;		On exit  : 0/0
   597 ;;		Unchanged: 0/0
   598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   599 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   602 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   603 ;;Total ram usage:        2 bytes
   604 ;; Hardware stack levels used: 1
   605 ;; Hardware stack levels required when called: 1
   606 ;; This function calls:
   607 ;;		Nothing
   608 ;; This function is called by:
   609 ;;		_main
   610 ;;		_LEDarray_disp_dec
   611 ;;		_LEDarray_disp_PPM
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           	psect	text3
   616  0001D0                     __ptext3:
   617                           	callstack 0
   618  0001D0                     _LEDarray_disp_bin:
   619                           	callstack 29
   620  0001D0                     
   621                           ;LEDarray.c: 45: void LEDarray_disp_bin(unsigned int number);LEDarray.c: 46: {;LEDarray.
      +                          c: 50:     if (number & 0b000000001) { LATGbits.LATG0=1;} else { LATGbits.LATG0=0;}
   622  0001D0  A002               	btfss	LEDarray_disp_bin@number^0,0,c
   623  0001D2  EFED  F000         	goto	u651
   624  0001D6  EFEF  F000         	goto	u650
   625  0001DA                     u651:
   626  0001DA  EFF2  F000         	goto	l81
   627  0001DE                     u650:
   628  0001DE  807F               	bsf	127,0,c	;volatile
   629  0001E0  EFF3  F000         	goto	l82
   630  0001E4                     l81:
   631  0001E4  907F               	bcf	127,0,c	;volatile
   632  0001E6                     l82:
   633                           
   634                           ;LEDarray.c: 51:     if (number & 0b000000010) { LATGbits.LATG1=1;} else { LATGbits.LATG
      +                          1=0;}
   635  0001E6  A202               	btfss	LEDarray_disp_bin@number^0,1,c
   636  0001E8  EFF8  F000         	goto	u661
   637  0001EC  EFFA  F000         	goto	u660
   638  0001F0                     u661:
   639  0001F0  EFFD  F000         	goto	l83
   640  0001F4                     u660:
   641  0001F4  827F               	bsf	127,1,c	;volatile
   642  0001F6  EFFE  F000         	goto	l84
   643  0001FA                     l83:
   644  0001FA  927F               	bcf	127,1,c	;volatile
   645  0001FC                     l84:
   646                           
   647                           ;LEDarray.c: 52:     if (number & 0b000000100) { LATAbits.LATA2=1;} else { LATAbits.LATA
      +                          2=0;}
   648  0001FC  A402               	btfss	LEDarray_disp_bin@number^0,2,c
   649  0001FE  EF03  F001         	goto	u671
   650  000202  EF05  F001         	goto	u670
   651  000206                     u671:
   652  000206  EF08  F001         	goto	l85
   653  00020A                     u670:
   654  00020A  8479               	bsf	121,2,c	;volatile
   655  00020C  EF09  F001         	goto	l86
   656  000210                     l85:
   657  000210  9479               	bcf	121,2,c	;volatile
   658  000212                     l86:
   659                           
   660                           ;LEDarray.c: 53:     if (number & 0b000001000) { LATFbits.LATF6=1;} else { LATFbits.LATF
      +                          6=0;}
   661  000212  A602               	btfss	LEDarray_disp_bin@number^0,3,c
   662  000214  EF0E  F001         	goto	u681
   663  000218  EF10  F001         	goto	u680
   664  00021C                     u681:
   665  00021C  EF13  F001         	goto	l87
   666  000220                     u680:
   667  000220  8C7E               	bsf	126,6,c	;volatile
   668  000222  EF14  F001         	goto	l88
   669  000226                     l87:
   670  000226  9C7E               	bcf	126,6,c	;volatile
   671  000228                     l88:
   672                           
   673                           ;LEDarray.c: 54:     if (number & 0b000010000) { LATAbits.LATA4=1;} else { LATAbits.LATA
      +                          4=0;}
   674  000228  A802               	btfss	LEDarray_disp_bin@number^0,4,c
   675  00022A  EF19  F001         	goto	u691
   676  00022E  EF1B  F001         	goto	u690
   677  000232                     u691:
   678  000232  EF1E  F001         	goto	l89
   679  000236                     u690:
   680  000236  8879               	bsf	121,4,c	;volatile
   681  000238  EF1F  F001         	goto	l90
   682  00023C                     l89:
   683  00023C  9879               	bcf	121,4,c	;volatile
   684  00023E                     l90:
   685                           
   686                           ;LEDarray.c: 55:     if (number & 0b000100000) { LATAbits.LATA5=1;} else { LATAbits.LATA
      +                          5=0;}
   687  00023E  AA02               	btfss	LEDarray_disp_bin@number^0,5,c
   688  000240  EF24  F001         	goto	u701
   689  000244  EF26  F001         	goto	u700
   690  000248                     u701:
   691  000248  EF29  F001         	goto	l91
   692  00024C                     u700:
   693  00024C  8A79               	bsf	121,5,c	;volatile
   694  00024E  EF2A  F001         	goto	l92
   695  000252                     l91:
   696  000252  9A79               	bcf	121,5,c	;volatile
   697  000254                     l92:
   698                           
   699                           ;LEDarray.c: 56:     if (number & 0b001000000) { LATFbits.LATF0=1;} else { LATFbits.LATF
      +                          0=0;}
   700  000254  AC02               	btfss	LEDarray_disp_bin@number^0,6,c
   701  000256  EF2F  F001         	goto	u711
   702  00025A  EF31  F001         	goto	u710
   703  00025E                     u711:
   704  00025E  EF34  F001         	goto	l93
   705  000262                     u710:
   706  000262  807E               	bsf	126,0,c	;volatile
   707  000264  EF35  F001         	goto	l94
   708  000268                     l93:
   709  000268  907E               	bcf	126,0,c	;volatile
   710  00026A                     l94:
   711                           
   712                           ;LEDarray.c: 57:     if (number & 0b010000000) { LATBbits.LATB0=1;} else { LATBbits.LATB
      +                          0=0;}
   713  00026A  AE02               	btfss	LEDarray_disp_bin@number^0,7,c
   714  00026C  EF3A  F001         	goto	u721
   715  000270  EF3C  F001         	goto	u720
   716  000274                     u721:
   717  000274  EF3F  F001         	goto	l95
   718  000278                     u720:
   719  000278  807A               	bsf	122,0,c	;volatile
   720  00027A  EF40  F001         	goto	l96
   721  00027E                     l95:
   722  00027E  907A               	bcf	122,0,c	;volatile
   723  000280                     l96:
   724                           
   725                           ;LEDarray.c: 58:     if (number & 0b100000000) { LATBbits.LATB1=1;} else { LATBbits.LATB
      +                          1=0;}
   726  000280  A003               	btfss	(LEDarray_disp_bin@number+1)^0,0,c
   727  000282  EF45  F001         	goto	u731
   728  000286  EF47  F001         	goto	u730
   729  00028A                     u731:
   730  00028A  EF4A  F001         	goto	l97
   731  00028E                     u730:
   732  00028E  827A               	bsf	122,1,c	;volatile
   733  000290  EF4B  F001         	goto	l99
   734  000294                     l97:
   735  000294  927A               	bcf	122,1,c	;volatile
   736  000296                     l99:
   737  000296  0012               	return		;funcret
   738  000298                     __end_of_LEDarray_disp_bin:
   739                           	callstack 0
   740                           
   741 ;; *************** function _Interrupts_init *****************
   742 ;; Defined at:
   743 ;;		line 8 in file "interrupts.c"
   744 ;; Parameters:    Size  Location     Type
   745 ;;		None
   746 ;; Auto vars:     Size  Location     Type
   747 ;;		None
   748 ;; Return value:  Size  Location     Type
   749 ;;                  1    wreg      void 
   750 ;; Registers used:
   751 ;;		None
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   761 ;;Total ram usage:        0 bytes
   762 ;; Hardware stack levels used: 1
   763 ;; Hardware stack levels required when called: 1
   764 ;; This function calls:
   765 ;;		Nothing
   766 ;; This function is called by:
   767 ;;		_main
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771                           	psect	text4
   772  000328                     __ptext4:
   773                           	callstack 0
   774  000328                     _Interrupts_init:
   775                           	callstack 29
   776  000328                     
   777                           ;interrupts.c: 12:     INTCONbits.PEIE=1;
   778  000328  8CF2               	bsf	242,6,c	;volatile
   779                           
   780                           ;interrupts.c: 13:     PIE0bits.TMR0IE=1;
   781  00032A  010E               	movlb	14	; () banked
   782  00032C  8B29               	bsf	41,5,b	;volatile
   783                           
   784                           ;interrupts.c: 14:     PIE2bits.C1IE=1;
   785  00032E  812B               	bsf	43,0,b	;volatile
   786                           
   787                           ;interrupts.c: 15:     INTCONbits.GIE=1;
   788  000330  8EF2               	bsf	242,7,c	;volatile
   789  000332                     
   790                           ; BSR set to: 14
   791  000332  0012               	return		;funcret
   792  000334                     __end_of_Interrupts_init:
   793                           	callstack 0
   794                           
   795 ;; *************** function _ADC_init *****************
   796 ;; Defined at:
   797 ;;		line 9 in file "ADC.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;		None
   800 ;; Auto vars:     Size  Location     Type
   801 ;;		None
   802 ;; Return value:  Size  Location     Type
   803 ;;                  1    wreg      void 
   804 ;; Registers used:
   805 ;;		wreg, status,2
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   815 ;;Total ram usage:        0 bytes
   816 ;; Hardware stack levels used: 1
   817 ;; Hardware stack levels required when called: 1
   818 ;; This function calls:
   819 ;;		Nothing
   820 ;; This function is called by:
   821 ;;		_main
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           
   825                           	psect	text5
   826  00030E                     __ptext5:
   827                           	callstack 0
   828  00030E                     _ADC_init:
   829                           	callstack 29
   830  00030E                     
   831                           ;ADC.c: 11:     TRISAbits.TRISA3=1;
   832  00030E  8681               	bsf	129,3,c	;volatile
   833                           
   834                           ;ADC.c: 12:     ANSELAbits.ANSELA3=1;
   835  000310  010E               	movlb	14	; () banked
   836  000312  8792               	bsf	146,3,b	;volatile
   837                           
   838                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
   839  000314  010F               	movlb	15	; () banked
   840  000316  9958               	bcf	88,4,b	;volatile
   841  000318                     
   842                           ; BSR set to: 15
   843                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
   844  000318  0EFC               	movlw	-4
   845  00031A  1758               	andwf	88,f,b	;volatile
   846                           
   847                           ;ADC.c: 17:     ADPCH=0b11;
   848  00031C  0E03               	movlw	3
   849  00031E  6F5F               	movwf	95,b	;volatile
   850  000320                     
   851                           ; BSR set to: 15
   852                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
   853  000320  9460               	bcf	96,2,c	;volatile
   854  000322                     
   855                           ; BSR set to: 15
   856                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
   857  000322  8860               	bsf	96,4,c	;volatile
   858  000324                     
   859                           ; BSR set to: 15
   860                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
   861  000324  8E60               	bsf	96,7,c	;volatile
   862  000326                     
   863                           ; BSR set to: 15
   864  000326  0012               	return		;funcret
   865  000328                     __end_of_ADC_init:
   866                           	callstack 0
   867                           
   868 ;; *************** function _ADC_getval *****************
   869 ;; Defined at:
   870 ;;		line 23 in file "ADC.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;		None
   873 ;; Auto vars:     Size  Location     Type
   874 ;;  tmpval          2    3[COMRAM] unsigned int 
   875 ;; Return value:  Size  Location     Type
   876 ;;                  2    1[COMRAM] unsigned int 
   877 ;; Registers used:
   878 ;;		wreg, status,2, status,0
   879 ;; Tracked objects:
   880 ;;		On entry : 0/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   884 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   885 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   887 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   888 ;;Total ram usage:        4 bytes
   889 ;; Hardware stack levels used: 1
   890 ;; Hardware stack levels required when called: 1
   891 ;; This function calls:
   892 ;;		Nothing
   893 ;; This function is called by:
   894 ;;		_main
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898                           	psect	text6
   899  000298                     __ptext6:
   900                           	callstack 0
   901  000298                     _ADC_getval:
   902                           	callstack 29
   903  000298                     
   904                           ;ADC.c: 25:     unsigned int tmpval;;ADC.c: 27:     ADCON0bits.GO = 1;
   905  000298  8060               	bsf	96,0,c	;volatile
   906  00029A                     l18:
   907  00029A  B060               	btfsc	96,0,c	;volatile
   908  00029C  EF52  F001         	goto	u641
   909  0002A0  EF54  F001         	goto	u640
   910  0002A4                     u641:
   911  0002A4  EF4D  F001         	goto	l18
   912  0002A8                     u640:
   913  0002A8                     
   914                           ;ADC.c: 31:     tmpval = ADRESH;
   915  0002A8  CF64 F004          	movff	3940,ADC_getval@tmpval	;volatile
   916  0002AC  6A05               	clrf	(ADC_getval@tmpval+1)^0,c
   917  0002AE                     
   918                           ;ADC.c: 35:     tmpval = 255 - tmpval;
   919  0002AE  5004               	movf	ADC_getval@tmpval^0,w,c
   920  0002B0  08FF               	sublw	255
   921  0002B2  6E04               	movwf	ADC_getval@tmpval^0,c
   922  0002B4  5005               	movf	(ADC_getval@tmpval+1)^0,w,c
   923  0002B6  A0D8               	btfss	status,0,c
   924  0002B8  2AE8               	incf	wreg,f,c
   925  0002BA  0800               	sublw	0
   926  0002BC  6E05               	movwf	(ADC_getval@tmpval+1)^0,c
   927  0002BE                     
   928                           ;ADC.c: 37:     return tmpval;
   929  0002BE  C004  F002         	movff	ADC_getval@tmpval,?_ADC_getval
   930  0002C2  C005  F003         	movff	ADC_getval@tmpval+1,?_ADC_getval+1
   931  0002C6  0012               	return		;funcret
   932  0002C8                     __end_of_ADC_getval:
   933                           	callstack 0
   934                           
   935 ;; *************** function _HighISR *****************
   936 ;; Defined at:
   937 ;;		line 22 in file "interrupts.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;		None
   940 ;; Auto vars:     Size  Location     Type
   941 ;;		None
   942 ;; Return value:  Size  Location     Type
   943 ;;                  1    wreg      void 
   944 ;; Registers used:
   945 ;;		wreg, status,2, status,0
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   953 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   954 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   955 ;;Total ram usage:        1 bytes
   956 ;; Hardware stack levels used: 1
   957 ;; This function calls:
   958 ;;		Nothing
   959 ;; This function is called by:
   960 ;;		Interrupt level 2
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964                           	psect	intcode
   965  000008                     __pintcode:
   966                           	callstack 0
   967  000008                     _HighISR:
   968                           	callstack 29
   969                           
   970                           ;incstack = 0
   971  000008  8214               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   972  00000A                     
   973                           ;interrupts.c: 24:     if (PIR2bits.C1IF == 1){
   974  00000A  010E               	movlb	14	; () banked
   975  00000C  A135               	btfss	53,0,b	;volatile
   976  00000E  EF0B  F000         	goto	i2u58_41
   977  000012  EF0D  F000         	goto	i2u58_40
   978  000016                     i2u58_41:
   979  000016  EF21  F000         	goto	i2l1059
   980  00001A                     i2u58_40:
   981  00001A                     
   982                           ; BSR set to: 14
   983                           ;interrupts.c: 25:         LATHbits.LATH3 = !LATHbits.LATH3;
   984  00001A  A680               	btfss	128,3,c	;volatile
   985  00001C  EF12  F000         	goto	i2u59_41
   986  000020  EF16  F000         	goto	i2u59_40
   987  000024                     i2u59_41:
   988  000024  6A01               	clrf	??_HighISR^0,c
   989  000026  2A01               	incf	??_HighISR^0,f,c
   990  000028  EF17  F000         	goto	i2u60_48
   991  00002C                     i2u59_40:
   992  00002C  6A01               	clrf	??_HighISR^0,c
   993  00002E                     i2u60_48:
   994  00002E  4601               	rlncf	??_HighISR^0,f,c
   995  000030  4601               	rlncf	??_HighISR^0,f,c
   996  000032  4601               	rlncf	??_HighISR^0,f,c
   997  000034  5080               	movf	128,w,c	;volatile
   998  000036  1801               	xorwf	??_HighISR^0,w,c
   999  000038  0BF7               	andlw	-9
  1000  00003A  1801               	xorwf	??_HighISR^0,w,c
  1001  00003C  6E80               	movwf	128,c	;volatile
  1002  00003E                     
  1003                           ;interrupts.c: 26:         PIR2bits.C1IF=0;
  1004  00003E  010E               	movlb	14	; () banked
  1005  000040  9135               	bcf	53,0,b	;volatile
  1006  000042                     i2l1059:
  1007                           
  1008                           ; BSR set to: 14
  1009                           ;interrupts.c: 29:     if (PIR0bits.TMR0IF == 1){
  1010  000042  AB33               	btfss	51,5,b	;volatile
  1011  000044  EF26  F000         	goto	i2u61_41
  1012  000048  EF28  F000         	goto	i2u61_40
  1013  00004C                     i2u61_41:
  1014  00004C  EF3B  F000         	goto	i2l175
  1015  000050                     i2u61_40:
  1016  000050                     
  1017                           ; BSR set to: 14
  1018                           ;interrupts.c: 30:         LATDbits.LATD7 = !LATDbits.LATD7;
  1019  000050  AE7C               	btfss	124,7,c	;volatile
  1020  000052  EF2D  F000         	goto	i2u62_41
  1021  000056  EF31  F000         	goto	i2u62_40
  1022  00005A                     i2u62_41:
  1023  00005A  6A01               	clrf	??_HighISR^0,c
  1024  00005C  2A01               	incf	??_HighISR^0,f,c
  1025  00005E  EF32  F000         	goto	i2u63_48
  1026  000062                     i2u62_40:
  1027  000062  6A01               	clrf	??_HighISR^0,c
  1028  000064                     i2u63_48:
  1029  000064  3201               	rrcf	??_HighISR^0,f,c
  1030  000066  3201               	rrcf	??_HighISR^0,f,c
  1031  000068  507C               	movf	124,w,c	;volatile
  1032  00006A  1801               	xorwf	??_HighISR^0,w,c
  1033  00006C  0B7F               	andlw	-129
  1034  00006E  1801               	xorwf	??_HighISR^0,w,c
  1035  000070  6E7C               	movwf	124,c	;volatile
  1036  000072                     
  1037                           ;interrupts.c: 31:         PIR0bits.TMR0IF=0;
  1038  000072  010E               	movlb	14	; () banked
  1039  000074  9B33               	bcf	51,5,b	;volatile
  1040  000076                     i2l175:
  1041                           
  1042                           ; BSR set to: 14
  1043  000076  9214               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1044  000078  0011               	retfie		f
  1045  00007A                     __end_of_HighISR:
  1046                           	callstack 0
  1047  0000                     
  1048                           	psect	rparam
  1049  0000                     
  1050                           	psect	temp
  1051  000014                     btemp:
  1052                           	callstack 0
  1053  000014                     	ds	1
  1054  0000                     int$flags	set	btemp
  1055  0000                     wtemp8	set	btemp+1
  1056  0000                     ttemp5	set	btemp+1
  1057  0000                     ttemp6	set	btemp+4
  1058  0000                     ttemp7	set	btemp+8
  1059                           
  1060                           	psect	idloc
  1061                           
  1062                           ;Config register IDLOC0 @ 0x200000
  1063                           ;	unspecified, using default values
  1064  200000                     	org	2097152
  1065  200000  0FFF               	dw	4095
  1066                           
  1067                           ;Config register IDLOC1 @ 0x200002
  1068                           ;	unspecified, using default values
  1069  200002                     	org	2097154
  1070  200002  0FFF               	dw	4095
  1071                           
  1072                           ;Config register IDLOC2 @ 0x200004
  1073                           ;	unspecified, using default values
  1074  200004                     	org	2097156
  1075  200004  0FFF               	dw	4095
  1076                           
  1077                           ;Config register IDLOC3 @ 0x200006
  1078                           ;	unspecified, using default values
  1079  200006                     	org	2097158
  1080  200006  0FFF               	dw	4095
  1081                           
  1082                           ;Config register IDLOC4 @ 0x200008
  1083                           ;	unspecified, using default values
  1084  200008                     	org	2097160
  1085  200008  0FFF               	dw	4095
  1086                           
  1087                           ;Config register IDLOC5 @ 0x20000A
  1088                           ;	unspecified, using default values
  1089  20000A                     	org	2097162
  1090  20000A  0FFF               	dw	4095
  1091                           
  1092                           ;Config register IDLOC6 @ 0x20000C
  1093                           ;	unspecified, using default values
  1094  20000C                     	org	2097164
  1095  20000C  0FFF               	dw	4095
  1096                           
  1097                           ;Config register IDLOC7 @ 0x20000E
  1098                           ;	unspecified, using default values
  1099  20000E                     	org	2097166
  1100  20000E  0FFF               	dw	4095
  1101                           
  1102                           	psect	config
  1103                           
  1104                           ;Config register CONFIG1L @ 0x300000
  1105                           ;	External Oscillator mode Selection bits
  1106                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  1107                           ;	Power-up default value for COSC bits
  1108                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  1109  300000                     	org	3145728
  1110  300000  AA                 	db	170
  1111                           
  1112                           ;Config register CONFIG1H @ 0x300001
  1113                           ;	unspecified, using default values
  1114                           ;	Clock Out Enable bit
  1115                           ;	CLKOUTEN = 0x1, unprogrammed default
  1116                           ;	Clock Switch Enable bit
  1117                           ;	CSWEN = 0x1, unprogrammed default
  1118                           ;	Fail-Safe Clock Monitor Enable bit
  1119                           ;	FCMEN = 0x1, unprogrammed default
  1120  300001                     	org	3145729
  1121  300001  FF                 	db	255
  1122                           
  1123                           ;Config register CONFIG2L @ 0x300002
  1124                           ;	unspecified, using default values
  1125                           ;	Master Clear Enable bit
  1126                           ;	MCLRE = 0x1, unprogrammed default
  1127                           ;	Power-up Timer Enable bit
  1128                           ;	PWRTE = 0x1, unprogrammed default
  1129                           ;	Low-power BOR enable bit
  1130                           ;	LPBOREN = 0x1, unprogrammed default
  1131                           ;	Brown-out Reset Enable bits
  1132                           ;	BOREN = 0x3, unprogrammed default
  1133  300002                     	org	3145730
  1134  300002  FF                 	db	255
  1135                           
  1136                           ;Config register CONFIG2H @ 0x300003
  1137                           ;	unspecified, using default values
  1138                           ;	Brown Out Reset Voltage selection bits
  1139                           ;	BORV = 0x3, unprogrammed default
  1140                           ;	ZCD Disable bit
  1141                           ;	ZCD = 0x1, unprogrammed default
  1142                           ;	PPSLOCK bit One-Way Set Enable bit
  1143                           ;	PPS1WAY = 0x1, unprogrammed default
  1144                           ;	Stack Full/Underflow Reset Enable bit
  1145                           ;	STVREN = 0x1, unprogrammed default
  1146                           ;	Debugger Enable bit
  1147                           ;	DEBUG = 0x1, unprogrammed default
  1148                           ;	Extended Instruction Set Enable bit
  1149                           ;	XINST = 0x1, unprogrammed default
  1150  300003                     	org	3145731
  1151  300003  FF                 	db	255
  1152                           
  1153                           ;Config register CONFIG3L @ 0x300004
  1154                           ;	WDT Period Select bits
  1155                           ;	WDTCPS = 0x1F, unprogrammed default
  1156                           ;	WDT operating mode
  1157                           ;	WDTE = OFF, WDT Disabled
  1158  300004                     	org	3145732
  1159  300004  9F                 	db	159
  1160                           
  1161                           ;Config register CONFIG3H @ 0x300005
  1162                           ;	unspecified, using default values
  1163                           ;	WDT Window Select bits
  1164                           ;	WDTCWS = 0x7, unprogrammed default
  1165                           ;	WDT input clock selector
  1166                           ;	WDTCCS = 0x7, unprogrammed default
  1167  300005                     	org	3145733
  1168  300005  FF                 	db	255
  1169                           
  1170                           ;Config register CONFIG4L @ 0x300006
  1171                           ;	unspecified, using default values
  1172                           ;	Write Protection Block 0
  1173                           ;	WRT0 = 0x1, unprogrammed default
  1174                           ;	Write Protection Block 1
  1175                           ;	WRT1 = 0x1, unprogrammed default
  1176                           ;	Write Protection Block 2
  1177                           ;	WRT2 = 0x1, unprogrammed default
  1178                           ;	Write Protection Block 3
  1179                           ;	WRT3 = 0x1, unprogrammed default
  1180                           ;	Write Protection Block 3
  1181                           ;	WRT4 = 0x1, unprogrammed default
  1182                           ;	Write Protection Block 3
  1183                           ;	WRT5 = 0x1, unprogrammed default
  1184                           ;	Write Protection Block 3
  1185                           ;	WRT6 = 0x1, unprogrammed default
  1186                           ;	Write Protection Block 3
  1187                           ;	WRT7 = 0x1, unprogrammed default
  1188  300006                     	org	3145734
  1189  300006  FF                 	db	255
  1190                           
  1191                           ;Config register CONFIG4H @ 0x300007
  1192                           ;	unspecified, using default values
  1193                           ;	Configuration Register Write Protection bit
  1194                           ;	WRTC = 0x1, unprogrammed default
  1195                           ;	Boot Block Write Protection bit
  1196                           ;	WRTB = 0x1, unprogrammed default
  1197                           ;	Data EEPROM Write Protection bit
  1198                           ;	WRTD = 0x1, unprogrammed default
  1199                           ;	Scanner Enable bit
  1200                           ;	SCANE = 0x1, unprogrammed default
  1201                           ;	Low Voltage Programming Enable bit
  1202                           ;	LVP = 0x1, unprogrammed default
  1203  300007                     	org	3145735
  1204  300007  FF                 	db	255
  1205                           
  1206                           ;Config register CONFIG5L @ 0x300008
  1207                           ;	unspecified, using default values
  1208                           ;	UserNVM Program Memory Code Protection bit
  1209                           ;	CP = 0x1, unprogrammed default
  1210                           ;	DataNVM Memory Code Protection bit
  1211                           ;	CPD = 0x1, unprogrammed default
  1212  300008                     	org	3145736
  1213  300008  FF                 	db	255
  1214                           
  1215                           ;Config register CONFIG5H @ 0x300009
  1216                           ;	unspecified, using default values
  1217  300009                     	org	3145737
  1218  300009  FF                 	db	255
  1219                           
  1220                           ;Config register CONFIG6L @ 0x30000A
  1221                           ;	unspecified, using default values
  1222                           ;	Table Read Protection Block 0
  1223                           ;	EBTR0 = 0x1, unprogrammed default
  1224                           ;	Table Read Protection Block 1
  1225                           ;	EBTR1 = 0x1, unprogrammed default
  1226                           ;	Table Read Protection Block 2
  1227                           ;	EBTR2 = 0x1, unprogrammed default
  1228                           ;	Table Read Protection Block 3
  1229                           ;	EBTR3 = 0x1, unprogrammed default
  1230                           ;	Table Read Protection Block 4
  1231                           ;	EBTR4 = 0x1, unprogrammed default
  1232                           ;	Table Read Protection Block 5
  1233                           ;	EBTR5 = 0x1, unprogrammed default
  1234                           ;	Table Read Protection Block 6
  1235                           ;	EBTR6 = 0x1, unprogrammed default
  1236                           ;	Table Read Protection Block 7
  1237                           ;	EBTR7 = 0x1, unprogrammed default
  1238  30000A                     	org	3145738
  1239  30000A  FF                 	db	255
  1240                           
  1241                           ;Config register CONFIG6H @ 0x30000B
  1242                           ;	unspecified, using default values
  1243                           ;	Boot Block Table Read Protection bit
  1244                           ;	EBTRB = 0x1, unprogrammed default
  1245  30000B                     	org	3145739
  1246  30000B  FF                 	db	255
  1247                           tosu	equ	0xFFF
  1248                           tosh	equ	0xFFE
  1249                           tosl	equ	0xFFD
  1250                           stkptr	equ	0xFFC
  1251                           pclatu	equ	0xFFB
  1252                           pclath	equ	0xFFA
  1253                           pcl	equ	0xFF9
  1254                           tblptru	equ	0xFF8
  1255                           tblptrh	equ	0xFF7
  1256                           tblptrl	equ	0xFF6
  1257                           tablat	equ	0xFF5
  1258                           prodh	equ	0xFF4
  1259                           prodl	equ	0xFF3
  1260                           indf0	equ	0xFEF
  1261                           postinc0	equ	0xFEE
  1262                           postdec0	equ	0xFED
  1263                           preinc0	equ	0xFEC
  1264                           plusw0	equ	0xFEB
  1265                           fsr0h	equ	0xFEA
  1266                           fsr0l	equ	0xFE9
  1267                           wreg	equ	0xFE8
  1268                           indf1	equ	0xFE7
  1269                           postinc1	equ	0xFE6
  1270                           postdec1	equ	0xFE5
  1271                           preinc1	equ	0xFE4
  1272                           plusw1	equ	0xFE3
  1273                           fsr1h	equ	0xFE2
  1274                           fsr1l	equ	0xFE1
  1275                           bsr	equ	0xFE0
  1276                           indf2	equ	0xFDF
  1277                           postinc2	equ	0xFDE
  1278                           postdec2	equ	0xFDD
  1279                           preinc2	equ	0xFDC
  1280                           plusw2	equ	0xFDB
  1281                           fsr2h	equ	0xFDA
  1282                           fsr2l	equ	0xFD9
  1283                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     19      19
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_ADC_getval

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0     760
                                              5 COMRAM    14    14      0
                         _ADC_getval
                           _ADC_init
                    _Interrupts_init
                  _LEDarray_disp_bin
                      _LEDarray_init
                        _Timer0_init
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     502
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_getval                                           4     2      2      46
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _HighISR                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_getval
   _ADC_init
   _Interrupts_init
   _LEDarray_disp_bin
   _LEDarray_init
   _Timer0_init

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     13      13       1       20.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BIGRAM             DE9      0       0      33        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Nov 01 21:46:09 2021

                        l20 02A8                          l21 02C6                          l15 0326  
                        l18 029A                          l47 0112                          l81 01E4  
                        l49 010C                          l90 023E                          l82 01E6  
                        l91 0252                          l83 01FA                          l92 0254  
                        l84 01FC                          l93 0268                          l85 0210  
                        l94 026A                          l86 0212                          l78 02EC  
                        l95 027E                          l87 0226                          l96 0280  
                        l88 0228                          l97 0294                          l89 023C  
                        l99 0296           ??_Interrupts_init 0002                         l148 030C  
                       l168 0332                         l851 030E                         l853 0318  
                       l855 0320                         l871 02EE                         l857 0322  
                       l873 02F6                         l859 0324                         l875 0300  
                       l869 02C8                         l877 030A                         l879 0328  
                       u700 024C                         u701 0248                         u710 0262  
                       u711 025E                         u640 02A8                         u720 0278  
                       u800 0158                         u641 02A4                         u721 0274  
                       u801 0150                         u730 028E                         u650 01DE  
                       u810 0174                         u731 028A                         u651 01DA  
                       u811 0170                         u660 01F4                         u820 0194  
                       u740 00E0                         u661 01F0                         u821 0190  
                       u741 00DC                         u670 020A                         u830 01B4  
                       u750 00F6                         u671 0206                         u831 01B0  
                       u751 00F2                         u680 0220                         u808 015A  
                       u760 010C                         u681 021C                         u761 0108  
                       u690 0236                         u770 0124                         u691 0232  
                       u771 011E                         u780 0126                         u790 0142  
                       u791 013E                         wreg 000FE8         __size_of_ADC_getval 0030  
        main@light_strength 000A                        l1101 0096                        l1111 00B6  
                      l1103 0096                        l1121 0142                        l1113 00BE  
                      l1105 009E                        l1131 0180                        l1123 0146  
                      l1115 00E0                        l1107 00A6                        l1141 01BC  
                      l1133 0194                        l1125 0160                        l1117 00F6  
                      l1109 00AE                        l1135 0198                        l1127 0174  
                      l1119 0114                        l1065 0298                        l1081 0220  
                      l1073 01D0                        l1137 01A0                        l1129 0178  
                      l1067 02AE                        l1091 028E                        l1083 0236  
                      l1075 01DE                        l1139 01B4                        l1069 02BE  
                      l1085 024C                        l1077 01F4                        l1093 007E  
                      l1087 0262                        l1079 020A                        l1095 0086  
                      l1089 0278                        l1097 008A                        l1099 008E  
               main@minutes 0010                        _main 007E                        btemp 0014  
                      start 007A            __end_of_ADC_init 0328             __end_of_HighISR 007A  
              ___param_bank 000000                       ?_main 0001                       _ADPCH 000F5F  
                     i2l175 0076                       _TMR0H 000FD4                       _TMR0L 000FD3  
                     ttemp5 0015                       ttemp6 0018                       ttemp7 001C  
                     status 000FD8                       wtemp8 0015             __initialization 0334  
              __end_of_main 01D0                      ??_main 0006               __activetblptr 000000  
    __size_of_LEDarray_init 0026                      _ADRESH 000F64                      i2l1061 0050  
                    i2l1053 000A                      i2l1063 0072                      i2l1055 001A  
                    i2l1057 003E                      i2l1059 0042                   ??_HighISR 0001  
         _LEDarray_disp_bin 01D0          ?_LEDarray_disp_bin 0002                ??_ADC_getval 0004  
             ??_Timer0_init 0002         ??_LEDarray_disp_bin 0004                      isa$std 000001  
                 ?_ADC_init 0001          __end_of_ADC_getval 02C8   __end_of_LEDarray_disp_bin 0298  
                __accesstop 0060     __end_of__initialization 0334               ___rparam_used 000001  
             _LEDarray_init 02C8             _Interrupts_init 0328              __pcstackCOMRAM 0001  
       __end_of_Timer0_init 030E                  ??_ADC_init 0002              ?_LEDarray_init 0001  
                   i2u61_40 0050                     i2u60_48 002E                     i2u61_41 004C  
                   i2u62_40 0062                     i2u62_41 005A                     i2u63_48 0064  
                   i2u58_40 001A                     i2u58_41 0016                     i2u59_40 002C  
                   i2u59_41 0024  __size_of_LEDarray_disp_bin 00C8     __end_of_Interrupts_init 0334  
                   _HighISR 0008                   _ADREFbits 000F58                     __Hparam 0000  
                   __Lparam 0000                 _Timer0_init 02EE                     __pcinit 0334  
                   __ramtop 0E00                     __ptext0 007E                     __ptext1 02EE  
                   __ptext2 02C8                     __ptext3 01D0                     __ptext4 0328  
                   __ptext5 030E                     __ptext6 0298        end_of_initialization 0334  
          ADC_getval@tmpval 0004             ??_LEDarray_init 0002                   _TRISAbits 000F81  
                 _TRISBbits 000F82                   _TRISDbits 000F84                   _TRISFbits 000F86  
                 _TRISGbits 000F87                   _TRISHbits 000F88           __size_of_ADC_init 001A  
          ?_Interrupts_init 0001         start_initialization 0334                    ?_HighISR 0001  
              ?_Timer0_init 0001                   __pintcode 0008                    _ADC_init 030E  
                  _LATAbits 000F79                    _LATBbits 000F7A                    _LATDbits 000F7C  
                  _LATFbits 000F7E                    _LATGbits 000F7F                    _LATHbits 000F80  
                  _PIE0bits 000E29                    _PIE2bits 000E2B                    _PIR0bits 000E33  
                  _PIR2bits 000E35                  _ADCON0bits 000F60            __size_of_HighISR 0072  
     __end_of_LEDarray_init 02EE                    __Hrparam 0000                  _ADC_getval 0298  
                  __Lrparam 0000                  _ANSELAbits 000E92                  _ANSELFbits 000EB4  
                _T0CON0bits 000FD5                  _T0CON1bits 000FD6     LEDarray_disp_bin@number 0002  
             __size_of_main 0152                    isa$xinst 000000    __size_of_Interrupts_init 000C  
                  int$flags 0014        __size_of_Timer0_init 0020                    main@hour 0012  
                  main@secs 000E                    main@temp 000C                  _INTCONbits 000FF2  
        main@set_brightness 0008                    intlevel2 0000                 ?_ADC_getval 0002  
