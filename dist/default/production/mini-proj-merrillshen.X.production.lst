

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Nov 05 14:12:54 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    47                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    49  0000                     
    50                           ; Version 2.20
    51                           ; Generated 05/05/2020 GMT
    52                           ; 
    53                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F67K40 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     
    85                           	psect	idataBANK0
    86  002670                     __pidataBANK0:
    87                           	callstack 0
    88                           
    89                           ;initializer for main@F14546
    90  002670  001F               	dw	31
    91  002672  001C               	dw	28
    92  002674  001F               	dw	31
    93  002676  001E               	dw	30
    94  002678  001F               	dw	31
    95  00267A  001E               	dw	30
    96  00267C  001F               	dw	31
    97  00267E  001F               	dw	31
    98  002680  001E               	dw	30
    99  002682  001F               	dw	31
   100  002684  001E               	dw	30
   101  002686  001F               	dw	31
   102  0000                     _PIR0bits	set	3635
   103  0000                     _PIR2bits	set	3637
   104  0000                     _PIE2bits	set	3627
   105  0000                     _PIE0bits	set	3625
   106  0000                     _ANSELFbits	set	3764
   107  0000                     _ANSELAbits	set	3730
   108  0000                     _ADPCH	set	3935
   109  0000                     _ADREFbits	set	3928
   110  0000                     _TRISEbits	set	3973
   111  0000                     _TRISCbits	set	3971
   112  0000                     _LATEbits	set	3965
   113  0000                     _LATCbits	set	3963
   114  0000                     _T0CON0bits	set	4053
   115  0000                     _T0CON1bits	set	4054
   116  0000                     _TMR0L	set	4051
   117  0000                     _TMR0H	set	4052
   118  0000                     _INTCONbits	set	4082
   119  0000                     _TRISBbits	set	3970
   120  0000                     _LATBbits	set	3962
   121  0000                     _TRISFbits	set	3974
   122  0000                     _LATFbits	set	3966
   123  0000                     _LATAbits	set	3961
   124  0000                     _TRISGbits	set	3975
   125  0000                     _LATGbits	set	3967
   126  0000                     _TRISDbits	set	3972
   127  0000                     _LATDbits	set	3964
   128  0000                     _TRISHbits	set	3976
   129  0000                     _LATHbits	set	3968
   130  0000                     _ADRESH	set	3940
   131  0000                     _ADCON0bits	set	3936
   132  0000                     _TRISAbits	set	3969
   133                           
   134                           	psect	smallconst
   135  000E00                     __psmallconst:
   136                           	callstack 0
   137  000E00  00                 	db	0
   138  000E01                     
   139                           ; BSR set to: 14
   140  000E01  56                 	db	86	;'V'
   141  000E02  6F                 	db	111	;'o'
   142  000E03  6C                 	db	108	;'l'
   143  000E04  74                 	db	116	;'t'
   144  000E05  61                 	db	97	;'a'
   145  000E06  67                 	db	103	;'g'
   146  000E07  65                 	db	101	;'e'
   147  000E08  3A                 	db	58	;':'
   148  000E09  20                 	db	32
   149  000E0A  25                 	db	37
   150  000E0B  64                 	db	100	;'d'
   151  000E0C  2E                 	db	46
   152  000E0D  25                 	db	37
   153  000E0E  30                 	db	48	;'0'
   154  000E0F  32                 	db	50	;'2'
   155  000E10  64                 	db	100	;'d'
   156  000E11  56                 	db	86	;'V'
   157  000E12  00                 	db	0
   158  000E13                     STR_1:
   159                           
   160                           ; BSR set to: 14
   161  000E13  25                 	db	37
   162  000E14  64                 	db	100	;'d'
   163  000E15  3A                 	db	58	;':'
   164  000E16  25                 	db	37
   165  000E17  64                 	db	100	;'d'
   166  000E18  20                 	db	32
   167  000E19  25                 	db	37
   168  000E1A  64                 	db	100	;'d'
   169  000E1B  2D                 	db	45
   170  000E1C  25                 	db	37
   171  000E1D  64                 	db	100	;'d'
   172  000E1E  2D                 	db	45
   173  000E1F  25                 	db	37
   174  000E20  64                 	db	100	;'d'
   175  000E21  00                 	db	0
   176  000E22  00                 	db	0	; dummy byte at the end
   177  0000                     
   178                           ; #config settings
   179                           
   180                           	psect	cinit
   181  00241E                     __pcinit:
   182                           	callstack 0
   183  00241E                     start_initialization:
   184                           	callstack 0
   185  00241E                     __initialization:
   186                           	callstack 0
   187                           
   188                           ; Initialize objects allocated to BANK0 (24 bytes)
   189                           ; load TBLPTR registers with __pidataBANK0
   190  00241E  0E70               	movlw	low __pidataBANK0
   191  002420  6EF6               	movwf	tblptrl,c
   192  002422  0E26               	movlw	high __pidataBANK0
   193  002424  6EF7               	movwf	tblptrh,c
   194  002426  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   195  002428  6EF8               	movwf	tblptru,c
   196  00242A  EE00  F0DB         	lfsr	0,__pdataBANK0
   197  00242E  EE10 F018          	lfsr	1,24
   198  002432                     copy_data0:
   199  002432  0009               	tblrd		*+
   200  002434  CFF5 FFEE          	movff	tablat,postinc0
   201  002438  50E5               	movf	postdec1,w,c
   202  00243A  50E1               	movf	fsr1l,w,c
   203  00243C  E1FA               	bnz	copy_data0
   204                           
   205                           ; Clear objects allocated to BANK1 (32 bytes)
   206  00243E  EE01  F000         	lfsr	0,__pbssBANK1
   207  002442  0E20               	movlw	32
   208  002444                     clear_0:
   209  002444  6AEE               	clrf	postinc0,c
   210  002446  06E8               	decf	wreg,f,c
   211  002448  E1FD               	bnz	clear_0
   212                           
   213                           ; Clear objects allocated to BANK0 (10 bytes)
   214  00244A  EE00  F0F3         	lfsr	0,__pbssBANK0
   215  00244E  0E0A               	movlw	10
   216  002450                     clear_1:
   217  002450  6AEE               	clrf	postinc0,c
   218  002452  06E8               	decf	wreg,f,c
   219  002454  E1FD               	bnz	clear_1
   220                           
   221                           ; Clear objects allocated to COMRAM (2 bytes)
   222  002456  6A5A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   223  002458  6A59               	clrf	__pbssCOMRAM& (0+255),c
   224  00245A                     end_of_initialization:
   225                           	callstack 0
   226  00245A                     __end_of__initialization:
   227                           	callstack 0
   228  00245A  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   229  00245C  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   230  00245E  0100               	movlb	0
   231  002460  EF12  F007         	goto	_main	;jump to C main() function
   232                           
   233                           	psect	bssCOMRAM
   234  000059                     __pbssCOMRAM:
   235                           	callstack 0
   236  000059                     _flags:
   237                           	callstack 0
   238  000059                     	ds	2
   239                           
   240                           	psect	bssBANK0
   241  0000F3                     __pbssBANK0:
   242                           	callstack 0
   243  0000F3                     	ds	4
   244  0000F7                     _nout:
   245                           	callstack 0
   246  0000F7                     	ds	2
   247  0000F9                     _width:
   248                           	callstack 0
   249  0000F9                     	ds	2
   250  0000FB                     _prec:
   251                           	callstack 0
   252  0000FB                     	ds	2
   253                           
   254                           	psect	dataBANK0
   255  0000DB                     __pdataBANK0:
   256                           	callstack 0
   257  0000DB                     main@F14546:
   258                           	callstack 0
   259  0000DB                     	ds	24
   260                           
   261                           	psect	bssBANK1
   262  000100                     __pbssBANK1:
   263                           	callstack 0
   264  000100                     _dbuf:
   265                           	callstack 0
   266  000100                     	ds	32
   267                           
   268                           	psect	cstackBANK0
   269  000060                     __pcstackBANK0:
   270                           	callstack 0
   271  000060                     ?_vfprintf:
   272                           	callstack 0
   273  000060                     vfprintf@fp:
   274                           	callstack 0
   275                           
   276                           ; 2 bytes @ 0x0
   277  000060                     	ds	2
   278  000062                     vfprintf@fmt:
   279                           	callstack 0
   280                           
   281                           ; 2 bytes @ 0x2
   282  000062                     	ds	2
   283  000064                     vfprintf@ap:
   284                           	callstack 0
   285                           
   286                           ; 2 bytes @ 0x4
   287  000064                     	ds	2
   288  000066                     ?_sprintf:
   289                           	callstack 0
   290  000066                     sprintf@s:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0x6
   294  000066                     	ds	2
   295  000068                     sprintf@fmt:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0x8
   299  000068                     	ds	12
   300  000074                     sprintf@ap:
   301                           	callstack 0
   302                           
   303                           ; 2 bytes @ 0x14
   304  000074                     	ds	2
   305  000076                     sprintf@f:
   306                           	callstack 0
   307                           
   308                           ; 6 bytes @ 0x16
   309  000076                     	ds	6
   310  00007C                     ??_main:
   311                           
   312                           ; 1 bytes @ 0x1C
   313  00007C                     	ds	8
   314  000084                     main@buf:
   315                           	callstack 0
   316                           
   317                           ; 25 bytes @ 0x24
   318  000084                     	ds	25
   319  00009D                     main@monthdays:
   320                           	callstack 0
   321                           
   322                           ; 24 bytes @ 0x3D
   323  00009D                     	ds	24
   324  0000B5                     main@midmin:
   325                           	callstack 0
   326                           
   327                           ; 2 bytes @ 0x55
   328  0000B5                     	ds	2
   329  0000B7                     main@midhour:
   330                           	callstack 0
   331                           
   332                           ; 2 bytes @ 0x57
   333  0000B7                     	ds	2
   334  0000B9                     main@diff:
   335                           	callstack 0
   336                           
   337                           ; 2 bytes @ 0x59
   338  0000B9                     	ds	2
   339  0000BB                     main@temp:
   340                           	callstack 0
   341                           
   342                           ; 2 bytes @ 0x5B
   343  0000BB                     	ds	2
   344  0000BD                     main@leap_year:
   345                           	callstack 0
   346                           
   347                           ; 2 bytes @ 0x5D
   348  0000BD                     	ds	2
   349  0000BF                     main@secs:
   350                           	callstack 0
   351                           
   352                           ; 2 bytes @ 0x5F
   353  0000BF                     	ds	2
   354  0000C1                     main@curtime:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0x61
   358  0000C1                     	ds	2
   359  0000C3                     main@daylight_flag:
   360                           	callstack 0
   361                           
   362                           ; 2 bytes @ 0x63
   363  0000C3                     	ds	2
   364  0000C5                     main@day_of_week:
   365                           	callstack 0
   366                           
   367                           ; 2 bytes @ 0x65
   368  0000C5                     	ds	2
   369  0000C7                     main@year:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0x67
   373  0000C7                     	ds	2
   374  0000C9                     main@set_brightness:
   375                           	callstack 0
   376                           
   377                           ; 2 bytes @ 0x69
   378  0000C9                     	ds	2
   379  0000CB                     main@midtime:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0x6B
   383  0000CB                     	ds	2
   384  0000CD                     main@light_strength:
   385                           	callstack 0
   386                           
   387                           ; 2 bytes @ 0x6D
   388  0000CD                     	ds	2
   389  0000CF                     main@dawn_dusk:
   390                           	callstack 0
   391                           
   392                           ; 4 bytes @ 0x6F
   393  0000CF                     	ds	4
   394  0000D3                     main@daydate:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x73
   398  0000D3                     	ds	2
   399  0000D5                     main@minutes:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0x75
   403  0000D5                     	ds	2
   404  0000D7                     main@month:
   405                           	callstack 0
   406                           
   407                           ; 2 bytes @ 0x77
   408  0000D7                     	ds	2
   409  0000D9                     main@hour:
   410                           	callstack 0
   411                           
   412                           ; 2 bytes @ 0x79
   413  0000D9                     	ds	2
   414                           
   415                           	psect	cstackCOMRAM
   416  000001                     __pcstackCOMRAM:
   417                           	callstack 0
   418  000001                     ??_HighISR:
   419  000001                     
   420                           ; 1 bytes @ 0x0
   421  000001                     	ds	1
   422  000002                     ?_strlen:
   423                           	callstack 0
   424  000002                     ?_isdigit:
   425                           	callstack 0
   426  000002                     ?_isspace:
   427                           	callstack 0
   428  000002                     ?_ADC_getval:
   429                           	callstack 0
   430  000002                     ?___wmul:
   431                           	callstack 0
   432  000002                     ?___lwdiv:
   433                           	callstack 0
   434  000002                     ?___aodiv:
   435                           	callstack 0
   436  000002                     ?___aomod:
   437                           	callstack 0
   438  000002                     LCD_sendnibble@number:
   439                           	callstack 0
   440  000002                     LEDarray_disp_bin@number:
   441                           	callstack 0
   442  000002                     ___wmul@multiplier:
   443                           	callstack 0
   444  000002                     ___lwdiv@dividend:
   445                           	callstack 0
   446  000002                     isdigit@c:
   447                           	callstack 0
   448  000002                     isspace@c:
   449                           	callstack 0
   450  000002                     fputc@c:
   451                           	callstack 0
   452  000002                     strlen@s:
   453                           	callstack 0
   454  000002                     ___aodiv@dividend:
   455                           	callstack 0
   456  000002                     ___aomod@dividend:
   457                           	callstack 0
   458                           
   459                           ; 8 bytes @ 0x1
   460  000002                     	ds	1
   461  000003                     LCD_sendbyte@type:
   462                           	callstack 0
   463                           
   464                           ; 1 bytes @ 0x2
   465  000003                     	ds	1
   466  000004                     ??_isdigit:
   467  000004                     ??_isspace:
   468  000004                     LCD_sendbyte@MSB:
   469                           	callstack 0
   470  000004                     ADC_getval@tmpval:
   471                           	callstack 0
   472  000004                     ___wmul@multiplicand:
   473                           	callstack 0
   474  000004                     ___lwdiv@divisor:
   475                           	callstack 0
   476  000004                     fputc@fp:
   477                           	callstack 0
   478  000004                     strlen@a:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x3
   482  000004                     	ds	1
   483  000005                     LCD_sendbyte@LSB:
   484                           	callstack 0
   485                           
   486                           ; 1 bytes @ 0x4
   487  000005                     	ds	1
   488  000006                     ??_fputc:
   489  000006                     LCD_sendbyte@Byte:
   490                           	callstack 0
   491  000006                     ___wmul@product:
   492                           	callstack 0
   493  000006                     ___lwdiv@quotient:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x5
   497  000006                     	ds	1
   498  000007                     ??_LCD_Init:
   499  000007                     LCD_sendstring@string:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x6
   503  000007                     	ds	1
   504  000008                     ___lwdiv@counter:
   505                           	callstack 0
   506  000008                     _isspace$1802:
   507                           	callstack 0
   508                           
   509                           ; 1 bytes @ 0x7
   510  000008                     	ds	1
   511  000009                     ?_atoi:
   512                           	callstack 0
   513  000009                     atoi@s:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x8
   517  000009                     	ds	1
   518  00000A                     ___aodiv@divisor:
   519                           	callstack 0
   520  00000A                     ___aomod@divisor:
   521                           	callstack 0
   522                           
   523                           ; 8 bytes @ 0x9
   524  00000A                     	ds	1
   525  00000B                     ??_atoi:
   526  00000B                     fputs@s:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0xA
   530  00000B                     	ds	2
   531  00000D                     fputs@fp:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0xC
   535  00000D                     	ds	2
   536  00000F                     fputs@c:
   537                           	callstack 0
   538  00000F                     atoi@neg:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0xE
   542  00000F                     	ds	1
   543  000010                     fputs@i:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0xF
   547  000010                     	ds	1
   548  000011                     _atoi$1784:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x10
   552  000011                     	ds	1
   553  000012                     ?_pad:
   554                           	callstack 0
   555  000012                     ___aodiv@counter:
   556                           	callstack 0
   557  000012                     ___aomod@counter:
   558                           	callstack 0
   559  000012                     pad@fp:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x11
   563  000012                     	ds	1
   564  000013                     ___aodiv@sign:
   565                           	callstack 0
   566  000013                     ___aomod@sign:
   567                           	callstack 0
   568  000013                     _atoi$1786:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x12
   572  000013                     	ds	1
   573  000014                     ?_abs:
   574                           	callstack 0
   575  000014                     pad@buf:
   576                           	callstack 0
   577  000014                     abs@a:
   578                           	callstack 0
   579  000014                     ___aodiv@quotient:
   580                           	callstack 0
   581                           
   582                           ; 8 bytes @ 0x13
   583  000014                     	ds	1
   584  000015                     _atoi$1785:
   585                           	callstack 0
   586                           
   587                           ; 1 bytes @ 0x14
   588  000015                     	ds	1
   589  000016                     ??_abs:
   590  000016                     pad@p:
   591                           	callstack 0
   592  000016                     atoi@n:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x15
   596  000016                     	ds	2
   597  000018                     ??_pad:
   598                           
   599                           ; 1 bytes @ 0x17
   600  000018                     	ds	1
   601  000019                     pad@i:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0x18
   605  000019                     	ds	2
   606  00001B                     pad@w:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x1A
   610  00001B                     	ds	2
   611  00001D                     ?_dtoa:
   612                           	callstack 0
   613  00001D                     dtoa@fp:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x1C
   617  00001D                     	ds	2
   618  00001F                     dtoa@d:
   619                           	callstack 0
   620                           
   621                           ; 8 bytes @ 0x1E
   622  00001F                     	ds	8
   623  000027                     ??_dtoa:
   624                           
   625                           ; 1 bytes @ 0x26
   626  000027                     	ds	8
   627  00002F                     _dtoa$1749:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x2E
   631  00002F                     	ds	2
   632  000031                     dtoa@p:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x30
   636  000031                     	ds	2
   637  000033                     dtoa@w:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x32
   641  000033                     	ds	2
   642  000035                     dtoa@s:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x34
   646  000035                     	ds	2
   647  000037                     dtoa@n:
   648                           	callstack 0
   649                           
   650                           ; 8 bytes @ 0x36
   651  000037                     	ds	8
   652  00003F                     dtoa@i:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x3E
   656  00003F                     	ds	2
   657  000041                     ?_vfpfcnvrt:
   658                           	callstack 0
   659  000041                     vfpfcnvrt@fp:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x40
   663  000041                     	ds	2
   664  000043                     vfpfcnvrt@fmt:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x42
   668  000043                     	ds	2
   669  000045                     vfpfcnvrt@ap:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x44
   673  000045                     	ds	2
   674  000047                     ??_vfpfcnvrt:
   675                           
   676                           ; 1 bytes @ 0x46
   677  000047                     	ds	4
   678  00004B                     vfpfcnvrt@ll:
   679                           	callstack 0
   680                           
   681                           ; 8 bytes @ 0x4A
   682  00004B                     	ds	8
   683  000053                     vfpfcnvrt@done:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x52
   687  000053                     	ds	2
   688  000055                     _vfpfcnvrt$1764:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x54
   692  000055                     	ds	2
   693  000057                     vfprintf@cfmt:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0x56
   697  000057                     	ds	2
   698  000059                     
   699                           ; 1 bytes @ 0x58
   700 ;;
   701 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   702 ;;
   703 ;; *************** function _main *****************
   704 ;; Defined at:
   705 ;;		line 15 in file "main.c"
   706 ;; Parameters:    Size  Location     Type
   707 ;;		None
   708 ;; Auto vars:     Size  Location     Type
   709 ;;  midtime         2  107[BANK0 ] unsigned int 
   710 ;;  curtime         2   97[BANK0 ] unsigned int 
   711 ;;  diff            2   89[BANK0 ] int 
   712 ;;  midhour         2   87[BANK0 ] unsigned int 
   713 ;;  midmin          2   85[BANK0 ] unsigned int 
   714 ;;  buf            25   36[BANK0 ] unsigned char [25]
   715 ;;  monthdays      24   61[BANK0 ] unsigned int [12]
   716 ;;  dawn_dusk       4  111[BANK0 ] unsigned int [2]
   717 ;;  hour            2  121[BANK0 ] unsigned int 
   718 ;;  month           2  119[BANK0 ] unsigned int 
   719 ;;  minutes         2  117[BANK0 ] int 
   720 ;;  daydate         2  115[BANK0 ] unsigned int 
   721 ;;  light_streng    2  109[BANK0 ] unsigned int 
   722 ;;  set_brightne    2  105[BANK0 ] unsigned int 
   723 ;;  year            2  103[BANK0 ] unsigned int 
   724 ;;  day_of_week     2  101[BANK0 ] unsigned int 
   725 ;;  daylight_fla    2   99[BANK0 ] unsigned int 
   726 ;;  secs            2   95[BANK0 ] unsigned int 
   727 ;;  leap_year       2   93[BANK0 ] unsigned int 
   728 ;;  temp            2   91[BANK0 ] unsigned int 
   729 ;; Return value:  Size  Location     Type
   730 ;;                  1    wreg      void 
   731 ;; Registers used:
   732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   733 ;; Tracked objects:
   734 ;;		On entry : 0/0
   735 ;;		On exit  : 0/0
   736 ;;		Unchanged: 0/0
   737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   739 ;;      Locals:         0      87       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   740 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   741 ;;      Totals:         0      95       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   742 ;;Total ram usage:       95 bytes
   743 ;; Hardware stack levels required when called: 9
   744 ;; This function calls:
   745 ;;		_ADC_getval
   746 ;;		_ADC_init
   747 ;;		_Interrupts_init
   748 ;;		_LCD_Init
   749 ;;		_LCD_sendbyte
   750 ;;		_LCD_sendstring
   751 ;;		_LEDarray_disp_bin
   752 ;;		_LEDarray_init
   753 ;;		_Timer0_init
   754 ;;		___lwdiv
   755 ;;		___wmul
   756 ;;		_sprintf
   757 ;; This function is called by:
   758 ;;		Startup code after reset
   759 ;; This function uses a non-reentrant model
   760 ;;
   761                           
   762                           	psect	text0
   763  000E24                     __ptext0:
   764                           	callstack 0
   765  000E24                     _main:
   766                           	callstack 22
   767  000E24                     
   768                           ;main.c: 18:     LATHbits.LATH3=0;
   769  000E24  9680               	bcf	128,3,c	;volatile
   770                           
   771                           ;main.c: 19:     TRISHbits.TRISH3=0;
   772  000E26  9688               	bcf	136,3,c	;volatile
   773                           
   774                           ;main.c: 22:     LATDbits.LATD7=0;
   775  000E28  9E7C               	bcf	124,7,c	;volatile
   776                           
   777                           ;main.c: 23:     TRISDbits.TRISD7=0;
   778  000E2A  9E84               	bcf	132,7,c	;volatile
   779  000E2C                     
   780                           ;main.c: 26:     LEDarray_init();
   781  000E2C  EC08  F013         	call	_LEDarray_init	;wreg free
   782  000E30                     
   783                           ;main.c: 27:     ADC_init();
   784  000E30  EC2B  F013         	call	_ADC_init	;wreg free
   785  000E34                     
   786                           ;main.c: 28:     Timer0_init();
   787  000E34  EC1B  F013         	call	_Timer0_init	;wreg free
   788                           
   789                           ;main.c: 29:     Interrupts_init();
   790  000E38  EC4F  F013         	call	_Interrupts_init	;wreg free
   791  000E3C                     
   792                           ;main.c: 30:     LCD_Init();
   793  000E3C  EC85  F00F         	call	_LCD_Init	;wreg free
   794  000E40                     
   795                           ;main.c: 34:     unsigned int temp=0;
   796  000E40  0E00               	movlw	0
   797  000E42  0100               	movlb	0	; () banked
   798  000E44  6FBC               	movwf	(main@temp+1)& (0+255),b
   799  000E46  0E00               	movlw	0
   800  000E48  6FBB               	movwf	main@temp& (0+255),b
   801  000E4A                     
   802                           ; BSR set to: 0
   803                           ;main.c: 35:     unsigned int secs=0;
   804  000E4A  0E00               	movlw	0
   805  000E4C  6FC0               	movwf	(main@secs+1)& (0+255),b
   806  000E4E  0E00               	movlw	0
   807  000E50  6FBF               	movwf	main@secs& (0+255),b
   808  000E52                     
   809                           ; BSR set to: 0
   810                           ;main.c: 37:     unsigned int monthdays[12] = {31,28,31,30,31,30,31,31,30,31,30,31};
   811  000E52  EE20  F0DB         	lfsr	2,main@F14546
   812  000E56  EE10  F09D         	lfsr	1,main@monthdays
   813  000E5A  0E17               	movlw	23
   814  000E5C                     u3731:
   815  000E5C  CFDB FFE3          	movff	plusw2,plusw1
   816  000E60  06E8               	decf	wreg,f,c
   817  000E62  E2FC               	bc	u3731
   818  000E64                     
   819                           ; BSR set to: 0
   820                           ;main.c: 38:     unsigned int daylight_flag = 0;
   821  000E64  0E00               	movlw	0
   822  000E66  6FC4               	movwf	(main@daylight_flag+1)& (0+255),b
   823  000E68  0E00               	movlw	0
   824  000E6A  6FC3               	movwf	main@daylight_flag& (0+255),b
   825  000E6C                     
   826                           ; BSR set to: 0
   827                           ;main.c: 39:     unsigned int dawn_dusk[2] = {0,0};
   828  000E6C  0E00               	movlw	0
   829  000E6E  6FCF               	movwf	main@dawn_dusk& (0+255),b
   830  000E70  0E00               	movlw	0
   831  000E72  6FD0               	movwf	(main@dawn_dusk+1)& (0+255),b
   832  000E74  0E00               	movlw	0
   833  000E76  6FD1               	movwf	(main@dawn_dusk+2)& (0+255),b
   834  000E78  0E00               	movlw	0
   835  000E7A  6FD2               	movwf	(main@dawn_dusk+3)& (0+255),b
   836  000E7C                     
   837                           ; BSR set to: 0
   838                           ;main.c: 40:     char buf[25];;main.c: 43:     unsigned int set_brightness=50;
   839  000E7C  0E00               	movlw	0
   840  000E7E  6FCA               	movwf	(main@set_brightness+1)& (0+255),b
   841  000E80  0E32               	movlw	50
   842  000E82  6FC9               	movwf	main@set_brightness& (0+255),b
   843  000E84                     
   844                           ; BSR set to: 0
   845                           ;main.c: 44:     int minutes=12;
   846  000E84  0E00               	movlw	0
   847  000E86  6FD6               	movwf	(main@minutes+1)& (0+255),b
   848  000E88  0E0C               	movlw	12
   849  000E8A  6FD5               	movwf	main@minutes& (0+255),b
   850  000E8C                     
   851                           ; BSR set to: 0
   852                           ;main.c: 45:     unsigned int hour=14;
   853  000E8C  0E00               	movlw	0
   854  000E8E  6FDA               	movwf	(main@hour+1)& (0+255),b
   855  000E90  0E0E               	movlw	14
   856  000E92  6FD9               	movwf	main@hour& (0+255),b
   857  000E94                     
   858                           ; BSR set to: 0
   859                           ;main.c: 46:     unsigned int day_of_week = 5;
   860  000E94  0E00               	movlw	0
   861  000E96  6FC6               	movwf	(main@day_of_week+1)& (0+255),b
   862  000E98  0E05               	movlw	5
   863  000E9A  6FC5               	movwf	main@day_of_week& (0+255),b
   864  000E9C                     
   865                           ; BSR set to: 0
   866                           ;main.c: 47:     unsigned int daydate = 5;
   867  000E9C  0E00               	movlw	0
   868  000E9E  6FD4               	movwf	(main@daydate+1)& (0+255),b
   869  000EA0  0E05               	movlw	5
   870  000EA2  6FD3               	movwf	main@daydate& (0+255),b
   871  000EA4                     
   872                           ; BSR set to: 0
   873                           ;main.c: 48:     unsigned int month = 11;
   874  000EA4  0E00               	movlw	0
   875  000EA6  6FD8               	movwf	(main@month+1)& (0+255),b
   876  000EA8  0E0B               	movlw	11
   877  000EAA  6FD7               	movwf	main@month& (0+255),b
   878  000EAC                     
   879                           ; BSR set to: 0
   880                           ;main.c: 49:     unsigned int year = 2021;
   881  000EAC  0E07               	movlw	7
   882  000EAE  6FC8               	movwf	(main@year+1)& (0+255),b
   883  000EB0  0EE5               	movlw	229
   884  000EB2  6FC7               	movwf	main@year& (0+255),b
   885  000EB4                     l3313:
   886                           
   887                           ;main.c: 52:         light_strength = ADC_getval();
   888  000EB4  ECDD  F012         	call	_ADC_getval	;wreg free
   889  000EB8  C002  F0CD         	movff	?_ADC_getval,main@light_strength
   890  000EBC  C003  F0CE         	movff	?_ADC_getval+1,main@light_strength+1
   891  000EC0                     
   892                           ;main.c: 53:         if (light_strength >= set_brightness || (1<hour && hour<5 ) ) {
   893  000EC0  0100               	movlb	0	; () banked
   894  000EC2  51C9               	movf	main@set_brightness& (0+255),w,b
   895  000EC4  5DCD               	subwf	main@light_strength& (0+255),w,b
   896  000EC6  51CA               	movf	(main@set_brightness+1)& (0+255),w,b
   897  000EC8  59CE               	subwfb	(main@light_strength+1)& (0+255),w,b
   898  000ECA  B0D8               	btfsc	status,0,c
   899  000ECC  EF6A  F007         	goto	u3741
   900  000ED0  EF6C  F007         	goto	u3740
   901  000ED4                     u3741:
   902  000ED4  EF82  F007         	goto	l63
   903  000ED8                     u3740:
   904  000ED8                     
   905                           ; BSR set to: 0
   906  000ED8  51DA               	movf	(main@hour+1)& (0+255),w,b
   907  000EDA  E109               	bnz	u3750
   908  000EDC  0E02               	movlw	2
   909  000EDE  5DD9               	subwf	main@hour& (0+255),w,b
   910  000EE0  A0D8               	btfss	status,0,c
   911  000EE2  EF75  F007         	goto	u3751
   912  000EE6  EF77  F007         	goto	u3750
   913  000EEA                     u3751:
   914  000EEA  EF85  F007         	goto	l61
   915  000EEE                     u3750:
   916  000EEE                     
   917                           ; BSR set to: 0
   918  000EEE  51DA               	movf	(main@hour+1)& (0+255),w,b
   919  000EF0  E107               	bnz	u3761
   920  000EF2  0E05               	movlw	5
   921  000EF4  5DD9               	subwf	main@hour& (0+255),w,b
   922  000EF6  B0D8               	btfsc	status,0,c
   923  000EF8  EF80  F007         	goto	u3761
   924  000EFC  EF82  F007         	goto	u3760
   925  000F00                     u3761:
   926  000F00  EF85  F007         	goto	l61
   927  000F04                     u3760:
   928  000F04                     l63:
   929                           
   930                           ; BSR set to: 0
   931                           ;main.c: 54:             LATHbits.LATH3 = 0;}
   932  000F04  9680               	bcf	128,3,c	;volatile
   933  000F06  EF86  F007         	goto	l3321
   934  000F0A                     l61:
   935                           
   936                           ; BSR set to: 0
   937  000F0A  8680               	bsf	128,3,c	;volatile
   938  000F0C                     l3321:
   939                           
   940                           ; BSR set to: 0
   941                           ;main.c: 58:         leap_year = year % 4;
   942  000F0C  0E03               	movlw	3
   943  000F0E  15C7               	andwf	main@year& (0+255),w,b
   944  000F10  6FBD               	movwf	main@leap_year& (0+255),b
   945  000F12  6BBE               	clrf	(main@leap_year+1)& (0+255),b
   946                           
   947                           ;main.c: 59:         if (leap_year == 0) { monthdays[1] = 29;}
   948  000F14  51BD               	movf	main@leap_year& (0+255),w,b
   949  000F16  11BE               	iorwf	(main@leap_year+1)& (0+255),w,b
   950  000F18  A4D8               	btfss	status,2,c
   951  000F1A  EF91  F007         	goto	u3771
   952  000F1E  EF93  F007         	goto	u3770
   953  000F22                     u3771:
   954  000F22  EF99  F007         	goto	l3325
   955  000F26                     u3770:
   956  000F26                     
   957                           ; BSR set to: 0
   958  000F26  0E00               	movlw	0
   959  000F28  6FA0               	movwf	(main@monthdays+3)& (0+255),b
   960  000F2A  0E1D               	movlw	29
   961  000F2C  6F9F               	movwf	(main@monthdays+2)& (0+255),b
   962  000F2E  EF9D  F007         	goto	l3327
   963  000F32                     l3325:
   964                           
   965                           ; BSR set to: 0
   966  000F32  0E00               	movlw	0
   967  000F34  6FA0               	movwf	(main@monthdays+3)& (0+255),b
   968  000F36  0E1C               	movlw	28
   969  000F38  6F9F               	movwf	(main@monthdays+2)& (0+255),b
   970  000F3A                     l3327:
   971                           
   972                           ; BSR set to: 0
   973                           ;main.c: 63:         if (LATDbits.LATD7 != temp) { secs += 1; temp = LATDbits.LATD7;}
   974  000F3A  BE7C               	btfsc	124,7,c	;volatile
   975  000F3C  EFA2  F007         	goto	u3781
   976  000F40  EFA5  F007         	goto	u3780
   977  000F44                     u3781:
   978  000F44  0E01               	movlw	1
   979  000F46  EFA6  F007         	goto	u3790
   980  000F4A                     u3780:
   981  000F4A  0E00               	movlw	0
   982  000F4C                     u3790:
   983  000F4C  6F7C               	movwf	??_main& (0+255),b
   984  000F4E  6B7D               	clrf	(??_main+1)& (0+255),b
   985  000F50  51BB               	movf	main@temp& (0+255),w,b
   986  000F52  197C               	xorwf	??_main& (0+255),w,b
   987  000F54  E109               	bnz	u3800
   988  000F56  51BC               	movf	(main@temp+1)& (0+255),w,b
   989  000F58  197D               	xorwf	(??_main+1)& (0+255),w,b
   990  000F5A  B4D8               	btfsc	status,2,c
   991  000F5C  EFB2  F007         	goto	u3801
   992  000F60  EFB4  F007         	goto	u3800
   993  000F64                     u3801:
   994  000F64  EFC4  F007         	goto	l3333
   995  000F68                     u3800:
   996  000F68                     
   997                           ; BSR set to: 0
   998  000F68  4BBF               	infsnz	main@secs& (0+255),f,b
   999  000F6A  2BC0               	incf	(main@secs+1)& (0+255),f,b
  1000  000F6C                     
  1001                           ; BSR set to: 0
  1002  000F6C  BE7C               	btfsc	124,7,c	;volatile
  1003  000F6E  EFBB  F007         	goto	u3811
  1004  000F72  EFBF  F007         	goto	u3810
  1005  000F76                     u3811:
  1006  000F76  6B7C               	clrf	??_main& (0+255),b
  1007  000F78  2B7C               	incf	??_main& (0+255),f,b
  1008  000F7A  EFC1  F007         	goto	u3818
  1009  000F7E                     u3810:
  1010  000F7E  0100               	movlb	0	; () banked
  1011  000F80  6B7C               	clrf	??_main& (0+255),b
  1012  000F82                     u3818:
  1013  000F82  517C               	movf	??_main& (0+255),w,b
  1014  000F84  6FBB               	movwf	main@temp& (0+255),b
  1015  000F86  6BBC               	clrf	(main@temp+1)& (0+255),b
  1016  000F88                     l3333:
  1017                           
  1018                           ; BSR set to: 0
  1019                           ;main.c: 64:         if (secs >= 60) { minutes += 1; secs = 0;}
  1020  000F88  51C0               	movf	(main@secs+1)& (0+255),w,b
  1021  000F8A  E109               	bnz	u3820
  1022  000F8C  0E3C               	movlw	60
  1023  000F8E  5DBF               	subwf	main@secs& (0+255),w,b
  1024  000F90  A0D8               	btfss	status,0,c
  1025  000F92  EFCD  F007         	goto	u3821
  1026  000F96  EFCF  F007         	goto	u3820
  1027  000F9A                     u3821:
  1028  000F9A  EFD5  F007         	goto	l3339
  1029  000F9E                     u3820:
  1030  000F9E                     
  1031                           ; BSR set to: 0
  1032  000F9E  4BD5               	infsnz	main@minutes& (0+255),f,b
  1033  000FA0  2BD6               	incf	(main@minutes+1)& (0+255),f,b
  1034  000FA2                     
  1035                           ; BSR set to: 0
  1036  000FA2  0E00               	movlw	0
  1037  000FA4  6FC0               	movwf	(main@secs+1)& (0+255),b
  1038  000FA6  0E00               	movlw	0
  1039  000FA8  6FBF               	movwf	main@secs& (0+255),b
  1040  000FAA                     l3339:
  1041                           
  1042                           ; BSR set to: 0
  1043                           ;main.c: 65:         if (minutes >= 60) { hour += 1; minutes = 0;}
  1044  000FAA  BFD6               	btfsc	(main@minutes+1)& (0+255),7,b
  1045  000FAC  EFE1  F007         	goto	u3831
  1046  000FB0  51D6               	movf	(main@minutes+1)& (0+255),w,b
  1047  000FB2  E109               	bnz	u3830
  1048  000FB4  0E3C               	movlw	60
  1049  000FB6  5DD5               	subwf	main@minutes& (0+255),w,b
  1050  000FB8  A0D8               	btfss	status,0,c
  1051  000FBA  EFE1  F007         	goto	u3831
  1052  000FBE  EFE3  F007         	goto	u3830
  1053  000FC2                     u3831:
  1054  000FC2  EFE9  F007         	goto	l3345
  1055  000FC6                     u3830:
  1056  000FC6                     
  1057                           ; BSR set to: 0
  1058  000FC6  4BD9               	infsnz	main@hour& (0+255),f,b
  1059  000FC8  2BDA               	incf	(main@hour+1)& (0+255),f,b
  1060  000FCA                     
  1061                           ; BSR set to: 0
  1062  000FCA  0E00               	movlw	0
  1063  000FCC  6FD6               	movwf	(main@minutes+1)& (0+255),b
  1064  000FCE  0E00               	movlw	0
  1065  000FD0  6FD5               	movwf	main@minutes& (0+255),b
  1066  000FD2                     l3345:
  1067                           
  1068                           ; BSR set to: 0
  1069                           ;main.c: 66:         if (hour >= 24) {hour = 0; daydate += 1; day_of_week+=1;}
  1070  000FD2  51DA               	movf	(main@hour+1)& (0+255),w,b
  1071  000FD4  E109               	bnz	u3840
  1072  000FD6  0E18               	movlw	24
  1073  000FD8  5DD9               	subwf	main@hour& (0+255),w,b
  1074  000FDA  A0D8               	btfss	status,0,c
  1075  000FDC  EFF2  F007         	goto	u3841
  1076  000FE0  EFF4  F007         	goto	u3840
  1077  000FE4                     u3841:
  1078  000FE4  EFFC  F007         	goto	l3353
  1079  000FE8                     u3840:
  1080  000FE8                     
  1081                           ; BSR set to: 0
  1082  000FE8  0E00               	movlw	0
  1083  000FEA  6FDA               	movwf	(main@hour+1)& (0+255),b
  1084  000FEC  0E00               	movlw	0
  1085  000FEE  6FD9               	movwf	main@hour& (0+255),b
  1086  000FF0                     
  1087                           ; BSR set to: 0
  1088  000FF0  4BD3               	infsnz	main@daydate& (0+255),f,b
  1089  000FF2  2BD4               	incf	(main@daydate+1)& (0+255),f,b
  1090  000FF4                     
  1091                           ; BSR set to: 0
  1092  000FF4  4BC5               	infsnz	main@day_of_week& (0+255),f,b
  1093  000FF6  2BC6               	incf	(main@day_of_week+1)& (0+255),f,b
  1094  000FF8                     l3353:
  1095                           
  1096                           ; BSR set to: 0
  1097                           ;main.c: 67:         if (day_of_week > 7) {day_of_week=1;}
  1098  000FF8  51C6               	movf	(main@day_of_week+1)& (0+255),w,b
  1099  000FFA  E109               	bnz	u3850
  1100  000FFC  0E08               	movlw	8
  1101  000FFE  5DC5               	subwf	main@day_of_week& (0+255),w,b
  1102  001000  A0D8               	btfss	status,0,c
  1103  001002  EF05  F008         	goto	u3851
  1104  001006  EF07  F008         	goto	u3850
  1105  00100A                     u3851:
  1106  00100A  EF0B  F008         	goto	l3357
  1107  00100E                     u3850:
  1108  00100E                     
  1109                           ; BSR set to: 0
  1110  00100E  0E00               	movlw	0
  1111  001010  6FC6               	movwf	(main@day_of_week+1)& (0+255),b
  1112  001012  0E01               	movlw	1
  1113  001014  6FC5               	movwf	main@day_of_week& (0+255),b
  1114  001016                     l3357:
  1115                           
  1116                           ; BSR set to: 0
  1117                           ;main.c: 68:         if (month > 12) { year += 1; month = 1; daydate=1;}
  1118  001016  51D8               	movf	(main@month+1)& (0+255),w,b
  1119  001018  E109               	bnz	u3860
  1120  00101A  0E0D               	movlw	13
  1121  00101C  5DD7               	subwf	main@month& (0+255),w,b
  1122  00101E  A0D8               	btfss	status,0,c
  1123  001020  EF14  F008         	goto	u3861
  1124  001024  EF16  F008         	goto	u3860
  1125  001028                     u3861:
  1126  001028  EF20  F008         	goto	l3365
  1127  00102C                     u3860:
  1128  00102C                     
  1129                           ; BSR set to: 0
  1130  00102C  4BC7               	infsnz	main@year& (0+255),f,b
  1131  00102E  2BC8               	incf	(main@year+1)& (0+255),f,b
  1132  001030                     
  1133                           ; BSR set to: 0
  1134  001030  0E00               	movlw	0
  1135  001032  6FD8               	movwf	(main@month+1)& (0+255),b
  1136  001034  0E01               	movlw	1
  1137  001036  6FD7               	movwf	main@month& (0+255),b
  1138  001038                     
  1139                           ; BSR set to: 0
  1140  001038  0E00               	movlw	0
  1141  00103A  6FD4               	movwf	(main@daydate+1)& (0+255),b
  1142  00103C  0E01               	movlw	1
  1143  00103E  6FD3               	movwf	main@daydate& (0+255),b
  1144  001040                     l3365:
  1145                           
  1146                           ; BSR set to: 0
  1147                           ;main.c: 69:         if (daydate > monthdays[month-1]) { month += 1; daydate = 1;
  1148  001040  0EFE               	movlw	254
  1149  001042  6F7C               	movwf	??_main& (0+255),b
  1150  001044  0EFF               	movlw	255
  1151  001046  6F7D               	movwf	(??_main+1)& (0+255),b
  1152  001048  C0D7  F07E         	movff	main@month,??_main+2
  1153  00104C  C0D8  F07F         	movff	main@month+1,??_main+3
  1154  001050  90D8               	bcf	status,0,c
  1155  001052  377E               	rlcf	(??_main+2)& (0+255),f,b
  1156  001054  377F               	rlcf	(??_main+3)& (0+255),f,b
  1157  001056  517C               	movf	??_main& (0+255),w,b
  1158  001058  277E               	addwf	(??_main+2)& (0+255),f,b
  1159  00105A  517D               	movf	(??_main+1)& (0+255),w,b
  1160  00105C  237F               	addwfc	(??_main+3)& (0+255),f,b
  1161  00105E  0E9D               	movlw	low main@monthdays
  1162  001060  257E               	addwf	(??_main+2)& (0+255),w,b
  1163  001062  6ED9               	movwf	fsr2l,c
  1164  001064  0E00               	movlw	high main@monthdays
  1165  001066  217F               	addwfc	(??_main+3)& (0+255),w,b
  1166  001068  6EDA               	movwf	fsr2h,c
  1167  00106A  51D3               	movf	main@daydate& (0+255),w,b
  1168  00106C  5CDE               	subwf	postinc2,w,c
  1169  00106E  51D4               	movf	(main@daydate+1)& (0+255),w,b
  1170  001070  58DE               	subwfb	postinc2,w,c
  1171  001072  B0D8               	btfsc	status,0,c
  1172  001074  EF3E  F008         	goto	u3871
  1173  001078  EF40  F008         	goto	u3870
  1174  00107C                     u3871:
  1175  00107C  EF4E  F008         	goto	l3375
  1176  001080                     u3870:
  1177  001080                     
  1178                           ; BSR set to: 0
  1179  001080  4BD7               	infsnz	main@month& (0+255),f,b
  1180  001082  2BD8               	incf	(main@month+1)& (0+255),f,b
  1181  001084                     
  1182                           ; BSR set to: 0
  1183  001084  0E00               	movlw	0
  1184  001086  6FD4               	movwf	(main@daydate+1)& (0+255),b
  1185  001088  0E01               	movlw	1
  1186  00108A  6FD3               	movwf	main@daydate& (0+255),b
  1187  00108C                     
  1188                           ; BSR set to: 0
  1189                           ;main.c: 70:             dawn_dusk[0]=0; dawn_dusk[1]=0;}
  1190  00108C  0E00               	movlw	0
  1191  00108E  6FD0               	movwf	(main@dawn_dusk+1)& (0+255),b
  1192  001090  0E00               	movlw	0
  1193  001092  6FCF               	movwf	main@dawn_dusk& (0+255),b
  1194  001094                     
  1195                           ; BSR set to: 0
  1196  001094  0E00               	movlw	0
  1197  001096  6FD2               	movwf	(main@dawn_dusk+3)& (0+255),b
  1198  001098  0E00               	movlw	0
  1199  00109A  6FD1               	movwf	(main@dawn_dusk+2)& (0+255),b
  1200  00109C                     l3375:
  1201                           
  1202                           ; BSR set to: 0
  1203                           ;main.c: 71:         if (month>12) { year+=1; month=1; daydate=1;}
  1204  00109C  51D8               	movf	(main@month+1)& (0+255),w,b
  1205  00109E  E109               	bnz	u3880
  1206  0010A0  0E0D               	movlw	13
  1207  0010A2  5DD7               	subwf	main@month& (0+255),w,b
  1208  0010A4  A0D8               	btfss	status,0,c
  1209  0010A6  EF57  F008         	goto	u3881
  1210  0010AA  EF59  F008         	goto	u3880
  1211  0010AE                     u3881:
  1212  0010AE  EF63  F008         	goto	l3383
  1213  0010B2                     u3880:
  1214  0010B2                     
  1215                           ; BSR set to: 0
  1216  0010B2  4BC7               	infsnz	main@year& (0+255),f,b
  1217  0010B4  2BC8               	incf	(main@year+1)& (0+255),f,b
  1218  0010B6                     
  1219                           ; BSR set to: 0
  1220  0010B6  0E00               	movlw	0
  1221  0010B8  6FD8               	movwf	(main@month+1)& (0+255),b
  1222  0010BA  0E01               	movlw	1
  1223  0010BC  6FD7               	movwf	main@month& (0+255),b
  1224  0010BE                     
  1225                           ; BSR set to: 0
  1226  0010BE  0E00               	movlw	0
  1227  0010C0  6FD4               	movwf	(main@daydate+1)& (0+255),b
  1228  0010C2  0E01               	movlw	1
  1229  0010C4  6FD3               	movwf	main@daydate& (0+255),b
  1230  0010C6                     l3383:
  1231                           
  1232                           ; BSR set to: 0
  1233                           ;main.c: 72:         LEDarray_disp_bin(hour);
  1234  0010C6  C0D9  F002         	movff	main@hour,LEDarray_disp_bin@number
  1235  0010CA  C0DA  F003         	movff	main@hour+1,LEDarray_disp_bin@number+1
  1236  0010CE  EC57  F010         	call	_LEDarray_disp_bin	;wreg free
  1237  0010D2                     
  1238                           ;main.c: 75:         if (day_of_week == 7) {
  1239  0010D2  0E07               	movlw	7
  1240  0010D4  0100               	movlb	0	; () banked
  1241  0010D6  19C5               	xorwf	main@day_of_week& (0+255),w,b
  1242  0010D8  11C6               	iorwf	(main@day_of_week+1)& (0+255),w,b
  1243  0010DA  A4D8               	btfss	status,2,c
  1244  0010DC  EF72  F008         	goto	u3891
  1245  0010E0  EF74  F008         	goto	u3890
  1246  0010E4                     u3891:
  1247  0010E4  EFD8  F008         	goto	l3407
  1248  0010E8                     u3890:
  1249  0010E8                     
  1250                           ; BSR set to: 0
  1251                           ;main.c: 76:             if ((daydate+7) > monthdays[month-1]) {
  1252  0010E8  0E07               	movlw	7
  1253  0010EA  25D3               	addwf	main@daydate& (0+255),w,b
  1254  0010EC  6F7C               	movwf	??_main& (0+255),b
  1255  0010EE  0E00               	movlw	0
  1256  0010F0  21D4               	addwfc	(main@daydate+1)& (0+255),w,b
  1257  0010F2  6F7D               	movwf	(??_main+1)& (0+255),b
  1258  0010F4  0EFE               	movlw	254
  1259  0010F6  6F7E               	movwf	(??_main+2)& (0+255),b
  1260  0010F8  0EFF               	movlw	255
  1261  0010FA  6F7F               	movwf	(??_main+3)& (0+255),b
  1262  0010FC  C0D7  F080         	movff	main@month,??_main+4
  1263  001100  C0D8  F081         	movff	main@month+1,??_main+5
  1264  001104  90D8               	bcf	status,0,c
  1265  001106  3780               	rlcf	(??_main+4)& (0+255),f,b
  1266  001108  3781               	rlcf	(??_main+5)& (0+255),f,b
  1267  00110A  517E               	movf	(??_main+2)& (0+255),w,b
  1268  00110C  2780               	addwf	(??_main+4)& (0+255),f,b
  1269  00110E  517F               	movf	(??_main+3)& (0+255),w,b
  1270  001110  2381               	addwfc	(??_main+5)& (0+255),f,b
  1271  001112  0E9D               	movlw	low main@monthdays
  1272  001114  2580               	addwf	(??_main+4)& (0+255),w,b
  1273  001116  6ED9               	movwf	fsr2l,c
  1274  001118  0E00               	movlw	high main@monthdays
  1275  00111A  2181               	addwfc	(??_main+5)& (0+255),w,b
  1276  00111C  6EDA               	movwf	fsr2h,c
  1277  00111E  517C               	movf	??_main& (0+255),w,b
  1278  001120  5CDE               	subwf	postinc2,w,c
  1279  001122  517D               	movf	(??_main+1)& (0+255),w,b
  1280  001124  58DE               	subwfb	postinc2,w,c
  1281  001126  B0D8               	btfsc	status,0,c
  1282  001128  EF98  F008         	goto	u3901
  1283  00112C  EF9A  F008         	goto	u3900
  1284  001130                     u3901:
  1285  001130  EFD8  F008         	goto	l3407
  1286  001134                     u3900:
  1287  001134                     
  1288                           ; BSR set to: 0
  1289                           ;main.c: 77:                 if (month == 3){
  1290  001134  0E03               	movlw	3
  1291  001136  19D7               	xorwf	main@month& (0+255),w,b
  1292  001138  11D8               	iorwf	(main@month+1)& (0+255),w,b
  1293  00113A  A4D8               	btfss	status,2,c
  1294  00113C  EFA2  F008         	goto	u3911
  1295  001140  EFA4  F008         	goto	u3910
  1296  001144                     u3911:
  1297  001144  EFB3  F008         	goto	l3397
  1298  001148                     u3910:
  1299  001148                     
  1300                           ; BSR set to: 0
  1301                           ;main.c: 78:                     if (daylight_flag==0){
  1302  001148  51C3               	movf	main@daylight_flag& (0+255),w,b
  1303  00114A  11C4               	iorwf	(main@daylight_flag+1)& (0+255),w,b
  1304  00114C  A4D8               	btfss	status,2,c
  1305  00114E  EFAB  F008         	goto	u3921
  1306  001152  EFAD  F008         	goto	u3920
  1307  001156                     u3921:
  1308  001156  EFB3  F008         	goto	l3397
  1309  00115A                     u3920:
  1310  00115A                     
  1311                           ; BSR set to: 0
  1312                           ;main.c: 79:                         hour+=1;
  1313  00115A  4BD9               	infsnz	main@hour& (0+255),f,b
  1314  00115C  2BDA               	incf	(main@hour+1)& (0+255),f,b
  1315  00115E                     
  1316                           ; BSR set to: 0
  1317                           ;main.c: 80:                         daylight_flag=1;
  1318  00115E  0E00               	movlw	0
  1319  001160  6FC4               	movwf	(main@daylight_flag+1)& (0+255),b
  1320  001162  0E01               	movlw	1
  1321  001164  6FC3               	movwf	main@daylight_flag& (0+255),b
  1322  001166                     l3397:
  1323                           
  1324                           ; BSR set to: 0
  1325                           ;main.c: 83:                 if (month ==10) {
  1326  001166  0E0A               	movlw	10
  1327  001168  19D7               	xorwf	main@month& (0+255),w,b
  1328  00116A  11D8               	iorwf	(main@month+1)& (0+255),w,b
  1329  00116C  A4D8               	btfss	status,2,c
  1330  00116E  EFBB  F008         	goto	u3931
  1331  001172  EFBD  F008         	goto	u3930
  1332  001176                     u3931:
  1333  001176  EFD8  F008         	goto	l3407
  1334  00117A                     u3930:
  1335  00117A                     
  1336                           ; BSR set to: 0
  1337                           ;main.c: 84:                     if (daylight_flag==0 && hour==1){
  1338  00117A  51C3               	movf	main@daylight_flag& (0+255),w,b
  1339  00117C  11C4               	iorwf	(main@daylight_flag+1)& (0+255),w,b
  1340  00117E  A4D8               	btfss	status,2,c
  1341  001180  EFC4  F008         	goto	u3941
  1342  001184  EFC6  F008         	goto	u3940
  1343  001188                     u3941:
  1344  001188  EFD8  F008         	goto	l76
  1345  00118C                     u3940:
  1346  00118C                     
  1347                           ; BSR set to: 0
  1348  00118C  05D9               	decf	main@hour& (0+255),w,b
  1349  00118E  11DA               	iorwf	(main@hour+1)& (0+255),w,b
  1350  001190  A4D8               	btfss	status,2,c
  1351  001192  EFCD  F008         	goto	u3951
  1352  001196  EFCF  F008         	goto	u3950
  1353  00119A                     u3951:
  1354  00119A  EFD8  F008         	goto	l76
  1355  00119E                     u3950:
  1356  00119E                     
  1357                           ; BSR set to: 0
  1358                           ;main.c: 85:                         hour-=1;
  1359  00119E  07D9               	decf	main@hour& (0+255),f,b
  1360  0011A0  A0D8               	btfss	status,0,c
  1361  0011A2  07DA               	decf	(main@hour+1)& (0+255),f,b
  1362  0011A4                     
  1363                           ; BSR set to: 0
  1364                           ;main.c: 86:                         daylight_flag=1;
  1365  0011A4  0E00               	movlw	0
  1366  0011A6  6FC4               	movwf	(main@daylight_flag+1)& (0+255),b
  1367  0011A8  0E01               	movlw	1
  1368  0011AA  6FC3               	movwf	main@daylight_flag& (0+255),b
  1369  0011AC  EFD8  F008         	goto	l3407
  1370  0011B0                     l76:
  1371  0011B0                     l3407:
  1372                           
  1373                           ; BSR set to: 0
  1374                           ;main.c: 93:         if (daydate == 25){
  1375  0011B0  0E19               	movlw	25
  1376  0011B2  19D3               	xorwf	main@daydate& (0+255),w,b
  1377  0011B4  11D4               	iorwf	(main@daydate+1)& (0+255),w,b
  1378  0011B6  A4D8               	btfss	status,2,c
  1379  0011B8  EFE0  F008         	goto	u3961
  1380  0011BC  EFE2  F008         	goto	u3960
  1381  0011C0                     u3961:
  1382  0011C0  EFC0  F009         	goto	l3445
  1383  0011C4                     u3960:
  1384  0011C4                     
  1385                           ; BSR set to: 0
  1386                           ;main.c: 94:             if (dawn_dusk[0] == 0){
  1387  0011C4  51CF               	movf	main@dawn_dusk& (0+255),w,b
  1388  0011C6  11D0               	iorwf	(main@dawn_dusk+1)& (0+255),w,b
  1389  0011C8  A4D8               	btfss	status,2,c
  1390  0011CA  EFE9  F008         	goto	u3971
  1391  0011CE  EFEB  F008         	goto	u3970
  1392  0011D2                     u3971:
  1393  0011D2  EF1D  F009         	goto	l3419
  1394  0011D6                     u3970:
  1395  0011D6                     
  1396                           ; BSR set to: 0
  1397                           ;main.c: 95:                 if (light_strength >= set_brightness){
  1398  0011D6  51C9               	movf	main@set_brightness& (0+255),w,b
  1399  0011D8  5DCD               	subwf	main@light_strength& (0+255),w,b
  1400  0011DA  51CA               	movf	(main@set_brightness+1)& (0+255),w,b
  1401  0011DC  59CE               	subwfb	(main@light_strength+1)& (0+255),w,b
  1402  0011DE  A0D8               	btfss	status,0,c
  1403  0011E0  EFF4  F008         	goto	u3981
  1404  0011E4  EFF6  F008         	goto	u3980
  1405  0011E8                     u3981:
  1406  0011E8  EF1D  F009         	goto	l3419
  1407  0011EC                     u3980:
  1408  0011EC                     
  1409                           ; BSR set to: 0
  1410                           ;main.c: 96:                     if (hour>5 && hour<9){
  1411  0011EC  51DA               	movf	(main@hour+1)& (0+255),w,b
  1412  0011EE  E109               	bnz	u3990
  1413  0011F0  0E06               	movlw	6
  1414  0011F2  5DD9               	subwf	main@hour& (0+255),w,b
  1415  0011F4  A0D8               	btfss	status,0,c
  1416  0011F6  EFFF  F008         	goto	u3991
  1417  0011FA  EF01  F009         	goto	u3990
  1418  0011FE                     u3991:
  1419  0011FE  EF1D  F009         	goto	l3419
  1420  001202                     u3990:
  1421  001202                     
  1422                           ; BSR set to: 0
  1423  001202  51DA               	movf	(main@hour+1)& (0+255),w,b
  1424  001204  E107               	bnz	u4001
  1425  001206  0E09               	movlw	9
  1426  001208  5DD9               	subwf	main@hour& (0+255),w,b
  1427  00120A  B0D8               	btfsc	status,0,c
  1428  00120C  EF0A  F009         	goto	u4001
  1429  001210  EF0C  F009         	goto	u4000
  1430  001214                     u4001:
  1431  001214  EF1D  F009         	goto	l3419
  1432  001218                     u4000:
  1433  001218                     
  1434                           ; BSR set to: 0
  1435                           ;main.c: 97:                         dawn_dusk[0] = hour*60 + minutes;
  1436  001218  C0D9  F002         	movff	main@hour,___wmul@multiplier
  1437  00121C  C0DA  F003         	movff	main@hour+1,___wmul@multiplier+1
  1438  001220  0E00               	movlw	0
  1439  001222  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  1440  001224  0E3C               	movlw	60
  1441  001226  6E04               	movwf	___wmul@multiplicand^0,c
  1442  001228  ECF5  F012         	call	___wmul	;wreg free
  1443  00122C  0100               	movlb	0	; () banked
  1444  00122E  51D5               	movf	main@minutes& (0+255),w,b
  1445  001230  2402               	addwf	?___wmul^0,w,c
  1446  001232  6FCF               	movwf	main@dawn_dusk& (0+255),b
  1447  001234  51D6               	movf	(main@minutes+1)& (0+255),w,b
  1448  001236  2003               	addwfc	(?___wmul+1)^0,w,c
  1449  001238  6FD0               	movwf	(main@dawn_dusk+1)& (0+255),b
  1450  00123A                     l3419:
  1451                           
  1452                           ; BSR set to: 0
  1453                           ;main.c: 101:             if (dawn_dusk[1] == 0){
  1454  00123A  51D1               	movf	(main@dawn_dusk+2)& (0+255),w,b
  1455  00123C  11D2               	iorwf	(main@dawn_dusk+3)& (0+255),w,b
  1456  00123E  A4D8               	btfss	status,2,c
  1457  001240  EF24  F009         	goto	u4011
  1458  001244  EF26  F009         	goto	u4010
  1459  001248                     u4011:
  1460  001248  EF58  F009         	goto	l3429
  1461  00124C                     u4010:
  1462  00124C                     
  1463                           ; BSR set to: 0
  1464                           ;main.c: 102:                 if (light_strength <= set_brightness){
  1465  00124C  51CD               	movf	main@light_strength& (0+255),w,b
  1466  00124E  5DC9               	subwf	main@set_brightness& (0+255),w,b
  1467  001250  51CE               	movf	(main@light_strength+1)& (0+255),w,b
  1468  001252  59CA               	subwfb	(main@set_brightness+1)& (0+255),w,b
  1469  001254  A0D8               	btfss	status,0,c
  1470  001256  EF2F  F009         	goto	u4021
  1471  00125A  EF31  F009         	goto	u4020
  1472  00125E                     u4021:
  1473  00125E  EF58  F009         	goto	l3429
  1474  001262                     u4020:
  1475  001262                     
  1476                           ; BSR set to: 0
  1477                           ;main.c: 103:                     if (hour>5 && hour<9){
  1478  001262  51DA               	movf	(main@hour+1)& (0+255),w,b
  1479  001264  E109               	bnz	u4030
  1480  001266  0E06               	movlw	6
  1481  001268  5DD9               	subwf	main@hour& (0+255),w,b
  1482  00126A  A0D8               	btfss	status,0,c
  1483  00126C  EF3A  F009         	goto	u4031
  1484  001270  EF3C  F009         	goto	u4030
  1485  001274                     u4031:
  1486  001274  EF58  F009         	goto	l3429
  1487  001278                     u4030:
  1488  001278                     
  1489                           ; BSR set to: 0
  1490  001278  51DA               	movf	(main@hour+1)& (0+255),w,b
  1491  00127A  E107               	bnz	u4041
  1492  00127C  0E09               	movlw	9
  1493  00127E  5DD9               	subwf	main@hour& (0+255),w,b
  1494  001280  B0D8               	btfsc	status,0,c
  1495  001282  EF45  F009         	goto	u4041
  1496  001286  EF47  F009         	goto	u4040
  1497  00128A                     u4041:
  1498  00128A  EF58  F009         	goto	l3429
  1499  00128E                     u4040:
  1500  00128E                     
  1501                           ; BSR set to: 0
  1502                           ;main.c: 104:                         dawn_dusk[1] = hour*60 + minutes;
  1503  00128E  C0D9  F002         	movff	main@hour,___wmul@multiplier
  1504  001292  C0DA  F003         	movff	main@hour+1,___wmul@multiplier+1
  1505  001296  0E00               	movlw	0
  1506  001298  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  1507  00129A  0E3C               	movlw	60
  1508  00129C  6E04               	movwf	___wmul@multiplicand^0,c
  1509  00129E  ECF5  F012         	call	___wmul	;wreg free
  1510  0012A2  0100               	movlb	0	; () banked
  1511  0012A4  51D5               	movf	main@minutes& (0+255),w,b
  1512  0012A6  2402               	addwf	?___wmul^0,w,c
  1513  0012A8  6FD1               	movwf	(main@dawn_dusk+2)& (0+255),b
  1514  0012AA  51D6               	movf	(main@minutes+1)& (0+255),w,b
  1515  0012AC  2003               	addwfc	(?___wmul+1)^0,w,c
  1516  0012AE  6FD2               	movwf	(main@dawn_dusk+3)& (0+255),b
  1517  0012B0                     l3429:
  1518                           
  1519                           ; BSR set to: 0
  1520                           ;main.c: 108:             unsigned int midtime = (dawn_dusk[0]+dawn_dusk[1])/2;
  1521  0012B0  51CF               	movf	main@dawn_dusk& (0+255),w,b
  1522  0012B2  25D1               	addwf	(main@dawn_dusk+2)& (0+255),w,b
  1523  0012B4  6F7C               	movwf	??_main& (0+255),b
  1524  0012B6  51D0               	movf	(main@dawn_dusk+1)& (0+255),w,b
  1525  0012B8  21D2               	addwfc	(main@dawn_dusk+3)& (0+255),w,b
  1526  0012BA  6F7D               	movwf	(??_main+1)& (0+255),b
  1527  0012BC  90D8               	bcf	status,0,c
  1528  0012BE  317D               	rrcf	(??_main+1)& (0+255),w,b
  1529  0012C0  6F7E               	movwf	(??_main+2)& (0+255),b
  1530  0012C2  317C               	rrcf	??_main& (0+255),w,b
  1531  0012C4  6FCB               	movwf	main@midtime& (0+255),b
  1532  0012C6  C07E  F0CC         	movff	??_main+2,main@midtime+1
  1533  0012CA                     
  1534                           ; BSR set to: 0
  1535                           ;main.c: 109:             unsigned int midhour = midtime/60;
  1536  0012CA  C0CB  F002         	movff	main@midtime,___lwdiv@dividend
  1537  0012CE  C0CC  F003         	movff	main@midtime+1,___lwdiv@dividend+1
  1538  0012D2  0E00               	movlw	0
  1539  0012D4  6E05               	movwf	(___lwdiv@divisor+1)^0,c
  1540  0012D6  0E3C               	movlw	60
  1541  0012D8  6E04               	movwf	___lwdiv@divisor^0,c
  1542  0012DA  EC1C  F011         	call	___lwdiv	;wreg free
  1543  0012DE  C002  F0B7         	movff	?___lwdiv,main@midhour
  1544  0012E2  C003  F0B8         	movff	?___lwdiv+1,main@midhour+1
  1545  0012E6                     
  1546                           ;main.c: 110:             unsigned int midmin = midtime-(midhour*60);
  1547  0012E6  C0B7  F002         	movff	main@midhour,___wmul@multiplier
  1548  0012EA  C0B8  F003         	movff	main@midhour+1,___wmul@multiplier+1
  1549  0012EE  0EFF               	movlw	255
  1550  0012F0  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  1551  0012F2  0EC4               	movlw	196
  1552  0012F4  6E04               	movwf	___wmul@multiplicand^0,c
  1553  0012F6  ECF5  F012         	call	___wmul	;wreg free
  1554  0012FA  0100               	movlb	0	; () banked
  1555  0012FC  51CB               	movf	main@midtime& (0+255),w,b
  1556  0012FE  2402               	addwf	?___wmul^0,w,c
  1557  001300  6FB5               	movwf	main@midmin& (0+255),b
  1558  001302  51CC               	movf	(main@midtime+1)& (0+255),w,b
  1559  001304  2003               	addwfc	(?___wmul+1)^0,w,c
  1560  001306  6FB6               	movwf	(main@midmin+1)& (0+255),b
  1561  001308                     
  1562                           ; BSR set to: 0
  1563                           ;main.c: 111:             int diff = 720 - midtime;
  1564  001308  51CB               	movf	main@midtime& (0+255),w,b
  1565  00130A  08D0               	sublw	208
  1566  00130C  6FB9               	movwf	main@diff& (0+255),b
  1567  00130E  51CC               	movf	(main@midtime+1)& (0+255),w,b
  1568  001310  A0D8               	btfss	status,0,c
  1569  001312  2AE8               	incf	wreg,f,c
  1570  001314  0802               	sublw	2
  1571  001316  6FBA               	movwf	(main@diff+1)& (0+255),b
  1572  001318                     
  1573                           ; BSR set to: 0
  1574                           ;main.c: 112:             unsigned int curtime = (hour*60) + minutes;
  1575  001318  C0D9  F002         	movff	main@hour,___wmul@multiplier
  1576  00131C  C0DA  F003         	movff	main@hour+1,___wmul@multiplier+1
  1577  001320  0E00               	movlw	0
  1578  001322  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  1579  001324  0E3C               	movlw	60
  1580  001326  6E04               	movwf	___wmul@multiplicand^0,c
  1581  001328  ECF5  F012         	call	___wmul	;wreg free
  1582  00132C  0100               	movlb	0	; () banked
  1583  00132E  51D5               	movf	main@minutes& (0+255),w,b
  1584  001330  2402               	addwf	?___wmul^0,w,c
  1585  001332  6FC1               	movwf	main@curtime& (0+255),b
  1586  001334  51D6               	movf	(main@minutes+1)& (0+255),w,b
  1587  001336  2003               	addwfc	(?___wmul+1)^0,w,c
  1588  001338  6FC2               	movwf	(main@curtime+1)& (0+255),b
  1589  00133A                     
  1590                           ; BSR set to: 0
  1591                           ;main.c: 113:             curtime += diff;
  1592  00133A  51B9               	movf	main@diff& (0+255),w,b
  1593  00133C  27C1               	addwf	main@curtime& (0+255),f,b
  1594  00133E  51BA               	movf	(main@diff+1)& (0+255),w,b
  1595  001340  23C2               	addwfc	(main@curtime+1)& (0+255),f,b
  1596  001342                     
  1597                           ; BSR set to: 0
  1598                           ;main.c: 114:             hour = curtime/60;
  1599  001342  C0C1  F002         	movff	main@curtime,___lwdiv@dividend
  1600  001346  C0C2  F003         	movff	main@curtime+1,___lwdiv@dividend+1
  1601  00134A  0E00               	movlw	0
  1602  00134C  6E05               	movwf	(___lwdiv@divisor+1)^0,c
  1603  00134E  0E3C               	movlw	60
  1604  001350  6E04               	movwf	___lwdiv@divisor^0,c
  1605  001352  EC1C  F011         	call	___lwdiv	;wreg free
  1606  001356  C002  F0D9         	movff	?___lwdiv,main@hour
  1607  00135A  C003  F0DA         	movff	?___lwdiv+1,main@hour+1
  1608  00135E                     
  1609                           ;main.c: 115:             minutes = curtime - (hour*60);
  1610  00135E  C0D9  F002         	movff	main@hour,___wmul@multiplier
  1611  001362  C0DA  F003         	movff	main@hour+1,___wmul@multiplier+1
  1612  001366  0EFF               	movlw	255
  1613  001368  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  1614  00136A  0EC4               	movlw	196
  1615  00136C  6E04               	movwf	___wmul@multiplicand^0,c
  1616  00136E  ECF5  F012         	call	___wmul	;wreg free
  1617  001372  0100               	movlb	0	; () banked
  1618  001374  51C1               	movf	main@curtime& (0+255),w,b
  1619  001376  2402               	addwf	?___wmul^0,w,c
  1620  001378  6FD5               	movwf	main@minutes& (0+255),b
  1621  00137A  51C2               	movf	(main@curtime+1)& (0+255),w,b
  1622  00137C  2003               	addwfc	(?___wmul+1)^0,w,c
  1623  00137E  6FD6               	movwf	(main@minutes+1)& (0+255),b
  1624  001380                     l3445:
  1625                           
  1626                           ; BSR set to: 0
  1627                           ;main.c: 119:         sprintf(buf,"%d:%d %d-%d-%d",hour,minutes,daydate,month,year);
  1628  001380  0E84               	movlw	low main@buf
  1629  001382  6F66               	movwf	sprintf@s& (0+255),b
  1630  001384  0E00               	movlw	high main@buf
  1631  001386  6F67               	movwf	(sprintf@s+1)& (0+255),b
  1632  001388  0E13               	movlw	low STR_1
  1633  00138A  6F68               	movwf	sprintf@fmt& (0+255),b
  1634  00138C  0E0E               	movlw	high STR_1
  1635  00138E  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  1636  001390  C0D9  F06A         	movff	main@hour,?_sprintf+4
  1637  001394  C0DA  F06B         	movff	main@hour+1,?_sprintf+5
  1638  001398  C0D5  F06C         	movff	main@minutes,?_sprintf+6
  1639  00139C  C0D6  F06D         	movff	main@minutes+1,?_sprintf+7
  1640  0013A0  C0D3  F06E         	movff	main@daydate,?_sprintf+8
  1641  0013A4  C0D4  F06F         	movff	main@daydate+1,?_sprintf+9
  1642  0013A8  C0D7  F070         	movff	main@month,?_sprintf+10
  1643  0013AC  C0D8  F071         	movff	main@month+1,?_sprintf+11
  1644  0013B0  C0C7  F072         	movff	main@year,?_sprintf+12
  1645  0013B4  C0C8  F073         	movff	main@year+1,?_sprintf+13
  1646  0013B8  ECBD  F011         	call	_sprintf	;wreg free
  1647  0013BC                     
  1648                           ;main.c: 120:         LCD_sendbyte(0b00001100,0);
  1649  0013BC  0E00               	movlw	0
  1650  0013BE  6E03               	movwf	LCD_sendbyte@type^0,c
  1651  0013C0  0E0C               	movlw	12
  1652  0013C2  ECC5  F012         	call	_LCD_sendbyte
  1653  0013C6                     
  1654                           ;main.c: 121:         LCD_sendstring(buf);
  1655  0013C6  0E84               	movlw	low main@buf
  1656  0013C8  6E07               	movwf	LCD_sendstring@string^0,c
  1657  0013CA  0E00               	movlw	high main@buf
  1658  0013CC  6E08               	movwf	(LCD_sendstring@string+1)^0,c
  1659  0013CE  ECAB  F012         	call	_LCD_sendstring	;wreg free
  1660  0013D2                     
  1661                           ;main.c: 122:         _delay((unsigned long)((500)*(64000000/4000.0)));
  1662  0013D2  0E29               	movlw	41
  1663  0013D4  0100               	movlb	0	; () banked
  1664  0013D6  6F7D               	movwf	(??_main+1)& (0+255),b
  1665  0013D8  0E96               	movlw	150
  1666  0013DA  6F7C               	movwf	??_main& (0+255),b
  1667  0013DC  0E7F               	movlw	127
  1668  0013DE                     u4057:
  1669  0013DE  2EE8               	decfsz	wreg,f,c
  1670  0013E0  D7FE               	bra	u4057
  1671  0013E2  2F7C               	decfsz	??_main& (0+255),f,b
  1672  0013E4  D7FC               	bra	u4057
  1673  0013E6  2F7D               	decfsz	(??_main+1)& (0+255),f,b
  1674  0013E8  D7FA               	bra	u4057
  1675  0013EA                     
  1676                           ;main.c: 123:         LCD_sendbyte(0b00000001,0);
  1677  0013EA  0E00               	movlw	0
  1678  0013EC  6E03               	movwf	LCD_sendbyte@type^0,c
  1679  0013EE  0E01               	movlw	1
  1680  0013F0  ECC5  F012         	call	_LCD_sendbyte
  1681  0013F4                     
  1682                           ;main.c: 124:         _delay((unsigned long)((2)*(64000000/4000.0)));
  1683  0013F4  0E2A               	movlw	42
  1684  0013F6  0100               	movlb	0	; () banked
  1685  0013F8  6F7C               	movwf	??_main& (0+255),b
  1686  0013FA  0E8D               	movlw	141
  1687  0013FC                     u4067:
  1688  0013FC  2EE8               	decfsz	wreg,f,c
  1689  0013FE  D7FE               	bra	u4067
  1690  001400  2F7C               	decfsz	??_main& (0+255),f,b
  1691  001402  D7FC               	bra	u4067
  1692  001404  D000               	nop2	
  1693  001406  EF5A  F007         	goto	l3313
  1694  00140A  EF41  F000         	goto	start
  1695  00140E                     __end_of_main:
  1696                           	callstack 0
  1697                           
  1698 ;; *************** function _sprintf *****************
  1699 ;; Defined at:
  1700 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;  s               2    6[BANK0 ] PTR unsigned char 
  1703 ;;		 -> main@buf(25), 
  1704 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  1705 ;;		 -> STR_2(18), STR_1(15), 
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;  f               6   22[BANK0 ] struct _IO_FILE
  1708 ;;  ap              2   20[BANK0 ] PTR void [1]
  1709 ;;		 -> ?_sprintf(2), 
  1710 ;;  ret             2    0        int 
  1711 ;; Return value:  Size  Location     Type
  1712 ;;                  2    6[BANK0 ] int 
  1713 ;; Registers used:
  1714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1715 ;; Tracked objects:
  1716 ;;		On entry : 0/0
  1717 ;;		On exit  : 0/0
  1718 ;;		Unchanged: 0/0
  1719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1720 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1721 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1723 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1724 ;;Total ram usage:       22 bytes
  1725 ;; Hardware stack levels used: 1
  1726 ;; Hardware stack levels required when called: 8
  1727 ;; This function calls:
  1728 ;;		_vfprintf
  1729 ;; This function is called by:
  1730 ;;		_main
  1731 ;;		_ADC2String
  1732 ;; This function uses a non-reentrant model
  1733 ;;
  1734                           
  1735                           	psect	text1
  1736  00237A                     __ptext1:
  1737                           	callstack 0
  1738  00237A                     _sprintf:
  1739                           	callstack 22
  1740  00237A  0E6A               	movlw	low (?_sprintf+4)
  1741  00237C  0100               	movlb	0	; () banked
  1742  00237E  6F74               	movwf	sprintf@ap& (0+255),b
  1743  002380  0E00               	movlw	high (?_sprintf+4)
  1744  002382  6F75               	movwf	(sprintf@ap+1)& (0+255),b
  1745  002384  C066  F076         	movff	sprintf@s,sprintf@f
  1746  002388  C067  F077         	movff	sprintf@s+1,sprintf@f+1
  1747  00238C                     
  1748                           ; BSR set to: 0
  1749  00238C  0E00               	movlw	0
  1750  00238E  6F79               	movwf	(sprintf@f+3)& (0+255),b
  1751  002390  0E00               	movlw	0
  1752  002392  6F78               	movwf	(sprintf@f+2)& (0+255),b
  1753  002394                     
  1754                           ; BSR set to: 0
  1755  002394  0E00               	movlw	0
  1756  002396  6F7B               	movwf	(sprintf@f+5)& (0+255),b
  1757  002398  0E00               	movlw	0
  1758  00239A  6F7A               	movwf	(sprintf@f+4)& (0+255),b
  1759  00239C                     
  1760                           ; BSR set to: 0
  1761  00239C  0E76               	movlw	low sprintf@f
  1762  00239E  6F60               	movwf	vfprintf@fp& (0+255),b
  1763  0023A0  0E00               	movlw	high sprintf@f
  1764  0023A2  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
  1765  0023A4  C068  F062         	movff	sprintf@fmt,vfprintf@fmt
  1766  0023A8  C069  F063         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1767  0023AC  0E74               	movlw	low sprintf@ap
  1768  0023AE  6F64               	movwf	vfprintf@ap& (0+255),b
  1769  0023B0  0E00               	movlw	high sprintf@ap
  1770  0023B2  6F65               	movwf	(vfprintf@ap+1)& (0+255),b
  1771  0023B4  EC8A  F011         	call	_vfprintf	;wreg free
  1772  0023B8  0100               	movlb	0	; () banked
  1773  0023BA  5178               	movf	(sprintf@f+2)& (0+255),w,b
  1774  0023BC  2566               	addwf	sprintf@s& (0+255),w,b
  1775  0023BE  6ED9               	movwf	fsr2l,c
  1776  0023C0  5179               	movf	(sprintf@f+3)& (0+255),w,b
  1777  0023C2  2167               	addwfc	(sprintf@s+1)& (0+255),w,b
  1778  0023C4  6EDA               	movwf	fsr2h,c
  1779  0023C6  0E00               	movlw	0
  1780  0023C8  6EDF               	movwf	indf2,c
  1781  0023CA                     
  1782                           ; BSR set to: 0
  1783  0023CA  0012               	return		;funcret
  1784  0023CC                     __end_of_sprintf:
  1785                           	callstack 0
  1786                           
  1787 ;; *************** function _vfprintf *****************
  1788 ;; Defined at:
  1789 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  1792 ;;		 -> sprintf@f(6), 
  1793 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1794 ;;		 -> STR_2(18), STR_1(15), 
  1795 ;;  ap              2    4[BANK0 ] PTR PTR void 
  1796 ;;		 -> sprintf@ap(2), 
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  1799 ;;		 -> STR_2(18), STR_1(15), 
  1800 ;; Return value:  Size  Location     Type
  1801 ;;                  2    0[BANK0 ] int 
  1802 ;; Registers used:
  1803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1804 ;; Tracked objects:
  1805 ;;		On entry : 0/0
  1806 ;;		On exit  : 0/0
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1809 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1810 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1812 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1813 ;;Total ram usage:        8 bytes
  1814 ;; Hardware stack levels used: 1
  1815 ;; Hardware stack levels required when called: 7
  1816 ;; This function calls:
  1817 ;;		_vfpfcnvrt
  1818 ;; This function is called by:
  1819 ;;		_sprintf
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823                           	psect	text2
  1824  002314                     __ptext2:
  1825                           	callstack 0
  1826  002314                     _vfprintf:
  1827                           	callstack 22
  1828  002314                     
  1829                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1830  002314  C062  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  1831  002318  C063  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1832  00231C                     
  1833                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1834  00231C  0E00               	movlw	0
  1835  00231E  0100               	movlb	0	; () banked
  1836  002320  6FF8               	movwf	(_nout+1)& (0+255),b
  1837  002322  0E00               	movlw	0
  1838  002324  6FF7               	movwf	_nout& (0+255),b
  1839                           
  1840                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1841  002326  EFA8  F011         	goto	l3261
  1842  00232A                     l3259:
  1843                           
  1844                           ; BSR set to: 0
  1845                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1846  00232A  C060  F041         	movff	vfprintf@fp,vfpfcnvrt@fp
  1847  00232E  C061  F042         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1848  002332  0E57               	movlw	low vfprintf@cfmt
  1849  002334  6E43               	movwf	vfpfcnvrt@fmt^0,c
  1850  002336  0E00               	movlw	high vfprintf@cfmt
  1851  002338  6E44               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1852  00233A  C064  F045         	movff	vfprintf@ap,vfpfcnvrt@ap
  1853  00233E  C065  F046         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1854  002342  EC07  F00A         	call	_vfpfcnvrt	;wreg free
  1855  002346  5041               	movf	?_vfpfcnvrt^0,w,c
  1856  002348  0100               	movlb	0	; () banked
  1857  00234A  27F7               	addwf	_nout& (0+255),f,b
  1858  00234C  5042               	movf	(?_vfpfcnvrt+1)^0,w,c
  1859  00234E  23F8               	addwfc	(_nout+1)& (0+255),f,b
  1860  002350                     l3261:
  1861                           
  1862                           ; BSR set to: 0
  1863                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1864  002350  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  1865  002354  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1866  002358                     	if	0	;tblptru may be non-zero
  1867  002358                     	endif
  1868  002358                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1869  002358  0E00               	movlw	low (__mediumconst shr (0+16))
  1870  00235A  6EF8               	movwf	tblptru,c
  1871  00235C                     	endif
  1872  00235C  0008               	tblrd		*
  1873  00235E  50F5               	movf	tablat,w,c
  1874  002360  0900               	iorlw	0
  1875  002362  A4D8               	btfss	status,2,c
  1876  002364  EFB6  F011         	goto	u3721
  1877  002368  EFB8  F011         	goto	u3720
  1878  00236C                     u3721:
  1879  00236C  EF95  F011         	goto	l3259
  1880  002370                     u3720:
  1881  002370                     
  1882                           ; BSR set to: 0
  1883                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1884  002370  C0F7  F060         	movff	_nout,?_vfprintf
  1885  002374  C0F8  F061         	movff	_nout+1,?_vfprintf+1
  1886  002378                     
  1887                           ; BSR set to: 0
  1888  002378  0012               	return		;funcret
  1889  00237A                     __end_of_vfprintf:
  1890                           	callstack 0
  1891                           
  1892 ;; *************** function _vfpfcnvrt *****************
  1893 ;; Defined at:
  1894 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1895 ;; Parameters:    Size  Location     Type
  1896 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
  1897 ;;		 -> sprintf@f(6), 
  1898 ;;  fmt             2   66[COMRAM] PTR PTR unsigned char 
  1899 ;;		 -> vfprintf@cfmt(2), 
  1900 ;;  ap              2   68[COMRAM] PTR PTR void 
  1901 ;;		 -> sprintf@ap(2), 
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;  ll              8   74[COMRAM] long long 
  1904 ;;  llu             8    0        unsigned long long 
  1905 ;;  f               4    0        unsigned long long 
  1906 ;;  vp              3    0        PTR void 
  1907 ;;  ct              3    0        unsigned char [3]
  1908 ;;  cp              3    0        PTR unsigned char 
  1909 ;;  done            2   82[COMRAM] int 
  1910 ;;  i               2    0        int 
  1911 ;;  c               1    0        unsigned char 
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  2   64[COMRAM] int 
  1914 ;; Registers used:
  1915 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1921 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1922 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1923 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1924 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1925 ;;Total ram usage:       22 bytes
  1926 ;; Hardware stack levels used: 1
  1927 ;; Hardware stack levels required when called: 6
  1928 ;; This function calls:
  1929 ;;		_atoi
  1930 ;;		_dtoa
  1931 ;;		_fputc
  1932 ;;		_isdigit
  1933 ;; This function is called by:
  1934 ;;		_vfprintf
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           	psect	text3
  1939  00140E                     __ptext3:
  1940                           	callstack 0
  1941  00140E                     _vfpfcnvrt:
  1942                           	callstack 22
  1943  00140E                     
  1944                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1945  00140E  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1946  001412  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1947  001416  CFDE FFF6          	movff	postinc2,tblptrl
  1948  00141A  CFDD FFF7          	movff	postdec2,tblptrh
  1949  00141E                     	if	0	;tblptru may be non-zero
  1950  00141E                     	endif
  1951  00141E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1952  00141E  0E00               	movlw	low (__mediumconst shr (0+16))
  1953  001420  6EF8               	movwf	tblptru,c
  1954  001422                     	endif
  1955  001422  0008               	tblrd		*
  1956  001424  50F5               	movf	tablat,w,c
  1957  001426  0A25               	xorlw	37
  1958  001428  A4D8               	btfss	status,2,c
  1959  00142A  EF19  F00A         	goto	u3611
  1960  00142E  EF1B  F00A         	goto	u3610
  1961  001432                     u3611:
  1962  001432  EFAF  F00B         	goto	l3243
  1963  001436                     u3610:
  1964  001436                     
  1965                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1966  001436  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1967  00143A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1968  00143E  2ADE               	incf	postinc2,f,c
  1969  001440  0E00               	movlw	0
  1970  001442  22DD               	addwfc	postdec2,f,c
  1971  001444                     
  1972                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1973  001444  0E00               	movlw	0
  1974  001446  0100               	movlb	0	; () banked
  1975  001448  6FFA               	movwf	(_width+1)& (0+255),b
  1976  00144A  0E00               	movlw	0
  1977  00144C  6FF9               	movwf	_width& (0+255),b
  1978  00144E  C0F9  F059         	movff	_width,_flags
  1979  001452  C0FA  F05A         	movff	_width+1,_flags+1
  1980  001456                     
  1981                           ; BSR set to: 0
  1982                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1983  001456  69FB               	setf	_prec& (0+255),b
  1984  001458  69FC               	setf	(_prec+1)& (0+255),b
  1985  00145A                     
  1986                           ; BSR set to: 0
  1987                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  1988  00145A  0E00               	movlw	0
  1989  00145C  6E54               	movwf	(vfpfcnvrt@done+1)^0,c
  1990  00145E  0E00               	movlw	0
  1991  001460  6E53               	movwf	vfpfcnvrt@done^0,c
  1992                           
  1993                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1994  001462  EF7B  F00A         	goto	l3195
  1995  001466                     l3169:
  1996                           
  1997                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  1998  001466  8059               	bsf	_flags^0,0,c
  1999  001468                     l3171:
  2000                           
  2001                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  2002  001468  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2003  00146C  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2004  001470  2ADE               	incf	postinc2,f,c
  2005  001472  0E00               	movlw	0
  2006  001474  22DD               	addwfc	postdec2,f,c
  2007                           
  2008                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  2009  001476  EF7B  F00A         	goto	l3195
  2010  00147A                     l3173:
  2011                           
  2012                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  2013  00147A  8259               	bsf	_flags^0,1,c
  2014  00147C  EF34  F00A         	goto	l3171
  2015  001480                     l3177:
  2016                           
  2017                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  2018  001480  8459               	bsf	_flags^0,2,c
  2019  001482  EF34  F00A         	goto	l3171
  2020  001486                     l3181:
  2021                           
  2022                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  2023  001486  8659               	bsf	_flags^0,3,c
  2024  001488  EF34  F00A         	goto	l3171
  2025  00148C                     l3185:
  2026                           
  2027                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  2028  00148C  8859               	bsf	_flags^0,4,c
  2029  00148E  EF34  F00A         	goto	l3171
  2030  001492                     l3189:
  2031                           
  2032                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  2033  001492  0E00               	movlw	0
  2034  001494  6E54               	movwf	(vfpfcnvrt@done+1)^0,c
  2035  001496  0E01               	movlw	1
  2036  001498  6E53               	movwf	vfpfcnvrt@done^0,c
  2037                           
  2038                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  2039  00149A  EF7B  F00A         	goto	l3195
  2040  00149E                     l3193:
  2041  00149E  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2042  0014A2  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2043  0014A6  CFDE FFF6          	movff	postinc2,tblptrl
  2044  0014AA  CFDD FFF7          	movff	postdec2,tblptrh
  2045  0014AE                     	if	0	;tblptru may be non-zero
  2046  0014AE                     	endif
  2047  0014AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2048  0014AE  0E00               	movlw	low (__mediumconst shr (0+16))
  2049  0014B0  6EF8               	movwf	tblptru,c
  2050  0014B2                     	endif
  2051  0014B2  0008               	tblrd		*
  2052  0014B4  50F5               	movf	tablat,w,c
  2053  0014B6  6E47               	movwf	??_vfpfcnvrt^0,c
  2054  0014B8  6A48               	clrf	(??_vfpfcnvrt+1)^0,c
  2055                           
  2056                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2057                           ; Switch size 1, requested type "simple"
  2058                           ; Number of cases is 1, Range of values is 0 to 0
  2059                           ; switch strategies available:
  2060                           ; Name         Instructions Cycles
  2061                           ; simple_byte            4     3 (average)
  2062                           ;	Chosen strategy is simple_byte
  2063  0014BA  5048               	movf	(??_vfpfcnvrt+1)^0,w,c
  2064  0014BC  0A00               	xorlw	0	; case 0
  2065  0014BE  B4D8               	btfsc	status,2,c
  2066  0014C0  EF64  F00A         	goto	l3511
  2067  0014C4  EF49  F00A         	goto	l3189
  2068  0014C8                     l3511:
  2069                           
  2070                           ; Switch size 1, requested type "simple"
  2071                           ; Number of cases is 5, Range of values is 32 to 48
  2072                           ; switch strategies available:
  2073                           ; Name         Instructions Cycles
  2074                           ; simple_byte           16     9 (average)
  2075                           ;	Chosen strategy is simple_byte
  2076  0014C8  5047               	movf	??_vfpfcnvrt^0,w,c
  2077  0014CA  0A20               	xorlw	32	; case 32
  2078  0014CC  B4D8               	btfsc	status,2,c
  2079  0014CE  EF43  F00A         	goto	l3181
  2080  0014D2  0A03               	xorlw	3	; case 35
  2081  0014D4  B4D8               	btfsc	status,2,c
  2082  0014D6  EF46  F00A         	goto	l3185
  2083  0014DA  0A08               	xorlw	8	; case 43
  2084  0014DC  B4D8               	btfsc	status,2,c
  2085  0014DE  EF40  F00A         	goto	l3177
  2086  0014E2  0A06               	xorlw	6	; case 45
  2087  0014E4  B4D8               	btfsc	status,2,c
  2088  0014E6  EF33  F00A         	goto	l3169
  2089  0014EA  0A1D               	xorlw	29	; case 48
  2090  0014EC  B4D8               	btfsc	status,2,c
  2091  0014EE  EF3D  F00A         	goto	l3173
  2092  0014F2  EF49  F00A         	goto	l3189
  2093  0014F6                     l3195:
  2094                           
  2095                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2096  0014F6  5053               	movf	vfpfcnvrt@done^0,w,c
  2097  0014F8  1054               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  2098  0014FA  B4D8               	btfsc	status,2,c
  2099  0014FC  EF82  F00A         	goto	u3621
  2100  001500  EF84  F00A         	goto	u3620
  2101  001504                     u3621:
  2102  001504  EF4F  F00A         	goto	l3193
  2103  001508                     u3620:
  2104  001508                     
  2105                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  2106  001508  A059               	btfss	_flags^0,0,c
  2107  00150A  EF89  F00A         	goto	u3631
  2108  00150E  EF8B  F00A         	goto	u3630
  2109  001512                     u3631:
  2110  001512  EF8C  F00A         	goto	l3199
  2111  001516                     u3630:
  2112  001516                     
  2113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  2114  001516  9259               	bcf	_flags^0,1,c
  2115  001518                     l3199:
  2116                           
  2117                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  2118  001518  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2119  00151C  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2120  001520  CFDE FFF6          	movff	postinc2,tblptrl
  2121  001524  CFDD FFF7          	movff	postdec2,tblptrh
  2122  001528                     	if	0	;tblptru may be non-zero
  2123  001528                     	endif
  2124  001528                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2125  001528  0E00               	movlw	low (__mediumconst shr (0+16))
  2126  00152A  6EF8               	movwf	tblptru,c
  2127  00152C                     	endif
  2128  00152C  0008               	tblrd		*
  2129  00152E  50F5               	movf	tablat,w,c
  2130  001530  0A2A               	xorlw	42
  2131  001532  A4D8               	btfss	status,2,c
  2132  001534  EF9E  F00A         	goto	u3641
  2133  001538  EFA0  F00A         	goto	u3640
  2134  00153C                     u3641:
  2135  00153C  EFCA  F00A         	goto	l3207
  2136  001540                     u3640:
  2137  001540                     
  2138                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  2139  001540  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2140  001544  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2141  001548  2ADE               	incf	postinc2,f,c
  2142  00154A  0E00               	movlw	0
  2143  00154C  22DD               	addwfc	postdec2,f,c
  2144                           
  2145                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2146  00154E  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2147  001552  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2148  001556  CFDF F047          	movff	indf2,??_vfpfcnvrt
  2149  00155A  0E02               	movlw	2
  2150  00155C  26DE               	addwf	postinc2,f,c
  2151  00155E  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  2152  001562  0E00               	movlw	0
  2153  001564  22DD               	addwfc	postdec2,f,c
  2154  001566  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2155  00156A  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2156  00156E  CFDE F0F9          	movff	postinc2,_width
  2157  001572  CFDD F0FA          	movff	postdec2,_width+1
  2158  001576                     
  2159                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  2160  001576  0100               	movlb	0	; () banked
  2161  001578  BFFA               	btfsc	(_width+1)& (0+255),7,b
  2162  00157A  EFC3  F00A         	goto	u3650
  2163  00157E  EFC1  F00A         	goto	u3651
  2164  001582                     u3651:
  2165  001582  EF0F  F00B         	goto	l3217
  2166  001586                     u3650:
  2167  001586                     
  2168                           ; BSR set to: 0
  2169                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2170  001586  8059               	bsf	_flags^0,0,c
  2171                           
  2172                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2173  001588  6DF9               	negf	_width& (0+255),b
  2174  00158A  1FFA               	comf	(_width+1)& (0+255),f,b
  2175  00158C  B0D8               	btfsc	status,0,c
  2176  00158E  2BFA               	incf	(_width+1)& (0+255),f,b
  2177  001590  EF0F  F00B         	goto	l3217
  2178  001594                     l3207:
  2179                           
  2180                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2181  001594  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2182  001598  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2183  00159C  CFDE F009          	movff	postinc2,atoi@s
  2184  0015A0  CFDD F00A          	movff	postdec2,atoi@s+1
  2185  0015A4  EC3D  F00D         	call	_atoi	;wreg free
  2186  0015A8  C009  F0F9         	movff	?_atoi,_width
  2187  0015AC  C00A  F0FA         	movff	?_atoi+1,_width+1
  2188                           
  2189                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2190  0015B0  EFE1  F00A         	goto	l3211
  2191  0015B4                     l3209:
  2192                           
  2193                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2194  0015B4  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2195  0015B8  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2196  0015BC  2ADE               	incf	postinc2,f,c
  2197  0015BE  0E00               	movlw	0
  2198  0015C0  22DD               	addwfc	postdec2,f,c
  2199  0015C2                     l3211:
  2200  0015C2  0ED0               	movlw	208
  2201  0015C4  6E47               	movwf	??_vfpfcnvrt^0,c
  2202  0015C6  0EFF               	movlw	255
  2203  0015C8  6E48               	movwf	(??_vfpfcnvrt+1)^0,c
  2204  0015CA  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2205  0015CE  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2206  0015D2  CFDE FFF6          	movff	postinc2,tblptrl
  2207  0015D6  CFDD FFF7          	movff	postdec2,tblptrh
  2208  0015DA                     	if	0	;tblptru may be non-zero
  2209  0015DA                     	endif
  2210  0015DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2211  0015DA  0E00               	movlw	low (__mediumconst shr (0+16))
  2212  0015DC  6EF8               	movwf	tblptru,c
  2213  0015DE                     	endif
  2214  0015DE  0008               	tblrd		*
  2215  0015E0  50F5               	movf	tablat,w,c
  2216  0015E2  6E49               	movwf	(??_vfpfcnvrt+2)^0,c
  2217  0015E4  6A4A               	clrf	(??_vfpfcnvrt+3)^0,c
  2218  0015E6  5047               	movf	??_vfpfcnvrt^0,w,c
  2219  0015E8  2649               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2220  0015EA  5048               	movf	(??_vfpfcnvrt+1)^0,w,c
  2221  0015EC  224A               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2222  0015EE  504A               	movf	(??_vfpfcnvrt+3)^0,w,c
  2223  0015F0  E10A               	bnz	u3660
  2224  0015F2  0E0A               	movlw	10
  2225  0015F4  5C49               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2226  0015F6  A0D8               	btfss	status,0,c
  2227  0015F8  EF00  F00B         	goto	u3661
  2228  0015FC  EF03  F00B         	goto	u3660
  2229  001600                     u3661:
  2230  001600  0E01               	movlw	1
  2231  001602  EF04  F00B         	goto	u3670
  2232  001606                     u3660:
  2233  001606  0E00               	movlw	0
  2234  001608                     u3670:
  2235  001608  6E55               	movwf	_vfpfcnvrt$1764^0,c
  2236  00160A  6A56               	clrf	(_vfpfcnvrt$1764+1)^0,c
  2237  00160C  5055               	movf	_vfpfcnvrt$1764^0,w,c
  2238  00160E  1056               	iorwf	(_vfpfcnvrt$1764+1)^0,w,c
  2239  001610  A4D8               	btfss	status,2,c
  2240  001612  EF0D  F00B         	goto	u3681
  2241  001616  EF0F  F00B         	goto	u3680
  2242  00161A                     u3681:
  2243  00161A  EFDA  F00A         	goto	l3209
  2244  00161E                     u3680:
  2245  00161E                     l3217:
  2246                           
  2247                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2248  00161E  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2249  001622  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2250  001626  CFDE FFF6          	movff	postinc2,tblptrl
  2251  00162A  CFDD FFF7          	movff	postdec2,tblptrh
  2252  00162E                     	if	0	;tblptru may be non-zero
  2253  00162E                     	endif
  2254  00162E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2255  00162E  0E00               	movlw	low (__mediumconst shr (0+16))
  2256  001630  6EF8               	movwf	tblptru,c
  2257  001632                     	endif
  2258  001632  0008               	tblrd		*
  2259  001634  50F5               	movf	tablat,w,c
  2260  001636  0A64               	xorlw	100
  2261  001638  B4D8               	btfsc	status,2,c
  2262  00163A  EF21  F00B         	goto	u3691
  2263  00163E  EF23  F00B         	goto	u3690
  2264  001642                     u3691:
  2265  001642  EF37  F00B         	goto	l3221
  2266  001646                     u3690:
  2267  001646  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2268  00164A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2269  00164E  CFDE FFF6          	movff	postinc2,tblptrl
  2270  001652  CFDD FFF7          	movff	postdec2,tblptrh
  2271  001656                     	if	0	;tblptru may be non-zero
  2272  001656                     	endif
  2273  001656                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2274  001656  0E00               	movlw	low (__mediumconst shr (0+16))
  2275  001658  6EF8               	movwf	tblptru,c
  2276  00165A                     	endif
  2277  00165A  0008               	tblrd		*
  2278  00165C  50F5               	movf	tablat,w,c
  2279  00165E  0A69               	xorlw	105
  2280  001660  A4D8               	btfss	status,2,c
  2281  001662  EF35  F00B         	goto	u3701
  2282  001666  EF37  F00B         	goto	u3700
  2283  00166A                     u3701:
  2284  00166A  EF77  F00B         	goto	l3227
  2285  00166E                     u3700:
  2286  00166E                     l3221:
  2287                           
  2288                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2289  00166E  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2290  001672  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2291  001676  2ADE               	incf	postinc2,f,c
  2292  001678  0E00               	movlw	0
  2293  00167A  22DD               	addwfc	postdec2,f,c
  2294                           
  2295                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2296  00167C  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2297  001680  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2298  001684  CFDF F047          	movff	indf2,??_vfpfcnvrt
  2299  001688  0E02               	movlw	2
  2300  00168A  26DE               	addwf	postinc2,f,c
  2301  00168C  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  2302  001690  0E00               	movlw	0
  2303  001692  22DD               	addwfc	postdec2,f,c
  2304  001694  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2305  001698  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2306  00169C  CFDE F04B          	movff	postinc2,vfpfcnvrt@ll
  2307  0016A0  CFDD F04C          	movff	postdec2,vfpfcnvrt@ll+1
  2308  0016A4  0E00               	movlw	0
  2309  0016A6  BE4C               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2310  0016A8  0EFF               	movlw	-1
  2311  0016AA  6E4D               	movwf	(vfpfcnvrt@ll+2)^0,c
  2312  0016AC  6E4E               	movwf	(vfpfcnvrt@ll+3)^0,c
  2313  0016AE  6E4F               	movwf	(vfpfcnvrt@ll+4)^0,c
  2314  0016B0  6E50               	movwf	(vfpfcnvrt@ll+5)^0,c
  2315  0016B2  6E51               	movwf	(vfpfcnvrt@ll+6)^0,c
  2316  0016B4  6E52               	movwf	(vfpfcnvrt@ll+7)^0,c
  2317  0016B6                     
  2318                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2319  0016B6  C041  F01D         	movff	vfpfcnvrt@fp,dtoa@fp
  2320  0016BA  C042  F01E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2321  0016BE  C04B  F01F         	movff	vfpfcnvrt@ll,dtoa@d
  2322  0016C2  C04C  F020         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2323  0016C6  C04D  F021         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2324  0016CA  C04E  F022         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2325  0016CE  C04F  F023         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2326  0016D2  C050  F024         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2327  0016D6  C051  F025         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2328  0016DA  C052  F026         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2329  0016DE  ECCD  F00B         	call	_dtoa	;wreg free
  2330  0016E2  C01D  F041         	movff	?_dtoa,?_vfpfcnvrt
  2331  0016E6  C01E  F042         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2332  0016EA  EFCC  F00B         	goto	l1037
  2333  0016EE                     l3227:
  2334                           
  2335                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2336  0016EE  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2337  0016F2  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2338  0016F6  CFDE FFF6          	movff	postinc2,tblptrl
  2339  0016FA  CFDD FFF7          	movff	postdec2,tblptrh
  2340  0016FE                     	if	0	;tblptru may be non-zero
  2341  0016FE                     	endif
  2342  0016FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2343  0016FE  0E00               	movlw	low (__mediumconst shr (0+16))
  2344  001700  6EF8               	movwf	tblptru,c
  2345  001702                     	endif
  2346  001702  0008               	tblrd		*
  2347  001704  50F5               	movf	tablat,w,c
  2348  001706  0A25               	xorlw	37
  2349  001708  A4D8               	btfss	status,2,c
  2350  00170A  EF89  F00B         	goto	u3711
  2351  00170E  EF8B  F00B         	goto	u3710
  2352  001712                     u3711:
  2353  001712  EFA2  F00B         	goto	l3237
  2354  001716                     u3710:
  2355  001716                     
  2356                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2357  001716  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2358  00171A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2359  00171E  2ADE               	incf	postinc2,f,c
  2360  001720  0E00               	movlw	0
  2361  001722  22DD               	addwfc	postdec2,f,c
  2362  001724                     
  2363                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2364  001724  0E00               	movlw	0
  2365  001726  6E03               	movwf	(fputc@c+1)^0,c
  2366  001728  0E25               	movlw	37
  2367  00172A  6E02               	movwf	fputc@c^0,c
  2368  00172C  C041  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2369  001730  C042  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2370  001734  ECF2  F00F         	call	_fputc	;wreg free
  2371  001738                     l3233:
  2372                           
  2373                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2374  001738  0E00               	movlw	0
  2375  00173A  6E42               	movwf	(?_vfpfcnvrt+1)^0,c
  2376  00173C  0E01               	movlw	1
  2377  00173E  6E41               	movwf	?_vfpfcnvrt^0,c
  2378  001740  EFCC  F00B         	goto	l1037
  2379  001744                     l3237:
  2380                           
  2381                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2382  001744  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2383  001748  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2384  00174C  2ADE               	incf	postinc2,f,c
  2385  00174E  0E00               	movlw	0
  2386  001750  22DD               	addwfc	postdec2,f,c
  2387  001752                     
  2388                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2389  001752  0E00               	movlw	0
  2390  001754  6E42               	movwf	(?_vfpfcnvrt+1)^0,c
  2391  001756  0E00               	movlw	0
  2392  001758  6E41               	movwf	?_vfpfcnvrt^0,c
  2393  00175A  EFCC  F00B         	goto	l1037
  2394  00175E                     l3243:
  2395                           
  2396                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2397  00175E  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2398  001762  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2399  001766  CFDE FFF6          	movff	postinc2,tblptrl
  2400  00176A  CFDD FFF7          	movff	postdec2,tblptrh
  2401  00176E                     	if	0	;tblptru may be non-zero
  2402  00176E                     	endif
  2403  00176E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2404  00176E  0E00               	movlw	low (__mediumconst shr (0+16))
  2405  001770  6EF8               	movwf	tblptru,c
  2406  001772                     	endif
  2407  001772  0008               	tblrd		*
  2408  001774  50F5               	movf	tablat,w,c
  2409  001776  6E02               	movwf	fputc@c^0,c
  2410  001778  6A03               	clrf	(fputc@c+1)^0,c
  2411  00177A  C041  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2412  00177E  C042  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2413  001782  ECF2  F00F         	call	_fputc	;wreg free
  2414  001786                     
  2415                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2416  001786  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2417  00178A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2418  00178E  2ADE               	incf	postinc2,f,c
  2419  001790  0E00               	movlw	0
  2420  001792  22DD               	addwfc	postdec2,f,c
  2421  001794  EF9C  F00B         	goto	l3233
  2422  001798                     l1037:
  2423  001798  0012               	return		;funcret
  2424  00179A                     __end_of_vfpfcnvrt:
  2425                           	callstack 0
  2426                           
  2427 ;; *************** function _dtoa *****************
  2428 ;; Defined at:
  2429 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2430 ;; Parameters:    Size  Location     Type
  2431 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  2432 ;;		 -> sprintf@f(6), 
  2433 ;;  d               8   30[COMRAM] long long 
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;  n               8   54[COMRAM] long long 
  2436 ;;  i               2   62[COMRAM] int 
  2437 ;;  s               2   52[COMRAM] int 
  2438 ;;  w               2   50[COMRAM] int 
  2439 ;;  p               2   48[COMRAM] int 
  2440 ;; Return value:  Size  Location     Type
  2441 ;;                  2   28[COMRAM] int 
  2442 ;; Registers used:
  2443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2444 ;; Tracked objects:
  2445 ;;		On entry : 0/0
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2449 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2450 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2451 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2452 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2453 ;;Total ram usage:       36 bytes
  2454 ;; Hardware stack levels used: 1
  2455 ;; Hardware stack levels required when called: 5
  2456 ;; This function calls:
  2457 ;;		___aodiv
  2458 ;;		___aomod
  2459 ;;		_abs
  2460 ;;		_pad
  2461 ;; This function is called by:
  2462 ;;		_vfpfcnvrt
  2463 ;; This function uses a non-reentrant model
  2464 ;;
  2465                           
  2466                           	psect	text4
  2467  00179A                     __ptext4:
  2468                           	callstack 0
  2469  00179A                     _dtoa:
  2470                           	callstack 22
  2471  00179A                     
  2472                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2473  00179A  C01F  F037         	movff	dtoa@d,dtoa@n
  2474  00179E  C020  F038         	movff	dtoa@d+1,dtoa@n+1
  2475  0017A2  C021  F039         	movff	dtoa@d+2,dtoa@n+2
  2476  0017A6  C022  F03A         	movff	dtoa@d+3,dtoa@n+3
  2477  0017AA  C023  F03B         	movff	dtoa@d+4,dtoa@n+4
  2478  0017AE  C024  F03C         	movff	dtoa@d+5,dtoa@n+5
  2479  0017B2  C025  F03D         	movff	dtoa@d+6,dtoa@n+6
  2480  0017B6  C026  F03E         	movff	dtoa@d+7,dtoa@n+7
  2481  0017BA                     
  2482                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2483  0017BA  BE3E               	btfsc	(dtoa@n+7)^0,7,c
  2484  0017BC  EFE2  F00B         	goto	u3391
  2485  0017C0  EFE5  F00B         	goto	u3390
  2486  0017C4                     u3391:
  2487  0017C4  0E01               	movlw	1
  2488  0017C6  EFE6  F00B         	goto	u3400
  2489  0017CA                     u3390:
  2490  0017CA  0E00               	movlw	0
  2491  0017CC                     u3400:
  2492  0017CC  6E35               	movwf	dtoa@s^0,c
  2493  0017CE  6A36               	clrf	(dtoa@s+1)^0,c
  2494                           
  2495                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2496  0017D0  5035               	movf	dtoa@s^0,w,c
  2497  0017D2  1036               	iorwf	(dtoa@s+1)^0,w,c
  2498  0017D4  B4D8               	btfsc	status,2,c
  2499  0017D6  EFEF  F00B         	goto	u3411
  2500  0017DA  EFF1  F00B         	goto	u3410
  2501  0017DE                     u3411:
  2502  0017DE  EF01  F00C         	goto	l3061
  2503  0017E2                     u3410:
  2504  0017E2                     
  2505                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2506  0017E2  1E3E               	comf	(dtoa@n+7)^0,f,c
  2507  0017E4  1E3D               	comf	(dtoa@n+6)^0,f,c
  2508  0017E6  1E3C               	comf	(dtoa@n+5)^0,f,c
  2509  0017E8  1E3B               	comf	(dtoa@n+4)^0,f,c
  2510  0017EA  1E3A               	comf	(dtoa@n+3)^0,f,c
  2511  0017EC  1E39               	comf	(dtoa@n+2)^0,f,c
  2512  0017EE  1E38               	comf	(dtoa@n+1)^0,f,c
  2513  0017F0  6C37               	negf	dtoa@n^0,c
  2514  0017F2  0E00               	movlw	0
  2515  0017F4  2238               	addwfc	(dtoa@n+1)^0,f,c
  2516  0017F6  2239               	addwfc	(dtoa@n+2)^0,f,c
  2517  0017F8  223A               	addwfc	(dtoa@n+3)^0,f,c
  2518  0017FA  223B               	addwfc	(dtoa@n+4)^0,f,c
  2519  0017FC  223C               	addwfc	(dtoa@n+5)^0,f,c
  2520  0017FE  223D               	addwfc	(dtoa@n+6)^0,f,c
  2521  001800  223E               	addwfc	(dtoa@n+7)^0,f,c
  2522  001802                     l3061:
  2523                           
  2524                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2525  001802  0100               	movlb	0	; () banked
  2526  001804  BFFC               	btfsc	(_prec+1)& (0+255),7,b
  2527  001806  EF07  F00C         	goto	u3421
  2528  00180A  EF09  F00C         	goto	u3420
  2529  00180E                     u3421:
  2530  00180E  EF0A  F00C         	goto	l3065
  2531  001812                     u3420:
  2532  001812                     
  2533                           ; BSR set to: 0
  2534                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2535  001812  9259               	bcf	_flags^0,1,c
  2536  001814                     l3065:
  2537                           
  2538                           ; BSR set to: 0
  2539                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2540  001814  BFFC               	btfsc	(_prec+1)& (0+255),7,b
  2541  001816  EF17  F00C         	goto	u3430
  2542  00181A  51FC               	movf	(_prec+1)& (0+255),w,b
  2543  00181C  E106               	bnz	u3431
  2544  00181E  05FB               	decf	_prec& (0+255),w,b
  2545  001820  B0D8               	btfsc	status,0,c
  2546  001822  EF15  F00C         	goto	u3431
  2547  001826  EF17  F00C         	goto	u3430
  2548  00182A                     u3431:
  2549  00182A  EF1D  F00C         	goto	l988
  2550  00182E                     u3430:
  2551  00182E                     
  2552                           ; BSR set to: 0
  2553  00182E  0E00               	movlw	0
  2554  001830  6E32               	movwf	(dtoa@p+1)^0,c
  2555  001832  0E01               	movlw	1
  2556  001834  6E31               	movwf	dtoa@p^0,c
  2557  001836  EF21  F00C         	goto	l990
  2558  00183A                     l988:
  2559                           
  2560                           ; BSR set to: 0
  2561  00183A  C0FB  F031         	movff	_prec,dtoa@p
  2562  00183E  C0FC  F032         	movff	_prec+1,dtoa@p+1
  2563  001842                     l990:
  2564                           
  2565                           ; BSR set to: 0
  2566                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2567  001842  C0F9  F033         	movff	_width,dtoa@w
  2568  001846  C0FA  F034         	movff	_width+1,dtoa@w+1
  2569  00184A                     
  2570                           ; BSR set to: 0
  2571                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2572  00184A  5035               	movf	dtoa@s^0,w,c
  2573  00184C  1036               	iorwf	(dtoa@s+1)^0,w,c
  2574  00184E  A4D8               	btfss	status,2,c
  2575  001850  EF2C  F00C         	goto	u3441
  2576  001854  EF2E  F00C         	goto	u3440
  2577  001858                     u3441:
  2578  001858  EF35  F00C         	goto	l3073
  2579  00185C                     u3440:
  2580  00185C                     
  2581                           ; BSR set to: 0
  2582  00185C  A459               	btfss	_flags^0,2,c
  2583  00185E  EF33  F00C         	goto	u3451
  2584  001862  EF35  F00C         	goto	u3450
  2585  001866                     u3451:
  2586  001866  EF38  F00C         	goto	l3075
  2587  00186A                     u3450:
  2588  00186A                     l3073:
  2589                           
  2590                           ; BSR set to: 0
  2591                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  2592  00186A  0633               	decf	dtoa@w^0,f,c
  2593  00186C  A0D8               	btfss	status,0,c
  2594  00186E  0634               	decf	(dtoa@w+1)^0,f,c
  2595  001870                     l3075:
  2596                           
  2597                           ; BSR set to: 0
  2598                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2599  001870  0E00               	movlw	0
  2600  001872  6E40               	movwf	(dtoa@i+1)^0,c
  2601  001874  0E1F               	movlw	31
  2602  001876  6E3F               	movwf	dtoa@i^0,c
  2603  001878                     
  2604                           ; BSR set to: 0
  2605                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2606  001878  0E00               	movlw	0
  2607  00187A  0101               	movlb	1	; () banked
  2608  00187C  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2609                           
  2610                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2611  00187E  EFBD  F00C         	goto	l3089
  2612  001882                     l3079:
  2613                           
  2614                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  2615  001882  063F               	decf	dtoa@i^0,f,c
  2616  001884  A0D8               	btfss	status,0,c
  2617  001886  0640               	decf	(dtoa@i+1)^0,f,c
  2618  001888                     
  2619                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2620  001888  0E00               	movlw	low _dbuf
  2621  00188A  243F               	addwf	dtoa@i^0,w,c
  2622  00188C  6ED9               	movwf	fsr2l,c
  2623  00188E  0E01               	movlw	high _dbuf
  2624  001890  2040               	addwfc	(dtoa@i+1)^0,w,c
  2625  001892  6EDA               	movwf	fsr2h,c
  2626  001894  C037  F002         	movff	dtoa@n,___aomod@dividend
  2627  001898  C038  F003         	movff	dtoa@n+1,___aomod@dividend+1
  2628  00189C  C039  F004         	movff	dtoa@n+2,___aomod@dividend+2
  2629  0018A0  C03A  F005         	movff	dtoa@n+3,___aomod@dividend+3
  2630  0018A4  C03B  F006         	movff	dtoa@n+4,___aomod@dividend+4
  2631  0018A8  C03C  F007         	movff	dtoa@n+5,___aomod@dividend+5
  2632  0018AC  C03D  F008         	movff	dtoa@n+6,___aomod@dividend+6
  2633  0018B0  C03E  F009         	movff	dtoa@n+7,___aomod@dividend+7
  2634  0018B4  0E0A               	movlw	10
  2635  0018B6  6E0A               	movwf	___aomod@divisor^0,c
  2636  0018B8  0E00               	movlw	0
  2637  0018BA  6E0B               	movwf	(___aomod@divisor+1)^0,c
  2638  0018BC  0E00               	movlw	0
  2639  0018BE  6E0C               	movwf	(___aomod@divisor+2)^0,c
  2640  0018C0  0E00               	movlw	0
  2641  0018C2  6E0D               	movwf	(___aomod@divisor+3)^0,c
  2642  0018C4  0E00               	movlw	0
  2643  0018C6  6E0E               	movwf	(___aomod@divisor+4)^0,c
  2644  0018C8  0E00               	movlw	0
  2645  0018CA  6E0F               	movwf	(___aomod@divisor+5)^0,c
  2646  0018CC  0E00               	movlw	0
  2647  0018CE  6E10               	movwf	(___aomod@divisor+6)^0,c
  2648  0018D0  0E00               	movlw	0
  2649  0018D2  6E11               	movwf	(___aomod@divisor+7)^0,c
  2650  0018D4  ECD3  F00E         	call	___aomod	;wreg free
  2651  0018D8  C002  F027         	movff	?___aomod,??_dtoa
  2652  0018DC  C003  F028         	movff	?___aomod+1,??_dtoa+1
  2653  0018E0  C004  F029         	movff	?___aomod+2,??_dtoa+2
  2654  0018E4  C005  F02A         	movff	?___aomod+3,??_dtoa+3
  2655  0018E8  C006  F02B         	movff	?___aomod+4,??_dtoa+4
  2656  0018EC  C007  F02C         	movff	?___aomod+5,??_dtoa+5
  2657  0018F0  C008  F02D         	movff	?___aomod+6,??_dtoa+6
  2658  0018F4  C009  F02E         	movff	?___aomod+7,??_dtoa+7
  2659  0018F8  C027  F014         	movff	??_dtoa,abs@a
  2660  0018FC  C029  F015         	movff	??_dtoa+2,abs@a+1
  2661  001900  EC54  F012         	call	_abs	;wreg free
  2662  001904  5014               	movf	?_abs^0,w,c
  2663  001906  0F30               	addlw	48
  2664  001908  6EDF               	movwf	indf2,c
  2665  00190A                     
  2666                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  2667  00190A  0631               	decf	dtoa@p^0,f,c
  2668  00190C  A0D8               	btfss	status,0,c
  2669  00190E  0632               	decf	(dtoa@p+1)^0,f,c
  2670  001910                     
  2671                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  2672  001910  0633               	decf	dtoa@w^0,f,c
  2673  001912  A0D8               	btfss	status,0,c
  2674  001914  0634               	decf	(dtoa@w+1)^0,f,c
  2675  001916                     
  2676                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2677  001916  C037  F002         	movff	dtoa@n,___aodiv@dividend
  2678  00191A  C038  F003         	movff	dtoa@n+1,___aodiv@dividend+1
  2679  00191E  C039  F004         	movff	dtoa@n+2,___aodiv@dividend+2
  2680  001922  C03A  F005         	movff	dtoa@n+3,___aodiv@dividend+3
  2681  001926  C03B  F006         	movff	dtoa@n+4,___aodiv@dividend+4
  2682  00192A  C03C  F007         	movff	dtoa@n+5,___aodiv@dividend+5
  2683  00192E  C03D  F008         	movff	dtoa@n+6,___aodiv@dividend+6
  2684  001932  C03E  F009         	movff	dtoa@n+7,___aodiv@dividend+7
  2685  001936  0E0A               	movlw	10
  2686  001938  6E0A               	movwf	___aodiv@divisor^0,c
  2687  00193A  0E00               	movlw	0
  2688  00193C  6E0B               	movwf	(___aodiv@divisor+1)^0,c
  2689  00193E  0E00               	movlw	0
  2690  001940  6E0C               	movwf	(___aodiv@divisor+2)^0,c
  2691  001942  0E00               	movlw	0
  2692  001944  6E0D               	movwf	(___aodiv@divisor+3)^0,c
  2693  001946  0E00               	movlw	0
  2694  001948  6E0E               	movwf	(___aodiv@divisor+4)^0,c
  2695  00194A  0E00               	movlw	0
  2696  00194C  6E0F               	movwf	(___aodiv@divisor+5)^0,c
  2697  00194E  0E00               	movlw	0
  2698  001950  6E10               	movwf	(___aodiv@divisor+6)^0,c
  2699  001952  0E00               	movlw	0
  2700  001954  6E11               	movwf	(___aodiv@divisor+7)^0,c
  2701  001956  EC0F  F00E         	call	___aodiv	;wreg free
  2702  00195A  C002  F037         	movff	?___aodiv,dtoa@n
  2703  00195E  C003  F038         	movff	?___aodiv+1,dtoa@n+1
  2704  001962  C004  F039         	movff	?___aodiv+2,dtoa@n+2
  2705  001966  C005  F03A         	movff	?___aodiv+3,dtoa@n+3
  2706  00196A  C006  F03B         	movff	?___aodiv+4,dtoa@n+4
  2707  00196E  C007  F03C         	movff	?___aodiv+5,dtoa@n+5
  2708  001972  C008  F03D         	movff	?___aodiv+6,dtoa@n+6
  2709  001976  C009  F03E         	movff	?___aodiv+7,dtoa@n+7
  2710  00197A                     l3089:
  2711                           
  2712                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2713  00197A  BE40               	btfsc	(dtoa@i+1)^0,7,c
  2714  00197C  EFC8  F00C         	goto	u3461
  2715  001980  5040               	movf	(dtoa@i+1)^0,w,c
  2716  001982  E108               	bnz	u3460
  2717  001984  043F               	decf	dtoa@i^0,w,c
  2718  001986  A0D8               	btfss	status,0,c
  2719  001988  EFC8  F00C         	goto	u3461
  2720  00198C  EFCA  F00C         	goto	u3460
  2721  001990                     u3461:
  2722  001990  EFFA  F00C         	goto	l3099
  2723  001994                     u3460:
  2724  001994  5037               	movf	dtoa@n^0,w,c
  2725  001996  1038               	iorwf	(dtoa@n+1)^0,w,c
  2726  001998  1039               	iorwf	(dtoa@n+2)^0,w,c
  2727  00199A  103A               	iorwf	(dtoa@n+3)^0,w,c
  2728  00199C  103B               	iorwf	(dtoa@n+4)^0,w,c
  2729  00199E  103C               	iorwf	(dtoa@n+5)^0,w,c
  2730  0019A0  103D               	iorwf	(dtoa@n+6)^0,w,c
  2731  0019A2  103E               	iorwf	(dtoa@n+7)^0,w,c
  2732  0019A4  A4D8               	btfss	status,2,c
  2733  0019A6  EFD7  F00C         	goto	u3471
  2734  0019AA  EFD9  F00C         	goto	u3470
  2735  0019AE                     u3471:
  2736  0019AE  EF41  F00C         	goto	l3079
  2737  0019B2                     u3470:
  2738  0019B2  BE32               	btfsc	(dtoa@p+1)^0,7,c
  2739  0019B4  EFE6  F00C         	goto	u3480
  2740  0019B8  5032               	movf	(dtoa@p+1)^0,w,c
  2741  0019BA  E106               	bnz	u3481
  2742  0019BC  0431               	decf	dtoa@p^0,w,c
  2743  0019BE  B0D8               	btfsc	status,0,c
  2744  0019C0  EFE4  F00C         	goto	u3481
  2745  0019C4  EFE6  F00C         	goto	u3480
  2746  0019C8                     u3481:
  2747  0019C8  EF41  F00C         	goto	l3079
  2748  0019CC                     u3480:
  2749  0019CC  BE34               	btfsc	(dtoa@w+1)^0,7,c
  2750  0019CE  EFF1  F00C         	goto	u3491
  2751  0019D2  5034               	movf	(dtoa@w+1)^0,w,c
  2752  0019D4  E108               	bnz	u3490
  2753  0019D6  0433               	decf	dtoa@w^0,w,c
  2754  0019D8  A0D8               	btfss	status,0,c
  2755  0019DA  EFF1  F00C         	goto	u3491
  2756  0019DE  EFF3  F00C         	goto	u3490
  2757  0019E2                     u3491:
  2758  0019E2  EFFA  F00C         	goto	l3099
  2759  0019E6                     u3490:
  2760  0019E6  B259               	btfsc	_flags^0,1,c
  2761  0019E8  EFF8  F00C         	goto	u3501
  2762  0019EC  EFFA  F00C         	goto	u3500
  2763  0019F0                     u3501:
  2764  0019F0  EF41  F00C         	goto	l3079
  2765  0019F4                     u3500:
  2766  0019F4                     l3099:
  2767                           
  2768                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2769  0019F4  5035               	movf	dtoa@s^0,w,c
  2770  0019F6  1036               	iorwf	(dtoa@s+1)^0,w,c
  2771  0019F8  A4D8               	btfss	status,2,c
  2772  0019FA  EF01  F00D         	goto	u3511
  2773  0019FE  EF03  F00D         	goto	u3510
  2774  001A02                     u3511:
  2775  001A02  EF0A  F00D         	goto	l3103
  2776  001A06                     u3510:
  2777  001A06  A459               	btfss	_flags^0,2,c
  2778  001A08  EF08  F00D         	goto	u3521
  2779  001A0C  EF0A  F00D         	goto	u3520
  2780  001A10                     u3521:
  2781  001A10  EF28  F00D         	goto	l3113
  2782  001A14                     u3520:
  2783  001A14                     l3103:
  2784                           
  2785                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  2786  001A14  063F               	decf	dtoa@i^0,f,c
  2787  001A16  A0D8               	btfss	status,0,c
  2788  001A18  0640               	decf	(dtoa@i+1)^0,f,c
  2789  001A1A                     
  2790                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2791  001A1A  5035               	movf	dtoa@s^0,w,c
  2792  001A1C  1036               	iorwf	(dtoa@s+1)^0,w,c
  2793  001A1E  A4D8               	btfss	status,2,c
  2794  001A20  EF14  F00D         	goto	u3531
  2795  001A24  EF16  F00D         	goto	u3530
  2796  001A28                     u3531:
  2797  001A28  EF1C  F00D         	goto	l3109
  2798  001A2C                     u3530:
  2799  001A2C  0E00               	movlw	0
  2800  001A2E  6E30               	movwf	(_dtoa$1749+1)^0,c
  2801  001A30  0E2B               	movlw	43
  2802  001A32  6E2F               	movwf	_dtoa$1749^0,c
  2803  001A34  EF20  F00D         	goto	l3111
  2804  001A38                     l3109:
  2805  001A38  0E00               	movlw	0
  2806  001A3A  6E30               	movwf	(_dtoa$1749+1)^0,c
  2807  001A3C  0E2D               	movlw	45
  2808  001A3E  6E2F               	movwf	_dtoa$1749^0,c
  2809  001A40                     l3111:
  2810  001A40  0E00               	movlw	low _dbuf
  2811  001A42  243F               	addwf	dtoa@i^0,w,c
  2812  001A44  6ED9               	movwf	fsr2l,c
  2813  001A46  0E01               	movlw	high _dbuf
  2814  001A48  2040               	addwfc	(dtoa@i+1)^0,w,c
  2815  001A4A  6EDA               	movwf	fsr2h,c
  2816  001A4C  C02F  FFDF         	movff	_dtoa$1749,indf2
  2817  001A50                     l3113:
  2818                           
  2819                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2820  001A50  C01D  F012         	movff	dtoa@fp,pad@fp
  2821  001A54  C01E  F013         	movff	dtoa@fp+1,pad@fp+1
  2822  001A58  0E00               	movlw	low _dbuf
  2823  001A5A  243F               	addwf	dtoa@i^0,w,c
  2824  001A5C  6E14               	movwf	pad@buf^0,c
  2825  001A5E  0E01               	movlw	high _dbuf
  2826  001A60  2040               	addwfc	(dtoa@i+1)^0,w,c
  2827  001A62  6E15               	movwf	(pad@buf+1)^0,c
  2828  001A64  C033  F016         	movff	dtoa@w,pad@p
  2829  001A68  C034  F017         	movff	dtoa@w+1,pad@p+1
  2830  001A6C  ECBB  F010         	call	_pad	;wreg free
  2831  001A70  C012  F01D         	movff	?_pad,?_dtoa
  2832  001A74  C013  F01E         	movff	?_pad+1,?_dtoa+1
  2833  001A78  0012               	return		;funcret
  2834  001A7A                     __end_of_dtoa:
  2835                           	callstack 0
  2836                           
  2837 ;; *************** function _pad *****************
  2838 ;; Defined at:
  2839 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2840 ;; Parameters:    Size  Location     Type
  2841 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  2842 ;;		 -> sprintf@f(6), 
  2843 ;;  buf             2   19[COMRAM] PTR unsigned char 
  2844 ;;		 -> dbuf(32), 
  2845 ;;  p               2   21[COMRAM] int 
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;  w               2   26[COMRAM] int 
  2848 ;;  i               2   24[COMRAM] int 
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  2   17[COMRAM] int 
  2851 ;; Registers used:
  2852 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2858 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2859 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2860 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2861 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2862 ;;Total ram usage:       11 bytes
  2863 ;; Hardware stack levels used: 1
  2864 ;; Hardware stack levels required when called: 4
  2865 ;; This function calls:
  2866 ;;		_fputc
  2867 ;;		_fputs
  2868 ;;		_strlen
  2869 ;; This function is called by:
  2870 ;;		_dtoa
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           	psect	text5
  2875  002176                     __ptext5:
  2876                           	callstack 0
  2877  002176                     _pad:
  2878                           	callstack 22
  2879  002176                     
  2880                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2881  002176  A059               	btfss	_flags^0,0,c
  2882  002178  EFC0  F010         	goto	u3301
  2883  00217C  EFC2  F010         	goto	u3300
  2884  002180                     u3301:
  2885  002180  EFCC  F010         	goto	l3017
  2886  002184                     u3300:
  2887  002184                     
  2888                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2889  002184  C014  F00B         	movff	pad@buf,fputs@s
  2890  002188  C015  F00C         	movff	pad@buf+1,fputs@s+1
  2891  00218C  C012  F00D         	movff	pad@fp,fputs@fp
  2892  002190  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  2893  002194  EC32  F012         	call	_fputs	;wreg free
  2894  002198                     l3017:
  2895                           
  2896                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2897  002198  BE17               	btfsc	(pad@p+1)^0,7,c
  2898  00219A  EFD1  F010         	goto	u3311
  2899  00219E  EFD3  F010         	goto	u3310
  2900  0021A2                     u3311:
  2901  0021A2  EFD9  F010         	goto	l3021
  2902  0021A6                     u3310:
  2903  0021A6  C016  F01B         	movff	pad@p,pad@w
  2904  0021AA  C017  F01C         	movff	pad@p+1,pad@w+1
  2905  0021AE  EFDD  F010         	goto	l977
  2906  0021B2                     l3021:
  2907  0021B2  0E00               	movlw	0
  2908  0021B4  6E1C               	movwf	(pad@w+1)^0,c
  2909  0021B6  0E00               	movlw	0
  2910  0021B8  6E1B               	movwf	pad@w^0,c
  2911  0021BA                     l977:
  2912                           
  2913                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2914  0021BA  0E00               	movlw	0
  2915  0021BC  6E1A               	movwf	(pad@i+1)^0,c
  2916  0021BE  0E00               	movlw	0
  2917  0021C0  6E19               	movwf	pad@i^0,c
  2918                           
  2919                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2920  0021C2  EFEF  F010         	goto	l3027
  2921  0021C6                     l3023:
  2922                           
  2923                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2924  0021C6  0E00               	movlw	0
  2925  0021C8  6E03               	movwf	(fputc@c+1)^0,c
  2926  0021CA  0E20               	movlw	32
  2927  0021CC  6E02               	movwf	fputc@c^0,c
  2928  0021CE  C012  F004         	movff	pad@fp,fputc@fp
  2929  0021D2  C013  F005         	movff	pad@fp+1,fputc@fp+1
  2930  0021D6  ECF2  F00F         	call	_fputc	;wreg free
  2931  0021DA                     
  2932                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2933  0021DA  4A19               	infsnz	pad@i^0,f,c
  2934  0021DC  2A1A               	incf	(pad@i+1)^0,f,c
  2935  0021DE                     l3027:
  2936                           
  2937                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2938  0021DE  501B               	movf	pad@w^0,w,c
  2939  0021E0  5C19               	subwf	pad@i^0,w,c
  2940  0021E2  501A               	movf	(pad@i+1)^0,w,c
  2941  0021E4  0A80               	xorlw	128
  2942  0021E6  6E18               	movwf	??_pad^0,c
  2943  0021E8  501C               	movf	(pad@w+1)^0,w,c
  2944  0021EA  0A80               	xorlw	128
  2945  0021EC  5818               	subwfb	??_pad^0,w,c
  2946  0021EE  A0D8               	btfss	status,0,c
  2947  0021F0  EFFC  F010         	goto	u3321
  2948  0021F4  EFFE  F010         	goto	u3320
  2949  0021F8                     u3321:
  2950  0021F8  EFE3  F010         	goto	l3023
  2951  0021FC                     u3320:
  2952  0021FC                     
  2953                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2954  0021FC  B059               	btfsc	_flags^0,0,c
  2955  0021FE  EF03  F011         	goto	u3331
  2956  002202  EF05  F011         	goto	u3330
  2957  002206                     u3331:
  2958  002206  EF0F  F011         	goto	l3031
  2959  00220A                     u3330:
  2960  00220A                     
  2961                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2962  00220A  C014  F00B         	movff	pad@buf,fputs@s
  2963  00220E  C015  F00C         	movff	pad@buf+1,fputs@s+1
  2964  002212  C012  F00D         	movff	pad@fp,fputs@fp
  2965  002216  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  2966  00221A  EC32  F012         	call	_fputs	;wreg free
  2967  00221E                     l3031:
  2968                           
  2969                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2970  00221E  C014  F002         	movff	pad@buf,strlen@s
  2971  002222  C015  F003         	movff	pad@buf+1,strlen@s+1
  2972  002226  EC90  F012         	call	_strlen	;wreg free
  2973  00222A  501B               	movf	pad@w^0,w,c
  2974  00222C  2402               	addwf	?_strlen^0,w,c
  2975  00222E  6E12               	movwf	?_pad^0,c
  2976  002230  501C               	movf	(pad@w+1)^0,w,c
  2977  002232  2003               	addwfc	(?_strlen+1)^0,w,c
  2978  002234  6E13               	movwf	(?_pad+1)^0,c
  2979  002236  0012               	return		;funcret
  2980  002238                     __end_of_pad:
  2981                           	callstack 0
  2982                           
  2983 ;; *************** function _strlen *****************
  2984 ;; Defined at:
  2985 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  2986 ;; Parameters:    Size  Location     Type
  2987 ;;  s               2    1[COMRAM] PTR const unsigned char 
  2988 ;;		 -> dbuf(32), 
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;  a               2    3[COMRAM] PTR const unsigned char 
  2991 ;;		 -> dbuf(32), 
  2992 ;; Return value:  Size  Location     Type
  2993 ;;                  2    1[COMRAM] unsigned int 
  2994 ;; Registers used:
  2995 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2996 ;; Tracked objects:
  2997 ;;		On entry : 0/0
  2998 ;;		On exit  : 0/0
  2999 ;;		Unchanged: 0/0
  3000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3001 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3002 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3004 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3005 ;;Total ram usage:        4 bytes
  3006 ;; Hardware stack levels used: 1
  3007 ;; Hardware stack levels required when called: 1
  3008 ;; This function calls:
  3009 ;;		Nothing
  3010 ;; This function is called by:
  3011 ;;		_pad
  3012 ;; This function uses a non-reentrant model
  3013 ;;
  3014                           
  3015                           	psect	text6
  3016  002520                     __ptext6:
  3017                           	callstack 0
  3018  002520                     _strlen:
  3019                           	callstack 24
  3020  002520  C002  F004         	movff	strlen@s,strlen@a
  3021  002524  C003  F005         	movff	strlen@s+1,strlen@a+1
  3022  002528  EF98  F012         	goto	l2921
  3023  00252C                     l2919:
  3024  00252C  4A02               	infsnz	strlen@s^0,f,c
  3025  00252E  2A03               	incf	(strlen@s+1)^0,f,c
  3026  002530                     l2921:
  3027  002530  C002  FFD9         	movff	strlen@s,fsr2l
  3028  002534  C003  FFDA         	movff	strlen@s+1,fsr2h
  3029  002538  50DF               	movf	indf2,w,c
  3030  00253A  A4D8               	btfss	status,2,c
  3031  00253C  EFA2  F012         	goto	u3161
  3032  002540  EFA4  F012         	goto	u3160
  3033  002544                     u3161:
  3034  002544  EF96  F012         	goto	l2919
  3035  002548                     u3160:
  3036  002548  5004               	movf	strlen@a^0,w,c
  3037  00254A  5C02               	subwf	strlen@s^0,w,c
  3038  00254C  6E02               	movwf	?_strlen^0,c
  3039  00254E  5005               	movf	(strlen@a+1)^0,w,c
  3040  002550  5803               	subwfb	(strlen@s+1)^0,w,c
  3041  002552  6E03               	movwf	(?_strlen+1)^0,c
  3042  002554  0012               	return		;funcret
  3043  002556                     __end_of_strlen:
  3044                           	callstack 0
  3045                           
  3046 ;; *************** function _fputs *****************
  3047 ;; Defined at:
  3048 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  3049 ;; Parameters:    Size  Location     Type
  3050 ;;  s               2   10[COMRAM] PTR const unsigned char 
  3051 ;;		 -> dbuf(32), 
  3052 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  3053 ;;		 -> sprintf@f(6), 
  3054 ;; Auto vars:     Size  Location     Type
  3055 ;;  i               2   15[COMRAM] int 
  3056 ;;  c               1   14[COMRAM] unsigned char 
  3057 ;; Return value:  Size  Location     Type
  3058 ;;                  2   10[COMRAM] int 
  3059 ;; Registers used:
  3060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3066 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3067 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3069 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3070 ;;Total ram usage:        7 bytes
  3071 ;; Hardware stack levels used: 1
  3072 ;; Hardware stack levels required when called: 3
  3073 ;; This function calls:
  3074 ;;		_fputc
  3075 ;; This function is called by:
  3076 ;;		_pad
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079                           
  3080                           	psect	text7
  3081  002464                     __ptext7:
  3082                           	callstack 0
  3083  002464                     _fputs:
  3084                           	callstack 22
  3085  002464  0E00               	movlw	0
  3086  002466  6E11               	movwf	(fputs@i+1)^0,c
  3087  002468  0E00               	movlw	0
  3088  00246A  6E10               	movwf	fputs@i^0,c
  3089  00246C  EF43  F012         	goto	l2915
  3090  002470                     l2911:
  3091  002470  C00F  F002         	movff	fputs@c,fputc@c
  3092  002474  6A03               	clrf	(fputc@c+1)^0,c
  3093  002476  C00D  F004         	movff	fputs@fp,fputc@fp
  3094  00247A  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  3095  00247E  ECF2  F00F         	call	_fputc	;wreg free
  3096  002482  4A10               	infsnz	fputs@i^0,f,c
  3097  002484  2A11               	incf	(fputs@i+1)^0,f,c
  3098  002486                     l2915:
  3099  002486  5010               	movf	fputs@i^0,w,c
  3100  002488  240B               	addwf	fputs@s^0,w,c
  3101  00248A  6ED9               	movwf	fsr2l,c
  3102  00248C  5011               	movf	(fputs@i+1)^0,w,c
  3103  00248E  200C               	addwfc	(fputs@s+1)^0,w,c
  3104  002490  6EDA               	movwf	fsr2h,c
  3105  002492  50DF               	movf	indf2,w,c
  3106  002494  6E0F               	movwf	fputs@c^0,c
  3107  002496  500F               	movf	fputs@c^0,w,c
  3108  002498  A4D8               	btfss	status,2,c
  3109  00249A  EF51  F012         	goto	u3151
  3110  00249E  EF53  F012         	goto	u3150
  3111  0024A2                     u3151:
  3112  0024A2  EF38  F012         	goto	l2911
  3113  0024A6                     u3150:
  3114  0024A6  0012               	return		;funcret
  3115  0024A8                     __end_of_fputs:
  3116                           	callstack 0
  3117                           
  3118 ;; *************** function _fputc *****************
  3119 ;; Defined at:
  3120 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;  c               2    1[COMRAM] int 
  3123 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  3124 ;;		 -> sprintf@f(6), 
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;		None
  3127 ;; Return value:  Size  Location     Type
  3128 ;;                  2    1[COMRAM] int 
  3129 ;; Registers used:
  3130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3131 ;; Tracked objects:
  3132 ;;		On entry : 0/0
  3133 ;;		On exit  : 0/0
  3134 ;;		Unchanged: 0/0
  3135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3136 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3138 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3139 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3140 ;;Total ram usage:        9 bytes
  3141 ;; Hardware stack levels used: 1
  3142 ;; Hardware stack levels required when called: 2
  3143 ;; This function calls:
  3144 ;;		_putch
  3145 ;; This function is called by:
  3146 ;;		_pad
  3147 ;;		_vfpfcnvrt
  3148 ;;		_fputs
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151                           
  3152                           	psect	text8
  3153  001FE4                     __ptext8:
  3154                           	callstack 0
  3155  001FE4                     _fputc:
  3156                           	callstack 25
  3157  001FE4  5004               	movf	fputc@fp^0,w,c
  3158  001FE6  1005               	iorwf	(fputc@fp+1)^0,w,c
  3159  001FE8  B4D8               	btfsc	status,2,c
  3160  001FEA  EFF9  F00F         	goto	u3111
  3161  001FEE  EFFB  F00F         	goto	u3110
  3162  001FF2                     u3111:
  3163  001FF2  EF04  F010         	goto	l2899
  3164  001FF6                     u3110:
  3165  001FF6  5004               	movf	fputc@fp^0,w,c
  3166  001FF8  1005               	iorwf	(fputc@fp+1)^0,w,c
  3167  001FFA  A4D8               	btfss	status,2,c
  3168  001FFC  EF02  F010         	goto	u3121
  3169  002000  EF04  F010         	goto	u3120
  3170  002004                     u3121:
  3171  002004  EF09  F010         	goto	l2901
  3172  002008                     u3120:
  3173  002008                     l2899:
  3174  002008  5002               	movf	fputc@c^0,w,c
  3175  00200A  EC55  F013         	call	_putch
  3176  00200E  EF56  F010         	goto	l1108
  3177  002012                     l2901:
  3178  002012  EE20 F004          	lfsr	2,4
  3179  002016  5004               	movf	fputc@fp^0,w,c
  3180  002018  26D9               	addwf	fsr2l,f,c
  3181  00201A  5005               	movf	(fputc@fp+1)^0,w,c
  3182  00201C  22DA               	addwfc	fsr2h,f,c
  3183  00201E  50DE               	movf	postinc2,w,c
  3184  002020  10DE               	iorwf	postinc2,w,c
  3185  002022  B4D8               	btfsc	status,2,c
  3186  002024  EF16  F010         	goto	u3131
  3187  002028  EF18  F010         	goto	u3130
  3188  00202C                     u3131:
  3189  00202C  EF33  F010         	goto	l2905
  3190  002030                     u3130:
  3191  002030  EE20 F004          	lfsr	2,4
  3192  002034  5004               	movf	fputc@fp^0,w,c
  3193  002036  26D9               	addwf	fsr2l,f,c
  3194  002038  5005               	movf	(fputc@fp+1)^0,w,c
  3195  00203A  22DA               	addwfc	fsr2h,f,c
  3196  00203C  EE10 F002          	lfsr	1,2
  3197  002040  5004               	movf	fputc@fp^0,w,c
  3198  002042  26E1               	addwf	fsr1l,f,c
  3199  002044  5005               	movf	(fputc@fp+1)^0,w,c
  3200  002046  22E2               	addwfc	fsr1h,f,c
  3201  002048  50DE               	movf	postinc2,w,c
  3202  00204A  5CE6               	subwf	postinc1,w,c
  3203  00204C  50E6               	movf	postinc1,w,c
  3204  00204E  0A80               	xorlw	128
  3205  002050  6E0A               	movwf	(??_fputc+4)^0,c
  3206  002052  50DE               	movf	postinc2,w,c
  3207  002054  0A80               	xorlw	128
  3208  002056  580A               	subwfb	(??_fputc+4)^0,w,c
  3209  002058  B0D8               	btfsc	status,0,c
  3210  00205A  EF31  F010         	goto	u3141
  3211  00205E  EF33  F010         	goto	u3140
  3212  002062                     u3141:
  3213  002062  EF56  F010         	goto	l1108
  3214  002066                     u3140:
  3215  002066                     l2905:
  3216  002066  EE20 F002          	lfsr	2,2
  3217  00206A  5004               	movf	fputc@fp^0,w,c
  3218  00206C  26D9               	addwf	fsr2l,f,c
  3219  00206E  5005               	movf	(fputc@fp+1)^0,w,c
  3220  002070  22DA               	addwfc	fsr2h,f,c
  3221  002072  CFDE F006          	movff	postinc2,??_fputc
  3222  002076  CFDD F007          	movff	postdec2,??_fputc+1
  3223  00207A  C004  FFD9         	movff	fputc@fp,fsr2l
  3224  00207E  C005  FFDA         	movff	fputc@fp+1,fsr2h
  3225  002082  CFDE F008          	movff	postinc2,??_fputc+2
  3226  002086  CFDD F009          	movff	postdec2,??_fputc+3
  3227  00208A  5006               	movf	??_fputc^0,w,c
  3228  00208C  2408               	addwf	(??_fputc+2)^0,w,c
  3229  00208E  6ED9               	movwf	fsr2l,c
  3230  002090  5007               	movf	(??_fputc+1)^0,w,c
  3231  002092  2009               	addwfc	(??_fputc+3)^0,w,c
  3232  002094  6EDA               	movwf	fsr2h,c
  3233  002096  C002  FFDF         	movff	fputc@c,indf2
  3234  00209A  EE20 F002          	lfsr	2,2
  3235  00209E  5004               	movf	fputc@fp^0,w,c
  3236  0020A0  26D9               	addwf	fsr2l,f,c
  3237  0020A2  5005               	movf	(fputc@fp+1)^0,w,c
  3238  0020A4  22DA               	addwfc	fsr2h,f,c
  3239  0020A6  2ADE               	incf	postinc2,f,c
  3240  0020A8  0E00               	movlw	0
  3241  0020AA  22DD               	addwfc	postdec2,f,c
  3242  0020AC                     l1108:
  3243  0020AC  0012               	return		;funcret
  3244  0020AE                     __end_of_fputc:
  3245                           	callstack 0
  3246                           
  3247 ;; *************** function _putch *****************
  3248 ;; Defined at:
  3249 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  3250 ;; Parameters:    Size  Location     Type
  3251 ;;  c               1    wreg     unsigned char 
  3252 ;; Auto vars:     Size  Location     Type
  3253 ;;  c               1    0[COMRAM] unsigned char 
  3254 ;; Return value:  Size  Location     Type
  3255 ;;                  1    wreg      void 
  3256 ;; Registers used:
  3257 ;;		wreg
  3258 ;; Tracked objects:
  3259 ;;		On entry : 0/0
  3260 ;;		On exit  : 0/0
  3261 ;;		Unchanged: 0/0
  3262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3267 ;;Total ram usage:        0 bytes
  3268 ;; Hardware stack levels used: 1
  3269 ;; Hardware stack levels required when called: 1
  3270 ;; This function calls:
  3271 ;;		Nothing
  3272 ;; This function is called by:
  3273 ;;		_fputc
  3274 ;; This function uses a non-reentrant model
  3275 ;;
  3276                           
  3277                           	psect	text9
  3278  0026AA                     __ptext9:
  3279                           	callstack 0
  3280  0026AA                     _putch:
  3281                           	callstack 25
  3282  0026AA  0012               	return		;funcret
  3283  0026AC                     __end_of_putch:
  3284                           	callstack 0
  3285                           
  3286 ;; *************** function _abs *****************
  3287 ;; Defined at:
  3288 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  3289 ;; Parameters:    Size  Location     Type
  3290 ;;  a               2   19[COMRAM] int 
  3291 ;; Auto vars:     Size  Location     Type
  3292 ;;		None
  3293 ;; Return value:  Size  Location     Type
  3294 ;;                  2   19[COMRAM] int 
  3295 ;; Registers used:
  3296 ;;		wreg, status,2, status,0
  3297 ;; Tracked objects:
  3298 ;;		On entry : 0/0
  3299 ;;		On exit  : 0/0
  3300 ;;		Unchanged: 0/0
  3301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3302 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3304 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3305 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3306 ;;Total ram usage:        4 bytes
  3307 ;; Hardware stack levels used: 1
  3308 ;; Hardware stack levels required when called: 1
  3309 ;; This function calls:
  3310 ;;		Nothing
  3311 ;; This function is called by:
  3312 ;;		_dtoa
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316                           	psect	text10
  3317  0024A8                     __ptext10:
  3318                           	callstack 0
  3319  0024A8                     _abs:
  3320                           	callstack 25
  3321  0024A8  BE15               	btfsc	(abs@a+1)^0,7,c
  3322  0024AA  EF61  F012         	goto	u3340
  3323  0024AE  5015               	movf	(abs@a+1)^0,w,c
  3324  0024B0  E106               	bnz	u3341
  3325  0024B2  0414               	decf	abs@a^0,w,c
  3326  0024B4  B0D8               	btfsc	status,0,c
  3327  0024B6  EF5F  F012         	goto	u3341
  3328  0024BA  EF61  F012         	goto	u3340
  3329  0024BE                     u3341:
  3330  0024BE  EF6F  F012         	goto	l1048
  3331  0024C2                     u3340:
  3332  0024C2  C014  F016         	movff	abs@a,??_abs
  3333  0024C6  C015  F017         	movff	abs@a+1,??_abs+1
  3334  0024CA  1E16               	comf	??_abs^0,f,c
  3335  0024CC  1E17               	comf	(??_abs+1)^0,f,c
  3336  0024CE  4A16               	infsnz	??_abs^0,f,c
  3337  0024D0  2A17               	incf	(??_abs+1)^0,f,c
  3338  0024D2  C016  F014         	movff	??_abs,?_abs
  3339  0024D6  C017  F015         	movff	??_abs+1,?_abs+1
  3340  0024DA  EF73  F012         	goto	l1051
  3341  0024DE                     l1048:
  3342  0024DE  C014  F014         	movff	abs@a,?_abs
  3343  0024E2  C015  F015         	movff	abs@a+1,?_abs+1
  3344  0024E6                     l1051:
  3345  0024E6  0012               	return		;funcret
  3346  0024E8                     __end_of_abs:
  3347                           	callstack 0
  3348                           
  3349 ;; *************** function ___aomod *****************
  3350 ;; Defined at:
  3351 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;  dividend        8    1[COMRAM] long long 
  3354 ;;  divisor         8    9[COMRAM] long long 
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;  sign            1   18[COMRAM] unsigned char 
  3357 ;;  counter         1   17[COMRAM] unsigned char 
  3358 ;; Return value:  Size  Location     Type
  3359 ;;                  8    1[COMRAM] long long 
  3360 ;; Registers used:
  3361 ;;		wreg, status,2, status,0
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3367 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3368 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3370 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3371 ;;Total ram usage:       18 bytes
  3372 ;; Hardware stack levels used: 1
  3373 ;; Hardware stack levels required when called: 1
  3374 ;; This function calls:
  3375 ;;		Nothing
  3376 ;; This function is called by:
  3377 ;;		_dtoa
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           	psect	text11
  3382  001DA6                     __ptext11:
  3383                           	callstack 0
  3384  001DA6                     ___aomod:
  3385                           	callstack 25
  3386  001DA6  0E00               	movlw	0
  3387  001DA8  6E13               	movwf	___aomod@sign^0,c
  3388  001DAA  BE09               	btfsc	(___aomod@dividend+7)^0,7,c
  3389  001DAC  EFDC  F00E         	goto	u3240
  3390  001DB0  EFDA  F00E         	goto	u3241
  3391  001DB4                     u3241:
  3392  001DB4  EFEE  F00E         	goto	l2985
  3393  001DB8                     u3240:
  3394  001DB8  1E09               	comf	(___aomod@dividend+7)^0,f,c
  3395  001DBA  1E08               	comf	(___aomod@dividend+6)^0,f,c
  3396  001DBC  1E07               	comf	(___aomod@dividend+5)^0,f,c
  3397  001DBE  1E06               	comf	(___aomod@dividend+4)^0,f,c
  3398  001DC0  1E05               	comf	(___aomod@dividend+3)^0,f,c
  3399  001DC2  1E04               	comf	(___aomod@dividend+2)^0,f,c
  3400  001DC4  1E03               	comf	(___aomod@dividend+1)^0,f,c
  3401  001DC6  6C02               	negf	___aomod@dividend^0,c
  3402  001DC8  0E00               	movlw	0
  3403  001DCA  2203               	addwfc	(___aomod@dividend+1)^0,f,c
  3404  001DCC  2204               	addwfc	(___aomod@dividend+2)^0,f,c
  3405  001DCE  2205               	addwfc	(___aomod@dividend+3)^0,f,c
  3406  001DD0  2206               	addwfc	(___aomod@dividend+4)^0,f,c
  3407  001DD2  2207               	addwfc	(___aomod@dividend+5)^0,f,c
  3408  001DD4  2208               	addwfc	(___aomod@dividend+6)^0,f,c
  3409  001DD6  2209               	addwfc	(___aomod@dividend+7)^0,f,c
  3410  001DD8  0E01               	movlw	1
  3411  001DDA  6E13               	movwf	___aomod@sign^0,c
  3412  001DDC                     l2985:
  3413  001DDC  BE11               	btfsc	(___aomod@divisor+7)^0,7,c
  3414  001DDE  EFF5  F00E         	goto	u3250
  3415  001DE2  EFF3  F00E         	goto	u3251
  3416  001DE6                     u3251:
  3417  001DE6  EF05  F00F         	goto	l2989
  3418  001DEA                     u3250:
  3419  001DEA  1E11               	comf	(___aomod@divisor+7)^0,f,c
  3420  001DEC  1E10               	comf	(___aomod@divisor+6)^0,f,c
  3421  001DEE  1E0F               	comf	(___aomod@divisor+5)^0,f,c
  3422  001DF0  1E0E               	comf	(___aomod@divisor+4)^0,f,c
  3423  001DF2  1E0D               	comf	(___aomod@divisor+3)^0,f,c
  3424  001DF4  1E0C               	comf	(___aomod@divisor+2)^0,f,c
  3425  001DF6  1E0B               	comf	(___aomod@divisor+1)^0,f,c
  3426  001DF8  6C0A               	negf	___aomod@divisor^0,c
  3427  001DFA  0E00               	movlw	0
  3428  001DFC  220B               	addwfc	(___aomod@divisor+1)^0,f,c
  3429  001DFE  220C               	addwfc	(___aomod@divisor+2)^0,f,c
  3430  001E00  220D               	addwfc	(___aomod@divisor+3)^0,f,c
  3431  001E02  220E               	addwfc	(___aomod@divisor+4)^0,f,c
  3432  001E04  220F               	addwfc	(___aomod@divisor+5)^0,f,c
  3433  001E06  2210               	addwfc	(___aomod@divisor+6)^0,f,c
  3434  001E08  2211               	addwfc	(___aomod@divisor+7)^0,f,c
  3435  001E0A                     l2989:
  3436  001E0A  500A               	movf	___aomod@divisor^0,w,c
  3437  001E0C  100B               	iorwf	(___aomod@divisor+1)^0,w,c
  3438  001E0E  100C               	iorwf	(___aomod@divisor+2)^0,w,c
  3439  001E10  100D               	iorwf	(___aomod@divisor+3)^0,w,c
  3440  001E12  100E               	iorwf	(___aomod@divisor+4)^0,w,c
  3441  001E14  100F               	iorwf	(___aomod@divisor+5)^0,w,c
  3442  001E16  1010               	iorwf	(___aomod@divisor+6)^0,w,c
  3443  001E18  1011               	iorwf	(___aomod@divisor+7)^0,w,c
  3444  001E1A  B4D8               	btfsc	status,2,c
  3445  001E1C  EF12  F00F         	goto	u3261
  3446  001E20  EF14  F00F         	goto	u3260
  3447  001E24                     u3261:
  3448  001E24  EF5C  F00F         	goto	l3005
  3449  001E28                     u3260:
  3450  001E28  0E01               	movlw	1
  3451  001E2A  6E12               	movwf	___aomod@counter^0,c
  3452  001E2C  EF22  F00F         	goto	l2995
  3453  001E30                     l2993:
  3454  001E30  90D8               	bcf	status,0,c
  3455  001E32  360A               	rlcf	___aomod@divisor^0,f,c
  3456  001E34  360B               	rlcf	(___aomod@divisor+1)^0,f,c
  3457  001E36  360C               	rlcf	(___aomod@divisor+2)^0,f,c
  3458  001E38  360D               	rlcf	(___aomod@divisor+3)^0,f,c
  3459  001E3A  360E               	rlcf	(___aomod@divisor+4)^0,f,c
  3460  001E3C  360F               	rlcf	(___aomod@divisor+5)^0,f,c
  3461  001E3E  3610               	rlcf	(___aomod@divisor+6)^0,f,c
  3462  001E40  3611               	rlcf	(___aomod@divisor+7)^0,f,c
  3463  001E42  2A12               	incf	___aomod@counter^0,f,c
  3464  001E44                     l2995:
  3465  001E44  AE11               	btfss	(___aomod@divisor+7)^0,7,c
  3466  001E46  EF27  F00F         	goto	u3271
  3467  001E4A  EF29  F00F         	goto	u3270
  3468  001E4E                     u3271:
  3469  001E4E  EF18  F00F         	goto	l2993
  3470  001E52                     u3270:
  3471  001E52                     l2997:
  3472  001E52  500A               	movf	___aomod@divisor^0,w,c
  3473  001E54  5C02               	subwf	___aomod@dividend^0,w,c
  3474  001E56  500B               	movf	(___aomod@divisor+1)^0,w,c
  3475  001E58  5803               	subwfb	(___aomod@dividend+1)^0,w,c
  3476  001E5A  500C               	movf	(___aomod@divisor+2)^0,w,c
  3477  001E5C  5804               	subwfb	(___aomod@dividend+2)^0,w,c
  3478  001E5E  500D               	movf	(___aomod@divisor+3)^0,w,c
  3479  001E60  5805               	subwfb	(___aomod@dividend+3)^0,w,c
  3480  001E62  500E               	movf	(___aomod@divisor+4)^0,w,c
  3481  001E64  5806               	subwfb	(___aomod@dividend+4)^0,w,c
  3482  001E66  500F               	movf	(___aomod@divisor+5)^0,w,c
  3483  001E68  5807               	subwfb	(___aomod@dividend+5)^0,w,c
  3484  001E6A  5010               	movf	(___aomod@divisor+6)^0,w,c
  3485  001E6C  5808               	subwfb	(___aomod@dividend+6)^0,w,c
  3486  001E6E  5011               	movf	(___aomod@divisor+7)^0,w,c
  3487  001E70  5809               	subwfb	(___aomod@dividend+7)^0,w,c
  3488  001E72  A0D8               	btfss	status,0,c
  3489  001E74  EF3E  F00F         	goto	u3281
  3490  001E78  EF40  F00F         	goto	u3280
  3491  001E7C                     u3281:
  3492  001E7C  EF50  F00F         	goto	l3001
  3493  001E80                     u3280:
  3494  001E80  500A               	movf	___aomod@divisor^0,w,c
  3495  001E82  5E02               	subwf	___aomod@dividend^0,f,c
  3496  001E84  500B               	movf	(___aomod@divisor+1)^0,w,c
  3497  001E86  5A03               	subwfb	(___aomod@dividend+1)^0,f,c
  3498  001E88  500C               	movf	(___aomod@divisor+2)^0,w,c
  3499  001E8A  5A04               	subwfb	(___aomod@dividend+2)^0,f,c
  3500  001E8C  500D               	movf	(___aomod@divisor+3)^0,w,c
  3501  001E8E  5A05               	subwfb	(___aomod@dividend+3)^0,f,c
  3502  001E90  500E               	movf	(___aomod@divisor+4)^0,w,c
  3503  001E92  5A06               	subwfb	(___aomod@dividend+4)^0,f,c
  3504  001E94  500F               	movf	(___aomod@divisor+5)^0,w,c
  3505  001E96  5A07               	subwfb	(___aomod@dividend+5)^0,f,c
  3506  001E98  5010               	movf	(___aomod@divisor+6)^0,w,c
  3507  001E9A  5A08               	subwfb	(___aomod@dividend+6)^0,f,c
  3508  001E9C  5011               	movf	(___aomod@divisor+7)^0,w,c
  3509  001E9E  5A09               	subwfb	(___aomod@dividend+7)^0,f,c
  3510  001EA0                     l3001:
  3511  001EA0  90D8               	bcf	status,0,c
  3512  001EA2  3211               	rrcf	(___aomod@divisor+7)^0,f,c
  3513  001EA4  3210               	rrcf	(___aomod@divisor+6)^0,f,c
  3514  001EA6  320F               	rrcf	(___aomod@divisor+5)^0,f,c
  3515  001EA8  320E               	rrcf	(___aomod@divisor+4)^0,f,c
  3516  001EAA  320D               	rrcf	(___aomod@divisor+3)^0,f,c
  3517  001EAC  320C               	rrcf	(___aomod@divisor+2)^0,f,c
  3518  001EAE  320B               	rrcf	(___aomod@divisor+1)^0,f,c
  3519  001EB0  320A               	rrcf	___aomod@divisor^0,f,c
  3520  001EB2  2E12               	decfsz	___aomod@counter^0,f,c
  3521  001EB4  EF29  F00F         	goto	l2997
  3522  001EB8                     l3005:
  3523  001EB8  5013               	movf	___aomod@sign^0,w,c
  3524  001EBA  B4D8               	btfsc	status,2,c
  3525  001EBC  EF62  F00F         	goto	u3291
  3526  001EC0  EF64  F00F         	goto	u3290
  3527  001EC4                     u3291:
  3528  001EC4  EF74  F00F         	goto	l3009
  3529  001EC8                     u3290:
  3530  001EC8  1E09               	comf	(___aomod@dividend+7)^0,f,c
  3531  001ECA  1E08               	comf	(___aomod@dividend+6)^0,f,c
  3532  001ECC  1E07               	comf	(___aomod@dividend+5)^0,f,c
  3533  001ECE  1E06               	comf	(___aomod@dividend+4)^0,f,c
  3534  001ED0  1E05               	comf	(___aomod@dividend+3)^0,f,c
  3535  001ED2  1E04               	comf	(___aomod@dividend+2)^0,f,c
  3536  001ED4  1E03               	comf	(___aomod@dividend+1)^0,f,c
  3537  001ED6  6C02               	negf	___aomod@dividend^0,c
  3538  001ED8  0E00               	movlw	0
  3539  001EDA  2203               	addwfc	(___aomod@dividend+1)^0,f,c
  3540  001EDC  2204               	addwfc	(___aomod@dividend+2)^0,f,c
  3541  001EDE  2205               	addwfc	(___aomod@dividend+3)^0,f,c
  3542  001EE0  2206               	addwfc	(___aomod@dividend+4)^0,f,c
  3543  001EE2  2207               	addwfc	(___aomod@dividend+5)^0,f,c
  3544  001EE4  2208               	addwfc	(___aomod@dividend+6)^0,f,c
  3545  001EE6  2209               	addwfc	(___aomod@dividend+7)^0,f,c
  3546  001EE8                     l3009:
  3547  001EE8  C002  F002         	movff	___aomod@dividend,?___aomod
  3548  001EEC  C003  F003         	movff	___aomod@dividend+1,?___aomod+1
  3549  001EF0  C004  F004         	movff	___aomod@dividend+2,?___aomod+2
  3550  001EF4  C005  F005         	movff	___aomod@dividend+3,?___aomod+3
  3551  001EF8  C006  F006         	movff	___aomod@dividend+4,?___aomod+4
  3552  001EFC  C007  F007         	movff	___aomod@dividend+5,?___aomod+5
  3553  001F00  C008  F008         	movff	___aomod@dividend+6,?___aomod+6
  3554  001F04  C009  F009         	movff	___aomod@dividend+7,?___aomod+7
  3555  001F08  0012               	return		;funcret
  3556  001F0A                     __end_of___aomod:
  3557                           	callstack 0
  3558                           
  3559 ;; *************** function ___aodiv *****************
  3560 ;; Defined at:
  3561 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;  dividend        8    1[COMRAM] long long 
  3564 ;;  divisor         8    9[COMRAM] long long 
  3565 ;; Auto vars:     Size  Location     Type
  3566 ;;  quotient        8   19[COMRAM] long long 
  3567 ;;  sign            1   18[COMRAM] unsigned char 
  3568 ;;  counter         1   17[COMRAM] unsigned char 
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  8    1[COMRAM] long long 
  3571 ;; Registers used:
  3572 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3578 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3579 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3581 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3582 ;;Total ram usage:       26 bytes
  3583 ;; Hardware stack levels used: 1
  3584 ;; Hardware stack levels required when called: 1
  3585 ;; This function calls:
  3586 ;;		Nothing
  3587 ;; This function is called by:
  3588 ;;		_dtoa
  3589 ;; This function uses a non-reentrant model
  3590 ;;
  3591                           
  3592                           	psect	text12
  3593  001C1E                     __ptext12:
  3594                           	callstack 0
  3595  001C1E                     ___aodiv:
  3596                           	callstack 25
  3597  001C1E  0E00               	movlw	0
  3598  001C20  6E13               	movwf	___aodiv@sign^0,c
  3599  001C22  BE11               	btfsc	(___aodiv@divisor+7)^0,7,c
  3600  001C24  EF18  F00E         	goto	u3170
  3601  001C28  EF16  F00E         	goto	u3171
  3602  001C2C                     u3171:
  3603  001C2C  EF2A  F00E         	goto	l2941
  3604  001C30                     u3170:
  3605  001C30  1E11               	comf	(___aodiv@divisor+7)^0,f,c
  3606  001C32  1E10               	comf	(___aodiv@divisor+6)^0,f,c
  3607  001C34  1E0F               	comf	(___aodiv@divisor+5)^0,f,c
  3608  001C36  1E0E               	comf	(___aodiv@divisor+4)^0,f,c
  3609  001C38  1E0D               	comf	(___aodiv@divisor+3)^0,f,c
  3610  001C3A  1E0C               	comf	(___aodiv@divisor+2)^0,f,c
  3611  001C3C  1E0B               	comf	(___aodiv@divisor+1)^0,f,c
  3612  001C3E  6C0A               	negf	___aodiv@divisor^0,c
  3613  001C40  0E00               	movlw	0
  3614  001C42  220B               	addwfc	(___aodiv@divisor+1)^0,f,c
  3615  001C44  220C               	addwfc	(___aodiv@divisor+2)^0,f,c
  3616  001C46  220D               	addwfc	(___aodiv@divisor+3)^0,f,c
  3617  001C48  220E               	addwfc	(___aodiv@divisor+4)^0,f,c
  3618  001C4A  220F               	addwfc	(___aodiv@divisor+5)^0,f,c
  3619  001C4C  2210               	addwfc	(___aodiv@divisor+6)^0,f,c
  3620  001C4E  2211               	addwfc	(___aodiv@divisor+7)^0,f,c
  3621  001C50  0E01               	movlw	1
  3622  001C52  6E13               	movwf	___aodiv@sign^0,c
  3623  001C54                     l2941:
  3624  001C54  BE09               	btfsc	(___aodiv@dividend+7)^0,7,c
  3625  001C56  EF31  F00E         	goto	u3180
  3626  001C5A  EF2F  F00E         	goto	u3181
  3627  001C5E                     u3181:
  3628  001C5E  EF43  F00E         	goto	l2947
  3629  001C62                     u3180:
  3630  001C62  1E09               	comf	(___aodiv@dividend+7)^0,f,c
  3631  001C64  1E08               	comf	(___aodiv@dividend+6)^0,f,c
  3632  001C66  1E07               	comf	(___aodiv@dividend+5)^0,f,c
  3633  001C68  1E06               	comf	(___aodiv@dividend+4)^0,f,c
  3634  001C6A  1E05               	comf	(___aodiv@dividend+3)^0,f,c
  3635  001C6C  1E04               	comf	(___aodiv@dividend+2)^0,f,c
  3636  001C6E  1E03               	comf	(___aodiv@dividend+1)^0,f,c
  3637  001C70  6C02               	negf	___aodiv@dividend^0,c
  3638  001C72  0E00               	movlw	0
  3639  001C74  2203               	addwfc	(___aodiv@dividend+1)^0,f,c
  3640  001C76  2204               	addwfc	(___aodiv@dividend+2)^0,f,c
  3641  001C78  2205               	addwfc	(___aodiv@dividend+3)^0,f,c
  3642  001C7A  2206               	addwfc	(___aodiv@dividend+4)^0,f,c
  3643  001C7C  2207               	addwfc	(___aodiv@dividend+5)^0,f,c
  3644  001C7E  2208               	addwfc	(___aodiv@dividend+6)^0,f,c
  3645  001C80  2209               	addwfc	(___aodiv@dividend+7)^0,f,c
  3646  001C82  0E01               	movlw	1
  3647  001C84  1A13               	xorwf	___aodiv@sign^0,f,c
  3648  001C86                     l2947:
  3649  001C86  EE20  F014         	lfsr	2,___aodiv@quotient
  3650  001C8A  0E07               	movlw	7
  3651  001C8C                     u3191:
  3652  001C8C  6ADE               	clrf	postinc2,c
  3653  001C8E  06E8               	decf	wreg,f,c
  3654  001C90  E2FD               	bc	u3191
  3655  001C92  500A               	movf	___aodiv@divisor^0,w,c
  3656  001C94  100B               	iorwf	(___aodiv@divisor+1)^0,w,c
  3657  001C96  100C               	iorwf	(___aodiv@divisor+2)^0,w,c
  3658  001C98  100D               	iorwf	(___aodiv@divisor+3)^0,w,c
  3659  001C9A  100E               	iorwf	(___aodiv@divisor+4)^0,w,c
  3660  001C9C  100F               	iorwf	(___aodiv@divisor+5)^0,w,c
  3661  001C9E  1010               	iorwf	(___aodiv@divisor+6)^0,w,c
  3662  001CA0  1011               	iorwf	(___aodiv@divisor+7)^0,w,c
  3663  001CA2  B4D8               	btfsc	status,2,c
  3664  001CA4  EF56  F00E         	goto	u3201
  3665  001CA8  EF58  F00E         	goto	u3200
  3666  001CAC                     u3201:
  3667  001CAC  EFAA  F00E         	goto	l2969
  3668  001CB0                     u3200:
  3669  001CB0  0E01               	movlw	1
  3670  001CB2  6E12               	movwf	___aodiv@counter^0,c
  3671  001CB4  EF66  F00E         	goto	l2955
  3672  001CB8                     l2953:
  3673  001CB8  90D8               	bcf	status,0,c
  3674  001CBA  360A               	rlcf	___aodiv@divisor^0,f,c
  3675  001CBC  360B               	rlcf	(___aodiv@divisor+1)^0,f,c
  3676  001CBE  360C               	rlcf	(___aodiv@divisor+2)^0,f,c
  3677  001CC0  360D               	rlcf	(___aodiv@divisor+3)^0,f,c
  3678  001CC2  360E               	rlcf	(___aodiv@divisor+4)^0,f,c
  3679  001CC4  360F               	rlcf	(___aodiv@divisor+5)^0,f,c
  3680  001CC6  3610               	rlcf	(___aodiv@divisor+6)^0,f,c
  3681  001CC8  3611               	rlcf	(___aodiv@divisor+7)^0,f,c
  3682  001CCA  2A12               	incf	___aodiv@counter^0,f,c
  3683  001CCC                     l2955:
  3684  001CCC  AE11               	btfss	(___aodiv@divisor+7)^0,7,c
  3685  001CCE  EF6B  F00E         	goto	u3211
  3686  001CD2  EF6D  F00E         	goto	u3210
  3687  001CD6                     u3211:
  3688  001CD6  EF5C  F00E         	goto	l2953
  3689  001CDA                     u3210:
  3690  001CDA                     l2957:
  3691  001CDA  90D8               	bcf	status,0,c
  3692  001CDC  3614               	rlcf	___aodiv@quotient^0,f,c
  3693  001CDE  3615               	rlcf	(___aodiv@quotient+1)^0,f,c
  3694  001CE0  3616               	rlcf	(___aodiv@quotient+2)^0,f,c
  3695  001CE2  3617               	rlcf	(___aodiv@quotient+3)^0,f,c
  3696  001CE4  3618               	rlcf	(___aodiv@quotient+4)^0,f,c
  3697  001CE6  3619               	rlcf	(___aodiv@quotient+5)^0,f,c
  3698  001CE8  361A               	rlcf	(___aodiv@quotient+6)^0,f,c
  3699  001CEA  361B               	rlcf	(___aodiv@quotient+7)^0,f,c
  3700  001CEC  500A               	movf	___aodiv@divisor^0,w,c
  3701  001CEE  5C02               	subwf	___aodiv@dividend^0,w,c
  3702  001CF0  500B               	movf	(___aodiv@divisor+1)^0,w,c
  3703  001CF2  5803               	subwfb	(___aodiv@dividend+1)^0,w,c
  3704  001CF4  500C               	movf	(___aodiv@divisor+2)^0,w,c
  3705  001CF6  5804               	subwfb	(___aodiv@dividend+2)^0,w,c
  3706  001CF8  500D               	movf	(___aodiv@divisor+3)^0,w,c
  3707  001CFA  5805               	subwfb	(___aodiv@dividend+3)^0,w,c
  3708  001CFC  500E               	movf	(___aodiv@divisor+4)^0,w,c
  3709  001CFE  5806               	subwfb	(___aodiv@dividend+4)^0,w,c
  3710  001D00  500F               	movf	(___aodiv@divisor+5)^0,w,c
  3711  001D02  5807               	subwfb	(___aodiv@dividend+5)^0,w,c
  3712  001D04  5010               	movf	(___aodiv@divisor+6)^0,w,c
  3713  001D06  5808               	subwfb	(___aodiv@dividend+6)^0,w,c
  3714  001D08  5011               	movf	(___aodiv@divisor+7)^0,w,c
  3715  001D0A  5809               	subwfb	(___aodiv@dividend+7)^0,w,c
  3716  001D0C  A0D8               	btfss	status,0,c
  3717  001D0E  EF8B  F00E         	goto	u3221
  3718  001D12  EF8D  F00E         	goto	u3220
  3719  001D16                     u3221:
  3720  001D16  EF9E  F00E         	goto	l2965
  3721  001D1A                     u3220:
  3722  001D1A  500A               	movf	___aodiv@divisor^0,w,c
  3723  001D1C  5E02               	subwf	___aodiv@dividend^0,f,c
  3724  001D1E  500B               	movf	(___aodiv@divisor+1)^0,w,c
  3725  001D20  5A03               	subwfb	(___aodiv@dividend+1)^0,f,c
  3726  001D22  500C               	movf	(___aodiv@divisor+2)^0,w,c
  3727  001D24  5A04               	subwfb	(___aodiv@dividend+2)^0,f,c
  3728  001D26  500D               	movf	(___aodiv@divisor+3)^0,w,c
  3729  001D28  5A05               	subwfb	(___aodiv@dividend+3)^0,f,c
  3730  001D2A  500E               	movf	(___aodiv@divisor+4)^0,w,c
  3731  001D2C  5A06               	subwfb	(___aodiv@dividend+4)^0,f,c
  3732  001D2E  500F               	movf	(___aodiv@divisor+5)^0,w,c
  3733  001D30  5A07               	subwfb	(___aodiv@dividend+5)^0,f,c
  3734  001D32  5010               	movf	(___aodiv@divisor+6)^0,w,c
  3735  001D34  5A08               	subwfb	(___aodiv@dividend+6)^0,f,c
  3736  001D36  5011               	movf	(___aodiv@divisor+7)^0,w,c
  3737  001D38  5A09               	subwfb	(___aodiv@dividend+7)^0,f,c
  3738  001D3A  8014               	bsf	___aodiv@quotient^0,0,c
  3739  001D3C                     l2965:
  3740  001D3C  90D8               	bcf	status,0,c
  3741  001D3E  3211               	rrcf	(___aodiv@divisor+7)^0,f,c
  3742  001D40  3210               	rrcf	(___aodiv@divisor+6)^0,f,c
  3743  001D42  320F               	rrcf	(___aodiv@divisor+5)^0,f,c
  3744  001D44  320E               	rrcf	(___aodiv@divisor+4)^0,f,c
  3745  001D46  320D               	rrcf	(___aodiv@divisor+3)^0,f,c
  3746  001D48  320C               	rrcf	(___aodiv@divisor+2)^0,f,c
  3747  001D4A  320B               	rrcf	(___aodiv@divisor+1)^0,f,c
  3748  001D4C  320A               	rrcf	___aodiv@divisor^0,f,c
  3749  001D4E  2E12               	decfsz	___aodiv@counter^0,f,c
  3750  001D50  EF6D  F00E         	goto	l2957
  3751  001D54                     l2969:
  3752  001D54  5013               	movf	___aodiv@sign^0,w,c
  3753  001D56  B4D8               	btfsc	status,2,c
  3754  001D58  EFB0  F00E         	goto	u3231
  3755  001D5C  EFB2  F00E         	goto	u3230
  3756  001D60                     u3231:
  3757  001D60  EFC2  F00E         	goto	l2973
  3758  001D64                     u3230:
  3759  001D64  1E1B               	comf	(___aodiv@quotient+7)^0,f,c
  3760  001D66  1E1A               	comf	(___aodiv@quotient+6)^0,f,c
  3761  001D68  1E19               	comf	(___aodiv@quotient+5)^0,f,c
  3762  001D6A  1E18               	comf	(___aodiv@quotient+4)^0,f,c
  3763  001D6C  1E17               	comf	(___aodiv@quotient+3)^0,f,c
  3764  001D6E  1E16               	comf	(___aodiv@quotient+2)^0,f,c
  3765  001D70  1E15               	comf	(___aodiv@quotient+1)^0,f,c
  3766  001D72  6C14               	negf	___aodiv@quotient^0,c
  3767  001D74  0E00               	movlw	0
  3768  001D76  2215               	addwfc	(___aodiv@quotient+1)^0,f,c
  3769  001D78  2216               	addwfc	(___aodiv@quotient+2)^0,f,c
  3770  001D7A  2217               	addwfc	(___aodiv@quotient+3)^0,f,c
  3771  001D7C  2218               	addwfc	(___aodiv@quotient+4)^0,f,c
  3772  001D7E  2219               	addwfc	(___aodiv@quotient+5)^0,f,c
  3773  001D80  221A               	addwfc	(___aodiv@quotient+6)^0,f,c
  3774  001D82  221B               	addwfc	(___aodiv@quotient+7)^0,f,c
  3775  001D84                     l2973:
  3776  001D84  C014  F002         	movff	___aodiv@quotient,?___aodiv
  3777  001D88  C015  F003         	movff	___aodiv@quotient+1,?___aodiv+1
  3778  001D8C  C016  F004         	movff	___aodiv@quotient+2,?___aodiv+2
  3779  001D90  C017  F005         	movff	___aodiv@quotient+3,?___aodiv+3
  3780  001D94  C018  F006         	movff	___aodiv@quotient+4,?___aodiv+4
  3781  001D98  C019  F007         	movff	___aodiv@quotient+5,?___aodiv+5
  3782  001D9C  C01A  F008         	movff	___aodiv@quotient+6,?___aodiv+6
  3783  001DA0  C01B  F009         	movff	___aodiv@quotient+7,?___aodiv+7
  3784  001DA4  0012               	return		;funcret
  3785  001DA6                     __end_of___aodiv:
  3786                           	callstack 0
  3787                           
  3788 ;; *************** function _atoi *****************
  3789 ;; Defined at:
  3790 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3793 ;;		 -> STR_2(18), STR_1(15), 
  3794 ;; Auto vars:     Size  Location     Type
  3795 ;;  n               2   21[COMRAM] int 
  3796 ;;  neg             2   14[COMRAM] int 
  3797 ;; Return value:  Size  Location     Type
  3798 ;;                  2    8[COMRAM] int 
  3799 ;; Registers used:
  3800 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3801 ;; Tracked objects:
  3802 ;;		On entry : 0/0
  3803 ;;		On exit  : 0/0
  3804 ;;		Unchanged: 0/0
  3805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3806 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3807 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3808 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3809 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3810 ;;Total ram usage:       15 bytes
  3811 ;; Hardware stack levels used: 1
  3812 ;; Hardware stack levels required when called: 2
  3813 ;; This function calls:
  3814 ;;		___wmul
  3815 ;;		_isdigit
  3816 ;;		_isspace
  3817 ;; This function is called by:
  3818 ;;		_vfpfcnvrt
  3819 ;; This function uses a non-reentrant model
  3820 ;;
  3821                           
  3822                           	psect	text13
  3823  001A7A                     __ptext13:
  3824                           	callstack 0
  3825  001A7A                     _atoi:
  3826                           	callstack 25
  3827  001A7A  0E00               	movlw	0
  3828  001A7C  6E17               	movwf	(atoi@n+1)^0,c
  3829  001A7E  0E00               	movlw	0
  3830  001A80  6E16               	movwf	atoi@n^0,c
  3831  001A82  0E00               	movlw	0
  3832  001A84  6E10               	movwf	(atoi@neg+1)^0,c
  3833  001A86  0E00               	movlw	0
  3834  001A88  6E0F               	movwf	atoi@neg^0,c
  3835  001A8A  EF49  F00D         	goto	l3121
  3836  001A8E                     l3119:
  3837  001A8E  4A09               	infsnz	atoi@s^0,f,c
  3838  001A90  2A0A               	incf	(atoi@s+1)^0,f,c
  3839  001A92                     l3121:
  3840  001A92  0E01               	movlw	1
  3841  001A94  6E15               	movwf	_atoi$1785^0,c
  3842  001A96  C009  FFF6         	movff	atoi@s,tblptrl
  3843  001A9A  C00A  FFF7         	movff	atoi@s+1,tblptrh
  3844  001A9E                     	if	0	;tblptru may be non-zero
  3845  001A9E                     	endif
  3846  001A9E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3847  001A9E  0E00               	movlw	low (__mediumconst shr (0+16))
  3848  001AA0  6EF8               	movwf	tblptru,c
  3849  001AA2                     	endif
  3850  001AA2  0008               	tblrd		*
  3851  001AA4  50F5               	movf	tablat,w,c
  3852  001AA6  0A20               	xorlw	32
  3853  001AA8  B4D8               	btfsc	status,2,c
  3854  001AAA  EF59  F00D         	goto	u3541
  3855  001AAE  EF5B  F00D         	goto	u3540
  3856  001AB2                     u3541:
  3857  001AB2  EF7A  F00D         	goto	l3129
  3858  001AB6                     u3540:
  3859  001AB6  0EF7               	movlw	247
  3860  001AB8  6E0B               	movwf	??_atoi^0,c
  3861  001ABA  0EFF               	movlw	255
  3862  001ABC  6E0C               	movwf	(??_atoi+1)^0,c
  3863  001ABE  C009  FFF6         	movff	atoi@s,tblptrl
  3864  001AC2  C00A  FFF7         	movff	atoi@s+1,tblptrh
  3865  001AC6                     	if	0	;tblptru may be non-zero
  3866  001AC6                     	endif
  3867  001AC6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3868  001AC6  0E00               	movlw	low (__mediumconst shr (0+16))
  3869  001AC8  6EF8               	movwf	tblptru,c
  3870  001ACA                     	endif
  3871  001ACA  0008               	tblrd		*
  3872  001ACC  50F5               	movf	tablat,w,c
  3873  001ACE  6E0D               	movwf	(??_atoi+2)^0,c
  3874  001AD0  6A0E               	clrf	(??_atoi+3)^0,c
  3875  001AD2  500B               	movf	??_atoi^0,w,c
  3876  001AD4  260D               	addwf	(??_atoi+2)^0,f,c
  3877  001AD6  500C               	movf	(??_atoi+1)^0,w,c
  3878  001AD8  220E               	addwfc	(??_atoi+3)^0,f,c
  3879  001ADA  500E               	movf	(??_atoi+3)^0,w,c
  3880  001ADC  E109               	bnz	u3550
  3881  001ADE  0E05               	movlw	5
  3882  001AE0  5C0D               	subwf	(??_atoi+2)^0,w,c
  3883  001AE2  A0D8               	btfss	status,0,c
  3884  001AE4  EF76  F00D         	goto	u3551
  3885  001AE8  EF78  F00D         	goto	u3550
  3886  001AEC                     u3551:
  3887  001AEC  EF7A  F00D         	goto	l3129
  3888  001AF0                     u3550:
  3889  001AF0  0E00               	movlw	0
  3890  001AF2  6E15               	movwf	_atoi$1785^0,c
  3891  001AF4                     l3129:
  3892  001AF4  C015  F011         	movff	_atoi$1785,_atoi$1784
  3893  001AF8  6A12               	clrf	(_atoi$1784+1)^0,c
  3894  001AFA  5011               	movf	_atoi$1784^0,w,c
  3895  001AFC  1012               	iorwf	(_atoi$1784+1)^0,w,c
  3896  001AFE  A4D8               	btfss	status,2,c
  3897  001B00  EF84  F00D         	goto	u3561
  3898  001B04  EF86  F00D         	goto	u3560
  3899  001B08                     u3561:
  3900  001B08  EF47  F00D         	goto	l3119
  3901  001B0C                     u3560:
  3902  001B0C  EF90  F00D         	goto	l3139
  3903  001B10                     l3135:
  3904  001B10  0E00               	movlw	0
  3905  001B12  6E10               	movwf	(atoi@neg+1)^0,c
  3906  001B14  0E01               	movlw	1
  3907  001B16  6E0F               	movwf	atoi@neg^0,c
  3908  001B18                     l3137:
  3909  001B18  4A09               	infsnz	atoi@s^0,f,c
  3910  001B1A  2A0A               	incf	(atoi@s+1)^0,f,c
  3911  001B1C  EFC9  F00D         	goto	l3145
  3912  001B20                     l3139:
  3913  001B20  C009  FFF6         	movff	atoi@s,tblptrl
  3914  001B24  C00A  FFF7         	movff	atoi@s+1,tblptrh
  3915  001B28                     	if	0	;tblptru may be non-zero
  3916  001B28                     	endif
  3917  001B28                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3918  001B28  0E00               	movlw	low (__mediumconst shr (0+16))
  3919  001B2A  6EF8               	movwf	tblptru,c
  3920  001B2C                     	endif
  3921  001B2C  0008               	tblrd		*
  3922  001B2E  50F5               	movf	tablat,w,c
  3923  001B30  6E0B               	movwf	??_atoi^0,c
  3924  001B32  6A0C               	clrf	(??_atoi+1)^0,c
  3925                           
  3926                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3927                           ; Switch size 1, requested type "simple"
  3928                           ; Number of cases is 1, Range of values is 0 to 0
  3929                           ; switch strategies available:
  3930                           ; Name         Instructions Cycles
  3931                           ; simple_byte            4     3 (average)
  3932                           ;	Chosen strategy is simple_byte
  3933  001B34  500C               	movf	(??_atoi+1)^0,w,c
  3934  001B36  0A00               	xorlw	0	; case 0
  3935  001B38  B4D8               	btfsc	status,2,c
  3936  001B3A  EFA1  F00D         	goto	l3513
  3937  001B3E  EFC9  F00D         	goto	l3145
  3938  001B42                     l3513:
  3939                           
  3940                           ; Switch size 1, requested type "simple"
  3941                           ; Number of cases is 2, Range of values is 43 to 45
  3942                           ; switch strategies available:
  3943                           ; Name         Instructions Cycles
  3944                           ; simple_byte            7     4 (average)
  3945                           ;	Chosen strategy is simple_byte
  3946  001B42  500B               	movf	??_atoi^0,w,c
  3947  001B44  0A2B               	xorlw	43	; case 43
  3948  001B46  B4D8               	btfsc	status,2,c
  3949  001B48  EF8C  F00D         	goto	l3137
  3950  001B4C  0A06               	xorlw	6	; case 45
  3951  001B4E  B4D8               	btfsc	status,2,c
  3952  001B50  EF88  F00D         	goto	l3135
  3953  001B54  EFC9  F00D         	goto	l3145
  3954  001B58                     l3141:
  3955  001B58  C016  F002         	movff	atoi@n,___wmul@multiplier
  3956  001B5C  C017  F003         	movff	atoi@n+1,___wmul@multiplier+1
  3957  001B60  0E00               	movlw	0
  3958  001B62  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  3959  001B64  0E0A               	movlw	10
  3960  001B66  6E04               	movwf	___wmul@multiplicand^0,c
  3961  001B68  ECF5  F012         	call	___wmul	;wreg free
  3962  001B6C  C009  FFF6         	movff	atoi@s,tblptrl
  3963  001B70  C00A  FFF7         	movff	atoi@s+1,tblptrh
  3964  001B74                     	if	0	;tblptru may be non-zero
  3965  001B74                     	endif
  3966  001B74                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3967  001B74  0E00               	movlw	low (__mediumconst shr (0+16))
  3968  001B76  6EF8               	movwf	tblptru,c
  3969  001B78                     	endif
  3970  001B78  0008               	tblrd		*
  3971  001B7A  50F5               	movf	tablat,w,c
  3972  001B7C  5E02               	subwf	?___wmul^0,f,c
  3973  001B7E  0E00               	movlw	0
  3974  001B80  5A03               	subwfb	(?___wmul+1)^0,f,c
  3975  001B82  0E30               	movlw	48
  3976  001B84  2402               	addwf	?___wmul^0,w,c
  3977  001B86  6E16               	movwf	atoi@n^0,c
  3978  001B88  0E00               	movlw	0
  3979  001B8A  2003               	addwfc	(?___wmul+1)^0,w,c
  3980  001B8C  6E17               	movwf	(atoi@n+1)^0,c
  3981  001B8E  EF8C  F00D         	goto	l3137
  3982  001B92                     l3145:
  3983  001B92  0ED0               	movlw	208
  3984  001B94  6E0B               	movwf	??_atoi^0,c
  3985  001B96  0EFF               	movlw	255
  3986  001B98  6E0C               	movwf	(??_atoi+1)^0,c
  3987  001B9A  C009  FFF6         	movff	atoi@s,tblptrl
  3988  001B9E  C00A  FFF7         	movff	atoi@s+1,tblptrh
  3989  001BA2                     	if	0	;tblptru may be non-zero
  3990  001BA2                     	endif
  3991  001BA2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3992  001BA2  0E00               	movlw	low (__mediumconst shr (0+16))
  3993  001BA4  6EF8               	movwf	tblptru,c
  3994  001BA6                     	endif
  3995  001BA6  0008               	tblrd		*
  3996  001BA8  50F5               	movf	tablat,w,c
  3997  001BAA  6E0D               	movwf	(??_atoi+2)^0,c
  3998  001BAC  6A0E               	clrf	(??_atoi+3)^0,c
  3999  001BAE  500B               	movf	??_atoi^0,w,c
  4000  001BB0  260D               	addwf	(??_atoi+2)^0,f,c
  4001  001BB2  500C               	movf	(??_atoi+1)^0,w,c
  4002  001BB4  220E               	addwfc	(??_atoi+3)^0,f,c
  4003  001BB6  500E               	movf	(??_atoi+3)^0,w,c
  4004  001BB8  E10A               	bnz	u3570
  4005  001BBA  0E0A               	movlw	10
  4006  001BBC  5C0D               	subwf	(??_atoi+2)^0,w,c
  4007  001BBE  A0D8               	btfss	status,0,c
  4008  001BC0  EFE4  F00D         	goto	u3571
  4009  001BC4  EFE7  F00D         	goto	u3570
  4010  001BC8                     u3571:
  4011  001BC8  0E01               	movlw	1
  4012  001BCA  EFE8  F00D         	goto	u3580
  4013  001BCE                     u3570:
  4014  001BCE  0E00               	movlw	0
  4015  001BD0                     u3580:
  4016  001BD0  6E13               	movwf	_atoi$1786^0,c
  4017  001BD2  6A14               	clrf	(_atoi$1786+1)^0,c
  4018  001BD4  5013               	movf	_atoi$1786^0,w,c
  4019  001BD6  1014               	iorwf	(_atoi$1786+1)^0,w,c
  4020  001BD8  A4D8               	btfss	status,2,c
  4021  001BDA  EFF1  F00D         	goto	u3591
  4022  001BDE  EFF3  F00D         	goto	u3590
  4023  001BE2                     u3591:
  4024  001BE2  EFAC  F00D         	goto	l3141
  4025  001BE6                     u3590:
  4026  001BE6  500F               	movf	atoi@neg^0,w,c
  4027  001BE8  1010               	iorwf	(atoi@neg+1)^0,w,c
  4028  001BEA  A4D8               	btfss	status,2,c
  4029  001BEC  EFFA  F00D         	goto	u3601
  4030  001BF0  EFFC  F00D         	goto	u3600
  4031  001BF4                     u3601:
  4032  001BF4  EF0A  F00E         	goto	l1079
  4033  001BF8                     u3600:
  4034  001BF8  C016  F00B         	movff	atoi@n,??_atoi
  4035  001BFC  C017  F00C         	movff	atoi@n+1,??_atoi+1
  4036  001C00  1E0B               	comf	??_atoi^0,f,c
  4037  001C02  1E0C               	comf	(??_atoi+1)^0,f,c
  4038  001C04  4A0B               	infsnz	??_atoi^0,f,c
  4039  001C06  2A0C               	incf	(??_atoi+1)^0,f,c
  4040  001C08  C00B  F009         	movff	??_atoi,?_atoi
  4041  001C0C  C00C  F00A         	movff	??_atoi+1,?_atoi+1
  4042  001C10  EF0E  F00E         	goto	l1082
  4043  001C14                     l1079:
  4044  001C14  C016  F009         	movff	atoi@n,?_atoi
  4045  001C18  C017  F00A         	movff	atoi@n+1,?_atoi+1
  4046  001C1C                     l1082:
  4047  001C1C  0012               	return		;funcret
  4048  001C1E                     __end_of_atoi:
  4049                           	callstack 0
  4050                           
  4051 ;; *************** function _isspace *****************
  4052 ;; Defined at:
  4053 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;  c               2    1[COMRAM] int 
  4056 ;; Auto vars:     Size  Location     Type
  4057 ;;		None
  4058 ;; Return value:  Size  Location     Type
  4059 ;;                  2    1[COMRAM] int 
  4060 ;; Registers used:
  4061 ;;		wreg, status,2, status,0
  4062 ;; Tracked objects:
  4063 ;;		On entry : 0/0
  4064 ;;		On exit  : 0/0
  4065 ;;		Unchanged: 0/0
  4066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4067 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4068 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4069 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4070 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4071 ;;Total ram usage:        7 bytes
  4072 ;; Hardware stack levels used: 1
  4073 ;; Hardware stack levels required when called: 1
  4074 ;; This function calls:
  4075 ;;		Nothing
  4076 ;; This function is called by:
  4077 ;;		_atoi
  4078 ;; This function uses a non-reentrant model
  4079 ;;
  4080                           
  4081                           	psect	text14
  4082  0023CC                     __ptext14:
  4083                           	callstack 0
  4084  0023CC                     _isspace:
  4085                           	callstack 25
  4086  0023CC  0E01               	movlw	1
  4087  0023CE  6E08               	movwf	_isspace$1802^0,c
  4088  0023D0  0E20               	movlw	32
  4089  0023D2  1802               	xorwf	isspace@c^0,w,c
  4090  0023D4  1003               	iorwf	(isspace@c+1)^0,w,c
  4091  0023D6  B4D8               	btfsc	status,2,c
  4092  0023D8  EFF0  F011         	goto	u3371
  4093  0023DC  EFF2  F011         	goto	u3370
  4094  0023E0                     u3371:
  4095  0023E0  EF0B  F012         	goto	l3051
  4096  0023E4                     u3370:
  4097  0023E4  0EF7               	movlw	247
  4098  0023E6  6E04               	movwf	??_isspace^0,c
  4099  0023E8  0EFF               	movlw	255
  4100  0023EA  6E05               	movwf	(??_isspace+1)^0,c
  4101  0023EC  C002  F006         	movff	isspace@c,??_isspace+2
  4102  0023F0  C003  F007         	movff	isspace@c+1,??_isspace+3
  4103  0023F4  5004               	movf	??_isspace^0,w,c
  4104  0023F6  2606               	addwf	(??_isspace+2)^0,f,c
  4105  0023F8  5005               	movf	(??_isspace+1)^0,w,c
  4106  0023FA  2207               	addwfc	(??_isspace+3)^0,f,c
  4107  0023FC  5007               	movf	(??_isspace+3)^0,w,c
  4108  0023FE  E109               	bnz	u3380
  4109  002400  0E05               	movlw	5
  4110  002402  5C06               	subwf	(??_isspace+2)^0,w,c
  4111  002404  A0D8               	btfss	status,0,c
  4112  002406  EF07  F012         	goto	u3381
  4113  00240A  EF09  F012         	goto	u3380
  4114  00240E                     u3381:
  4115  00240E  EF0B  F012         	goto	l3051
  4116  002412                     u3380:
  4117  002412  0E00               	movlw	0
  4118  002414  6E08               	movwf	_isspace$1802^0,c
  4119  002416                     l3051:
  4120  002416  C008  F002         	movff	_isspace$1802,?_isspace
  4121  00241A  6A03               	clrf	(?_isspace+1)^0,c
  4122  00241C  0012               	return		;funcret
  4123  00241E                     __end_of_isspace:
  4124                           	callstack 0
  4125                           
  4126 ;; *************** function _isdigit *****************
  4127 ;; Defined at:
  4128 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  4129 ;; Parameters:    Size  Location     Type
  4130 ;;  c               2    1[COMRAM] int 
  4131 ;; Auto vars:     Size  Location     Type
  4132 ;;		None
  4133 ;; Return value:  Size  Location     Type
  4134 ;;                  2    1[COMRAM] int 
  4135 ;; Registers used:
  4136 ;;		wreg, status,2, status,0
  4137 ;; Tracked objects:
  4138 ;;		On entry : 0/0
  4139 ;;		On exit  : 0/0
  4140 ;;		Unchanged: 0/0
  4141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4142 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4144 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4145 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4146 ;;Total ram usage:        6 bytes
  4147 ;; Hardware stack levels used: 1
  4148 ;; Hardware stack levels required when called: 1
  4149 ;; This function calls:
  4150 ;;		Nothing
  4151 ;; This function is called by:
  4152 ;;		_vfpfcnvrt
  4153 ;;		_atoi
  4154 ;; This function uses a non-reentrant model
  4155 ;;
  4156                           
  4157                           	psect	text15
  4158  0024E8                     __ptext15:
  4159                           	callstack 0
  4160  0024E8                     _isdigit:
  4161                           	callstack 26
  4162  0024E8  0ED0               	movlw	208
  4163  0024EA  6E04               	movwf	??_isdigit^0,c
  4164  0024EC  0EFF               	movlw	255
  4165  0024EE  6E05               	movwf	(??_isdigit+1)^0,c
  4166  0024F0  C002  F006         	movff	isdigit@c,??_isdigit+2
  4167  0024F4  C003  F007         	movff	isdigit@c+1,??_isdigit+3
  4168  0024F8  5004               	movf	??_isdigit^0,w,c
  4169  0024FA  2606               	addwf	(??_isdigit+2)^0,f,c
  4170  0024FC  5005               	movf	(??_isdigit+1)^0,w,c
  4171  0024FE  2207               	addwfc	(??_isdigit+3)^0,f,c
  4172  002500  5007               	movf	(??_isdigit+3)^0,w,c
  4173  002502  E10A               	bnz	u3350
  4174  002504  0E0A               	movlw	10
  4175  002506  5C06               	subwf	(??_isdigit+2)^0,w,c
  4176  002508  A0D8               	btfss	status,0,c
  4177  00250A  EF89  F012         	goto	u3351
  4178  00250E  EF8C  F012         	goto	u3350
  4179  002512                     u3351:
  4180  002512  0E01               	movlw	1
  4181  002514  EF8D  F012         	goto	u3360
  4182  002518                     u3350:
  4183  002518  0E00               	movlw	0
  4184  00251A                     u3360:
  4185  00251A  6E02               	movwf	?_isdigit^0,c
  4186  00251C  6A03               	clrf	(?_isdigit+1)^0,c
  4187  00251E  0012               	return		;funcret
  4188  002520                     __end_of_isdigit:
  4189                           	callstack 0
  4190                           
  4191 ;; *************** function ___wmul *****************
  4192 ;; Defined at:
  4193 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;  multiplier      2    1[COMRAM] unsigned int 
  4196 ;;  multiplicand    2    3[COMRAM] unsigned int 
  4197 ;; Auto vars:     Size  Location     Type
  4198 ;;  product         2    5[COMRAM] unsigned int 
  4199 ;; Return value:  Size  Location     Type
  4200 ;;                  2    1[COMRAM] unsigned int 
  4201 ;; Registers used:
  4202 ;;		wreg, status,2, status,0, prodl, prodh
  4203 ;; Tracked objects:
  4204 ;;		On entry : 0/0
  4205 ;;		On exit  : 0/0
  4206 ;;		Unchanged: 0/0
  4207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4208 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4209 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4211 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4212 ;;Total ram usage:        6 bytes
  4213 ;; Hardware stack levels used: 1
  4214 ;; Hardware stack levels required when called: 1
  4215 ;; This function calls:
  4216 ;;		Nothing
  4217 ;; This function is called by:
  4218 ;;		_main
  4219 ;;		_atoi
  4220 ;;		_ADC2String
  4221 ;; This function uses a non-reentrant model
  4222 ;;
  4223                           
  4224                           	psect	text16
  4225  0025EA                     __ptext16:
  4226                           	callstack 0
  4227  0025EA                     ___wmul:
  4228                           	callstack 25
  4229  0025EA  5002               	movf	___wmul@multiplier^0,w,c
  4230  0025EC  0204               	mulwf	___wmul@multiplicand^0,c
  4231  0025EE  CFF3 F006          	movff	prodl,___wmul@product
  4232  0025F2  CFF4 F007          	movff	prodh,___wmul@product+1
  4233  0025F6  5002               	movf	___wmul@multiplier^0,w,c
  4234  0025F8  0205               	mulwf	(___wmul@multiplicand+1)^0,c
  4235  0025FA  50F3               	movf	243,w,c
  4236  0025FC  2607               	addwf	(___wmul@product+1)^0,f,c
  4237  0025FE  5003               	movf	(___wmul@multiplier+1)^0,w,c
  4238  002600  0204               	mulwf	___wmul@multiplicand^0,c
  4239  002602  50F3               	movf	243,w,c
  4240  002604  2607               	addwf	(___wmul@product+1)^0,f,c
  4241  002606  C006  F002         	movff	___wmul@product,?___wmul
  4242  00260A  C007  F003         	movff	___wmul@product+1,?___wmul+1
  4243  00260E  0012               	return		;funcret
  4244  002610                     __end_of___wmul:
  4245                           	callstack 0
  4246                           
  4247 ;; *************** function ___lwdiv *****************
  4248 ;; Defined at:
  4249 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  4250 ;; Parameters:    Size  Location     Type
  4251 ;;  dividend        2    1[COMRAM] unsigned int 
  4252 ;;  divisor         2    3[COMRAM] unsigned int 
  4253 ;; Auto vars:     Size  Location     Type
  4254 ;;  quotient        2    5[COMRAM] unsigned int 
  4255 ;;  counter         1    7[COMRAM] unsigned char 
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  2    1[COMRAM] unsigned int 
  4258 ;; Registers used:
  4259 ;;		wreg, status,2, status,0
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4265 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4266 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4268 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4269 ;;Total ram usage:        7 bytes
  4270 ;; Hardware stack levels used: 1
  4271 ;; Hardware stack levels required when called: 1
  4272 ;; This function calls:
  4273 ;;		Nothing
  4274 ;; This function is called by:
  4275 ;;		_main
  4276 ;;		_ADC2String
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           	psect	text17
  4281  002238                     __ptext17:
  4282                           	callstack 0
  4283  002238                     ___lwdiv:
  4284                           	callstack 29
  4285  002238  0E00               	movlw	0
  4286  00223A  6E07               	movwf	(___lwdiv@quotient+1)^0,c
  4287  00223C  0E00               	movlw	0
  4288  00223E  6E06               	movwf	___lwdiv@quotient^0,c
  4289  002240  5004               	movf	___lwdiv@divisor^0,w,c
  4290  002242  1005               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4291  002244  B4D8               	btfsc	status,2,c
  4292  002246  EF27  F011         	goto	u2371
  4293  00224A  EF29  F011         	goto	u2370
  4294  00224E                     u2371:
  4295  00224E  EF51  F011         	goto	l759
  4296  002252                     u2370:
  4297  002252  0E01               	movlw	1
  4298  002254  6E08               	movwf	___lwdiv@counter^0,c
  4299  002256  EF31  F011         	goto	l2539
  4300  00225A                     l2537:
  4301  00225A  90D8               	bcf	status,0,c
  4302  00225C  3604               	rlcf	___lwdiv@divisor^0,f,c
  4303  00225E  3605               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4304  002260  2A08               	incf	___lwdiv@counter^0,f,c
  4305  002262                     l2539:
  4306  002262  AE05               	btfss	(___lwdiv@divisor+1)^0,7,c
  4307  002264  EF36  F011         	goto	u2381
  4308  002268  EF38  F011         	goto	u2380
  4309  00226C                     u2381:
  4310  00226C  EF2D  F011         	goto	l2537
  4311  002270                     u2380:
  4312  002270                     l2541:
  4313  002270  90D8               	bcf	status,0,c
  4314  002272  3606               	rlcf	___lwdiv@quotient^0,f,c
  4315  002274  3607               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4316  002276  5004               	movf	___lwdiv@divisor^0,w,c
  4317  002278  5C02               	subwf	___lwdiv@dividend^0,w,c
  4318  00227A  5005               	movf	(___lwdiv@divisor+1)^0,w,c
  4319  00227C  5803               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4320  00227E  A0D8               	btfss	status,0,c
  4321  002280  EF44  F011         	goto	u2391
  4322  002284  EF46  F011         	goto	u2390
  4323  002288                     u2391:
  4324  002288  EF4B  F011         	goto	l2549
  4325  00228C                     u2390:
  4326  00228C  5004               	movf	___lwdiv@divisor^0,w,c
  4327  00228E  5E02               	subwf	___lwdiv@dividend^0,f,c
  4328  002290  5005               	movf	(___lwdiv@divisor+1)^0,w,c
  4329  002292  5A03               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4330  002294  8006               	bsf	___lwdiv@quotient^0,0,c
  4331  002296                     l2549:
  4332  002296  90D8               	bcf	status,0,c
  4333  002298  3205               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4334  00229A  3204               	rrcf	___lwdiv@divisor^0,f,c
  4335  00229C  2E08               	decfsz	___lwdiv@counter^0,f,c
  4336  00229E  EF38  F011         	goto	l2541
  4337  0022A2                     l759:
  4338  0022A2  C006  F002         	movff	___lwdiv@quotient,?___lwdiv
  4339  0022A6  C007  F003         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4340  0022AA  0012               	return		;funcret
  4341  0022AC                     __end_of___lwdiv:
  4342                           	callstack 0
  4343                           
  4344 ;; *************** function _Timer0_init *****************
  4345 ;; Defined at:
  4346 ;;		line 7 in file "timers.c"
  4347 ;; Parameters:    Size  Location     Type
  4348 ;;		None
  4349 ;; Auto vars:     Size  Location     Type
  4350 ;;		None
  4351 ;; Return value:  Size  Location     Type
  4352 ;;                  1    wreg      void 
  4353 ;; Registers used:
  4354 ;;		wreg, status,2
  4355 ;; Tracked objects:
  4356 ;;		On entry : 0/0
  4357 ;;		On exit  : 0/0
  4358 ;;		Unchanged: 0/0
  4359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4364 ;;Total ram usage:        0 bytes
  4365 ;; Hardware stack levels used: 1
  4366 ;; Hardware stack levels required when called: 1
  4367 ;; This function calls:
  4368 ;;		Nothing
  4369 ;; This function is called by:
  4370 ;;		_main
  4371 ;; This function uses a non-reentrant model
  4372 ;;
  4373                           
  4374                           	psect	text18
  4375  002636                     __ptext18:
  4376                           	callstack 0
  4377  002636                     _Timer0_init:
  4378                           	callstack 29
  4379  002636                     
  4380                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  4381  002636  50D6               	movf	214,w,c	;volatile
  4382  002638  0B1F               	andlw	-225
  4383  00263A  0940               	iorlw	64
  4384  00263C  6ED6               	movwf	214,c	;volatile
  4385  00263E                     
  4386                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  4387  00263E  88D6               	bsf	214,4,c	;volatile
  4388                           
  4389                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  4390  002640  50D6               	movf	214,w,c	;volatile
  4391  002642  0BF0               	andlw	-16
  4392  002644  0908               	iorlw	8
  4393  002646  6ED6               	movwf	214,c	;volatile
  4394  002648                     
  4395                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  4396  002648  88D5               	bsf	213,4,c	;volatile
  4397                           
  4398                           ;timers.c: 15:     TMR0H=0b00001011;
  4399  00264A  0E0B               	movlw	11
  4400  00264C  6ED4               	movwf	212,c	;volatile
  4401                           
  4402                           ;timers.c: 16:     TMR0L=0b11011011;
  4403  00264E  0EDB               	movlw	219
  4404  002650  6ED3               	movwf	211,c	;volatile
  4405  002652                     
  4406                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  4407  002652  8ED5               	bsf	213,7,c	;volatile
  4408  002654  0012               	return		;funcret
  4409  002656                     __end_of_Timer0_init:
  4410                           	callstack 0
  4411                           
  4412 ;; *************** function _LEDarray_init *****************
  4413 ;; Defined at:
  4414 ;;		line 8 in file "LEDarray.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;		None
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;		None
  4419 ;; Return value:  Size  Location     Type
  4420 ;;                  1    wreg      void 
  4421 ;; Registers used:
  4422 ;;		None
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4432 ;;Total ram usage:        0 bytes
  4433 ;; Hardware stack levels used: 1
  4434 ;; Hardware stack levels required when called: 1
  4435 ;; This function calls:
  4436 ;;		Nothing
  4437 ;; This function is called by:
  4438 ;;		_main
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442                           	psect	text19
  4443  002610                     __ptext19:
  4444                           	callstack 0
  4445  002610                     _LEDarray_init:
  4446                           	callstack 29
  4447  002610                     
  4448                           ;LEDarray.c: 13:     LATGbits.LATG0=0;
  4449  002610  907F               	bcf	127,0,c	;volatile
  4450                           
  4451                           ;LEDarray.c: 14:     TRISGbits.TRISG0=0;
  4452  002612  9087               	bcf	135,0,c	;volatile
  4453                           
  4454                           ;LEDarray.c: 16:     LATGbits.LATG1=0;
  4455  002614  927F               	bcf	127,1,c	;volatile
  4456                           
  4457                           ;LEDarray.c: 17:     TRISGbits.TRISG1=0;
  4458  002616  9287               	bcf	135,1,c	;volatile
  4459                           
  4460                           ;LEDarray.c: 19:     LATAbits.LATA2=0;
  4461  002618  9479               	bcf	121,2,c	;volatile
  4462                           
  4463                           ;LEDarray.c: 20:     TRISAbits.TRISA2=0;
  4464  00261A  9481               	bcf	129,2,c	;volatile
  4465                           
  4466                           ;LEDarray.c: 22:     LATFbits.LATF6=0;
  4467  00261C  9C7E               	bcf	126,6,c	;volatile
  4468                           
  4469                           ;LEDarray.c: 23:     TRISFbits.TRISF6=0;
  4470  00261E  9C86               	bcf	134,6,c	;volatile
  4471                           
  4472                           ;LEDarray.c: 25:     LATAbits.LATA4=0;
  4473  002620  9879               	bcf	121,4,c	;volatile
  4474                           
  4475                           ;LEDarray.c: 26:     TRISAbits.TRISA4=0;
  4476  002622  9881               	bcf	129,4,c	;volatile
  4477                           
  4478                           ;LEDarray.c: 28:     LATAbits.LATA5=0;
  4479  002624  9A79               	bcf	121,5,c	;volatile
  4480                           
  4481                           ;LEDarray.c: 29:     TRISAbits.TRISA5=0;
  4482  002626  9A81               	bcf	129,5,c	;volatile
  4483                           
  4484                           ;LEDarray.c: 31:     LATFbits.LATF0=0;
  4485  002628  907E               	bcf	126,0,c	;volatile
  4486                           
  4487                           ;LEDarray.c: 32:     TRISFbits.TRISF0=0;
  4488  00262A  9086               	bcf	134,0,c	;volatile
  4489                           
  4490                           ;LEDarray.c: 34:     LATBbits.LATB0=0;
  4491  00262C  907A               	bcf	122,0,c	;volatile
  4492                           
  4493                           ;LEDarray.c: 35:     TRISBbits.TRISB0=0;
  4494  00262E  9082               	bcf	130,0,c	;volatile
  4495                           
  4496                           ;LEDarray.c: 37:     LATBbits.LATB1=0;
  4497  002630  927A               	bcf	122,1,c	;volatile
  4498                           
  4499                           ;LEDarray.c: 38:     TRISBbits.TRISB1=0;
  4500  002632  9282               	bcf	130,1,c	;volatile
  4501  002634  0012               	return		;funcret
  4502  002636                     __end_of_LEDarray_init:
  4503                           	callstack 0
  4504                           
  4505 ;; *************** function _LEDarray_disp_bin *****************
  4506 ;; Defined at:
  4507 ;;		line 45 in file "LEDarray.c"
  4508 ;; Parameters:    Size  Location     Type
  4509 ;;  number          2    1[COMRAM] unsigned int 
  4510 ;; Auto vars:     Size  Location     Type
  4511 ;;		None
  4512 ;; Return value:  Size  Location     Type
  4513 ;;                  1    wreg      void 
  4514 ;; Registers used:
  4515 ;;		None
  4516 ;; Tracked objects:
  4517 ;;		On entry : 0/0
  4518 ;;		On exit  : 0/0
  4519 ;;		Unchanged: 0/0
  4520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4521 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4524 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4525 ;;Total ram usage:        2 bytes
  4526 ;; Hardware stack levels used: 1
  4527 ;; Hardware stack levels required when called: 1
  4528 ;; This function calls:
  4529 ;;		Nothing
  4530 ;; This function is called by:
  4531 ;;		_main
  4532 ;;		_LEDarray_disp_dec
  4533 ;;		_LEDarray_disp_PPM
  4534 ;; This function uses a non-reentrant model
  4535 ;;
  4536                           
  4537                           	psect	text20
  4538  0020AE                     __ptext20:
  4539                           	callstack 0
  4540  0020AE                     _LEDarray_disp_bin:
  4541                           	callstack 29
  4542  0020AE                     
  4543                           ;LEDarray.c: 45: void LEDarray_disp_bin(unsigned int number);LEDarray.c: 46: {;LEDarray.
      +                          c: 50:     if (number & 0b000000001) { LATGbits.LATG0=1;} else { LATGbits.LATG0=0;}
  4544  0020AE  A002               	btfss	LEDarray_disp_bin@number^0,0,c
  4545  0020B0  EF5C  F010         	goto	u2271
  4546  0020B4  EF5E  F010         	goto	u2270
  4547  0020B8                     u2271:
  4548  0020B8  EF61  F010         	goto	l114
  4549  0020BC                     u2270:
  4550  0020BC  807F               	bsf	127,0,c	;volatile
  4551  0020BE  EF62  F010         	goto	l115
  4552  0020C2                     l114:
  4553  0020C2  907F               	bcf	127,0,c	;volatile
  4554  0020C4                     l115:
  4555                           
  4556                           ;LEDarray.c: 51:     if (number & 0b000000010) { LATGbits.LATG1=1;} else { LATGbits.LATG
      +                          1=0;}
  4557  0020C4  A202               	btfss	LEDarray_disp_bin@number^0,1,c
  4558  0020C6  EF67  F010         	goto	u2281
  4559  0020CA  EF69  F010         	goto	u2280
  4560  0020CE                     u2281:
  4561  0020CE  EF6C  F010         	goto	l116
  4562  0020D2                     u2280:
  4563  0020D2  827F               	bsf	127,1,c	;volatile
  4564  0020D4  EF6D  F010         	goto	l117
  4565  0020D8                     l116:
  4566  0020D8  927F               	bcf	127,1,c	;volatile
  4567  0020DA                     l117:
  4568                           
  4569                           ;LEDarray.c: 52:     if (number & 0b000000100) { LATAbits.LATA2=1;} else { LATAbits.LATA
      +                          2=0;}
  4570  0020DA  A402               	btfss	LEDarray_disp_bin@number^0,2,c
  4571  0020DC  EF72  F010         	goto	u2291
  4572  0020E0  EF74  F010         	goto	u2290
  4573  0020E4                     u2291:
  4574  0020E4  EF77  F010         	goto	l118
  4575  0020E8                     u2290:
  4576  0020E8  8479               	bsf	121,2,c	;volatile
  4577  0020EA  EF78  F010         	goto	l119
  4578  0020EE                     l118:
  4579  0020EE  9479               	bcf	121,2,c	;volatile
  4580  0020F0                     l119:
  4581                           
  4582                           ;LEDarray.c: 53:     if (number & 0b000001000) { LATFbits.LATF6=1;} else { LATFbits.LATF
      +                          6=0;}
  4583  0020F0  A602               	btfss	LEDarray_disp_bin@number^0,3,c
  4584  0020F2  EF7D  F010         	goto	u2301
  4585  0020F6  EF7F  F010         	goto	u2300
  4586  0020FA                     u2301:
  4587  0020FA  EF82  F010         	goto	l120
  4588  0020FE                     u2300:
  4589  0020FE  8C7E               	bsf	126,6,c	;volatile
  4590  002100  EF83  F010         	goto	l121
  4591  002104                     l120:
  4592  002104  9C7E               	bcf	126,6,c	;volatile
  4593  002106                     l121:
  4594                           
  4595                           ;LEDarray.c: 54:     if (number & 0b000010000) { LATAbits.LATA4=1;} else { LATAbits.LATA
      +                          4=0;}
  4596  002106  A802               	btfss	LEDarray_disp_bin@number^0,4,c
  4597  002108  EF88  F010         	goto	u2311
  4598  00210C  EF8A  F010         	goto	u2310
  4599  002110                     u2311:
  4600  002110  EF8D  F010         	goto	l122
  4601  002114                     u2310:
  4602  002114  8879               	bsf	121,4,c	;volatile
  4603  002116  EF8E  F010         	goto	l123
  4604  00211A                     l122:
  4605  00211A  9879               	bcf	121,4,c	;volatile
  4606  00211C                     l123:
  4607                           
  4608                           ;LEDarray.c: 55:     if (number & 0b000100000) { LATAbits.LATA5=1;} else { LATAbits.LATA
      +                          5=0;}
  4609  00211C  AA02               	btfss	LEDarray_disp_bin@number^0,5,c
  4610  00211E  EF93  F010         	goto	u2321
  4611  002122  EF95  F010         	goto	u2320
  4612  002126                     u2321:
  4613  002126  EF98  F010         	goto	l124
  4614  00212A                     u2320:
  4615  00212A  8A79               	bsf	121,5,c	;volatile
  4616  00212C  EF99  F010         	goto	l125
  4617  002130                     l124:
  4618  002130  9A79               	bcf	121,5,c	;volatile
  4619  002132                     l125:
  4620                           
  4621                           ;LEDarray.c: 56:     if (number & 0b001000000) { LATFbits.LATF0=1;} else { LATFbits.LATF
      +                          0=0;}
  4622  002132  AC02               	btfss	LEDarray_disp_bin@number^0,6,c
  4623  002134  EF9E  F010         	goto	u2331
  4624  002138  EFA0  F010         	goto	u2330
  4625  00213C                     u2331:
  4626  00213C  EFA3  F010         	goto	l126
  4627  002140                     u2330:
  4628  002140  807E               	bsf	126,0,c	;volatile
  4629  002142  EFA4  F010         	goto	l127
  4630  002146                     l126:
  4631  002146  907E               	bcf	126,0,c	;volatile
  4632  002148                     l127:
  4633                           
  4634                           ;LEDarray.c: 57:     if (number & 0b010000000) { LATBbits.LATB0=1;} else { LATBbits.LATB
      +                          0=0;}
  4635  002148  AE02               	btfss	LEDarray_disp_bin@number^0,7,c
  4636  00214A  EFA9  F010         	goto	u2341
  4637  00214E  EFAB  F010         	goto	u2340
  4638  002152                     u2341:
  4639  002152  EFAE  F010         	goto	l128
  4640  002156                     u2340:
  4641  002156  807A               	bsf	122,0,c	;volatile
  4642  002158  EFAF  F010         	goto	l129
  4643  00215C                     l128:
  4644  00215C  907A               	bcf	122,0,c	;volatile
  4645  00215E                     l129:
  4646                           
  4647                           ;LEDarray.c: 58:     if (number & 0b100000000) { LATBbits.LATB1=1;} else { LATBbits.LATB
      +                          1=0;}
  4648  00215E  A003               	btfss	(LEDarray_disp_bin@number+1)^0,0,c
  4649  002160  EFB4  F010         	goto	u2351
  4650  002164  EFB6  F010         	goto	u2350
  4651  002168                     u2351:
  4652  002168  EFB9  F010         	goto	l130
  4653  00216C                     u2350:
  4654  00216C  827A               	bsf	122,1,c	;volatile
  4655  00216E  EFBA  F010         	goto	l132
  4656  002172                     l130:
  4657  002172  927A               	bcf	122,1,c	;volatile
  4658  002174                     l132:
  4659  002174  0012               	return		;funcret
  4660  002176                     __end_of_LEDarray_disp_bin:
  4661                           	callstack 0
  4662                           
  4663 ;; *************** function _LCD_sendstring *****************
  4664 ;; Defined at:
  4665 ;;		line 141 in file "LCD.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;  string          2    6[COMRAM] PTR unsigned char 
  4668 ;;		 -> main@buf(25), 
  4669 ;; Auto vars:     Size  Location     Type
  4670 ;;		None
  4671 ;; Return value:  Size  Location     Type
  4672 ;;                  1    wreg      void 
  4673 ;; Registers used:
  4674 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4675 ;; Tracked objects:
  4676 ;;		On entry : 0/0
  4677 ;;		On exit  : 0/0
  4678 ;;		Unchanged: 0/0
  4679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4680 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4683 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4684 ;;Total ram usage:        2 bytes
  4685 ;; Hardware stack levels used: 1
  4686 ;; Hardware stack levels required when called: 4
  4687 ;; This function calls:
  4688 ;;		_LCD_sendbyte
  4689 ;; This function is called by:
  4690 ;;		_main
  4691 ;;		_ADC2String
  4692 ;; This function uses a non-reentrant model
  4693 ;;
  4694                           
  4695                           	psect	text21
  4696  002556                     __ptext21:
  4697                           	callstack 0
  4698  002556                     _LCD_sendstring:
  4699                           	callstack 26
  4700  002556                     
  4701                           ;LCD.c: 141: void LCD_sendstring(char *string);LCD.c: 142: {;LCD.c: 144:     while(*stri
      +                          ng != 0){
  4702  002556  EFB8  F012         	goto	l2529
  4703  00255A                     l2525:
  4704                           
  4705                           ;LCD.c: 145:   LCD_sendbyte(*string++,1);
  4706  00255A  0E01               	movlw	1
  4707  00255C  6E03               	movwf	LCD_sendbyte@type^0,c
  4708  00255E  C007  FFD9         	movff	LCD_sendstring@string,fsr2l
  4709  002562  C008  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  4710  002566  50DF               	movf	indf2,w,c
  4711  002568  ECC5  F012         	call	_LCD_sendbyte
  4712  00256C  4A07               	infsnz	LCD_sendstring@string^0,f,c
  4713  00256E  2A08               	incf	(LCD_sendstring@string+1)^0,f,c
  4714  002570                     l2529:
  4715                           
  4716                           ;LCD.c: 144:     while(*string != 0){
  4717  002570  C007  FFD9         	movff	LCD_sendstring@string,fsr2l
  4718  002574  C008  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  4719  002578  50DF               	movf	indf2,w,c
  4720  00257A  A4D8               	btfss	status,2,c
  4721  00257C  EFC2  F012         	goto	u2361
  4722  002580  EFC4  F012         	goto	u2360
  4723  002584                     u2361:
  4724  002584  EFAD  F012         	goto	l2525
  4725  002588                     u2360:
  4726  002588  0012               	return		;funcret
  4727  00258A                     __end_of_LCD_sendstring:
  4728                           	callstack 0
  4729                           
  4730 ;; *************** function _LCD_Init *****************
  4731 ;; Defined at:
  4732 ;;		line 76 in file "LCD.c"
  4733 ;; Parameters:    Size  Location     Type
  4734 ;;		None
  4735 ;; Auto vars:     Size  Location     Type
  4736 ;;		None
  4737 ;; Return value:  Size  Location     Type
  4738 ;;                  1    wreg      void 
  4739 ;; Registers used:
  4740 ;;		wreg, status,2, status,0, cstack
  4741 ;; Tracked objects:
  4742 ;;		On entry : 0/0
  4743 ;;		On exit  : 0/0
  4744 ;;		Unchanged: 0/0
  4745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4748 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4749 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4750 ;;Total ram usage:        2 bytes
  4751 ;; Hardware stack levels used: 1
  4752 ;; Hardware stack levels required when called: 4
  4753 ;; This function calls:
  4754 ;;		_LCD_sendbyte
  4755 ;;		_LCD_sendnibble
  4756 ;; This function is called by:
  4757 ;;		_main
  4758 ;; This function uses a non-reentrant model
  4759 ;;
  4760                           
  4761                           	psect	text22
  4762  001F0A                     __ptext22:
  4763                           	callstack 0
  4764  001F0A                     _LCD_Init:
  4765                           	callstack 26
  4766  001F0A                     
  4767                           ;LCD.c: 86:     TRISCbits.TRISC6 = 0;
  4768  001F0A  9C83               	bcf	131,6,c	;volatile
  4769                           
  4770                           ;LCD.c: 87:     TRISCbits.TRISC2 = 0;
  4771  001F0C  9483               	bcf	131,2,c	;volatile
  4772                           
  4773                           ;LCD.c: 88:     TRISBbits.TRISB3 = 0;
  4774  001F0E  9682               	bcf	130,3,c	;volatile
  4775                           
  4776                           ;LCD.c: 89:     TRISBbits.TRISB2 = 0;
  4777  001F10  9482               	bcf	130,2,c	;volatile
  4778                           
  4779                           ;LCD.c: 90:     TRISEbits.TRISE3 = 0;
  4780  001F12  9685               	bcf	133,3,c	;volatile
  4781                           
  4782                           ;LCD.c: 91:     TRISEbits.TRISE1 = 0;
  4783  001F14  9285               	bcf	133,1,c	;volatile
  4784                           
  4785                           ;LCD.c: 93:     LATCbits.LATC6 = 0;
  4786  001F16  9C7B               	bcf	123,6,c	;volatile
  4787                           
  4788                           ;LCD.c: 94:     LATCbits.LATC2 = 0;
  4789  001F18  947B               	bcf	123,2,c	;volatile
  4790                           
  4791                           ;LCD.c: 95:     LATBbits.LATB3 = 0;
  4792  001F1A  967A               	bcf	122,3,c	;volatile
  4793                           
  4794                           ;LCD.c: 96:     LATBbits.LATB2 = 0;
  4795  001F1C  947A               	bcf	122,2,c	;volatile
  4796                           
  4797                           ;LCD.c: 97:     LATEbits.LATE3 = 0;
  4798  001F1E  967D               	bcf	125,3,c	;volatile
  4799                           
  4800                           ;LCD.c: 98:     LATEbits.LATE1 = 0;
  4801  001F20  927D               	bcf	125,1,c	;volatile
  4802  001F22                     
  4803                           ;LCD.c: 105:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4804  001F22  0E05               	movlw	5
  4805  001F24  6E08               	movwf	(??_LCD_Init+1)^0,c
  4806  001F26  0E0F               	movlw	15
  4807  001F28  6E07               	movwf	??_LCD_Init^0,c
  4808  001F2A  0EF1               	movlw	241
  4809  001F2C                     u4077:
  4810  001F2C  2EE8               	decfsz	wreg,f,c
  4811  001F2E  D7FE               	bra	u4077
  4812  001F30  2E07               	decfsz	??_LCD_Init^0,f,c
  4813  001F32  D7FC               	bra	u4077
  4814  001F34  2E08               	decfsz	(??_LCD_Init+1)^0,f,c
  4815  001F36  D7FA               	bra	u4077
  4816  001F38  F000               	nop	
  4817  001F3A                     
  4818                           ;LCD.c: 106:     LCD_sendnibble(0b0011);
  4819  001F3A  0E03               	movlw	3
  4820  001F3C  EC56  F011         	call	_LCD_sendnibble
  4821  001F40                     
  4822                           ;LCD.c: 107:     _delay((unsigned long)((5)*(64000000/4000.0)));
  4823  001F40  0E68               	movlw	104
  4824  001F42  6E07               	movwf	??_LCD_Init^0,c
  4825  001F44  0EE4               	movlw	228
  4826  001F46                     u4087:
  4827  001F46  2EE8               	decfsz	wreg,f,c
  4828  001F48  D7FE               	bra	u4087
  4829  001F4A  2E07               	decfsz	??_LCD_Init^0,f,c
  4830  001F4C  D7FC               	bra	u4087
  4831  001F4E  D000               	nop2	
  4832  001F50                     
  4833                           ;LCD.c: 108:     LCD_sendbyte(0b00101000,0);
  4834  001F50  0E00               	movlw	0
  4835  001F52  6E03               	movwf	LCD_sendbyte@type^0,c
  4836  001F54  0E28               	movlw	40
  4837  001F56  ECC5  F012         	call	_LCD_sendbyte
  4838  001F5A                     
  4839                           ;LCD.c: 109:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  4840  001F5A  0EA0               	movlw	160
  4841  001F5C                     u4097:
  4842  001F5C  D000               	nop2	
  4843  001F5E  2EE8               	decfsz	wreg,f,c
  4844  001F60  D7FD               	bra	u4097
  4845  001F62                     
  4846                           ;LCD.c: 110:     LCD_sendbyte(0b00101000,0);
  4847  001F62  0E00               	movlw	0
  4848  001F64  6E03               	movwf	LCD_sendbyte@type^0,c
  4849  001F66  0E28               	movlw	40
  4850  001F68  ECC5  F012         	call	_LCD_sendbyte
  4851  001F6C                     
  4852                           ;LCD.c: 111:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  4853  001F6C  0EA0               	movlw	160
  4854  001F6E                     u4107:
  4855  001F6E  D000               	nop2	
  4856  001F70  2EE8               	decfsz	wreg,f,c
  4857  001F72  D7FD               	bra	u4107
  4858  001F74                     
  4859                           ;LCD.c: 112:     LCD_sendbyte(0b00001000,0);
  4860  001F74  0E00               	movlw	0
  4861  001F76  6E03               	movwf	LCD_sendbyte@type^0,c
  4862  001F78  0E08               	movlw	8
  4863  001F7A  ECC5  F012         	call	_LCD_sendbyte
  4864  001F7E                     
  4865                           ;LCD.c: 113:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  4866  001F7E  0EA0               	movlw	160
  4867  001F80                     u4117:
  4868  001F80  D000               	nop2	
  4869  001F82  2EE8               	decfsz	wreg,f,c
  4870  001F84  D7FD               	bra	u4117
  4871  001F86                     
  4872                           ;LCD.c: 114:     LCD_sendbyte(0b00000001,0);
  4873  001F86  0E00               	movlw	0
  4874  001F88  6E03               	movwf	LCD_sendbyte@type^0,c
  4875  001F8A  0E01               	movlw	1
  4876  001F8C  ECC5  F012         	call	_LCD_sendbyte
  4877  001F90                     
  4878                           ;LCD.c: 115:     _delay((unsigned long)((2)*(64000000/4000.0)));
  4879  001F90  0E2A               	movlw	42
  4880  001F92  6E07               	movwf	??_LCD_Init^0,c
  4881  001F94  0E8E               	movlw	142
  4882  001F96                     u4127:
  4883  001F96  2EE8               	decfsz	wreg,f,c
  4884  001F98  D7FE               	bra	u4127
  4885  001F9A  2E07               	decfsz	??_LCD_Init^0,f,c
  4886  001F9C  D7FC               	bra	u4127
  4887  001F9E                     
  4888                           ;LCD.c: 116:     LCD_sendbyte(0b00000110,0);
  4889  001F9E  0E00               	movlw	0
  4890  001FA0  6E03               	movwf	LCD_sendbyte@type^0,c
  4891  001FA2  0E06               	movlw	6
  4892  001FA4  ECC5  F012         	call	_LCD_sendbyte
  4893  001FA8                     
  4894                           ;LCD.c: 117:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4895  001FA8  0E05               	movlw	5
  4896  001FAA  6E08               	movwf	(??_LCD_Init+1)^0,c
  4897  001FAC  0E0F               	movlw	15
  4898  001FAE  6E07               	movwf	??_LCD_Init^0,c
  4899  001FB0  0EF1               	movlw	241
  4900  001FB2                     u4137:
  4901  001FB2  2EE8               	decfsz	wreg,f,c
  4902  001FB4  D7FE               	bra	u4137
  4903  001FB6  2E07               	decfsz	??_LCD_Init^0,f,c
  4904  001FB8  D7FC               	bra	u4137
  4905  001FBA  2E08               	decfsz	(??_LCD_Init+1)^0,f,c
  4906  001FBC  D7FA               	bra	u4137
  4907  001FBE  F000               	nop	
  4908  001FC0                     
  4909                           ;LCD.c: 118:     LCD_sendbyte(0b00001110,0);
  4910  001FC0  0E00               	movlw	0
  4911  001FC2  6E03               	movwf	LCD_sendbyte@type^0,c
  4912  001FC4  0E0E               	movlw	14
  4913  001FC6  ECC5  F012         	call	_LCD_sendbyte
  4914  001FCA                     
  4915                           ;LCD.c: 119:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4916  001FCA  0E05               	movlw	5
  4917  001FCC  6E08               	movwf	(??_LCD_Init+1)^0,c
  4918  001FCE  0E0F               	movlw	15
  4919  001FD0  6E07               	movwf	??_LCD_Init^0,c
  4920  001FD2  0EF1               	movlw	241
  4921  001FD4                     u4147:
  4922  001FD4  2EE8               	decfsz	wreg,f,c
  4923  001FD6  D7FE               	bra	u4147
  4924  001FD8  2E07               	decfsz	??_LCD_Init^0,f,c
  4925  001FDA  D7FC               	bra	u4147
  4926  001FDC  2E08               	decfsz	(??_LCD_Init+1)^0,f,c
  4927  001FDE  D7FA               	bra	u4147
  4928  001FE0  F000               	nop	
  4929  001FE2  0012               	return		;funcret
  4930  001FE4                     __end_of_LCD_Init:
  4931                           	callstack 0
  4932                           
  4933 ;; *************** function _LCD_sendbyte *****************
  4934 ;; Defined at:
  4935 ;;		line 59 in file "LCD.c"
  4936 ;; Parameters:    Size  Location     Type
  4937 ;;  Byte            1    wreg     unsigned char 
  4938 ;;  type            1    2[COMRAM] unsigned char 
  4939 ;; Auto vars:     Size  Location     Type
  4940 ;;  Byte            1    5[COMRAM] unsigned char 
  4941 ;;  LSB             1    4[COMRAM] unsigned char 
  4942 ;;  MSB             1    3[COMRAM] unsigned char 
  4943 ;; Return value:  Size  Location     Type
  4944 ;;                  1    wreg      void 
  4945 ;; Registers used:
  4946 ;;		wreg, status,2, status,0, cstack
  4947 ;; Tracked objects:
  4948 ;;		On entry : 0/0
  4949 ;;		On exit  : 0/0
  4950 ;;		Unchanged: 0/0
  4951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4952 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4953 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4955 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4956 ;;Total ram usage:        4 bytes
  4957 ;; Hardware stack levels used: 1
  4958 ;; Hardware stack levels required when called: 3
  4959 ;; This function calls:
  4960 ;;		_LCD_sendnibble
  4961 ;; This function is called by:
  4962 ;;		_main
  4963 ;;		_LCD_Init
  4964 ;;		_LCD_sendstring
  4965 ;;		_LCD_setline
  4966 ;;		_LCD_scroll
  4967 ;;		_ADC2String
  4968 ;; This function uses a non-reentrant model
  4969 ;;
  4970                           
  4971                           	psect	text23
  4972  00258A                     __ptext23:
  4973                           	callstack 0
  4974  00258A                     _LCD_sendbyte:
  4975                           	callstack 26
  4976                           
  4977                           ;incstack = 0
  4978                           ;LCD_sendbyte@Byte stored from wreg
  4979  00258A  6E06               	movwf	LCD_sendbyte@Byte^0,c
  4980  00258C                     
  4981                           ;LCD.c: 59: void LCD_sendbyte(unsigned char Byte, char type);LCD.c: 60: {;LCD.c: 61:    
      +                           LATCbits.LATC6 = type;
  4982  00258C  B003               	btfsc	LCD_sendbyte@type^0,0,c
  4983  00258E  D002               	bra	u2245
  4984  002590  9C7B               	bcf	123,6,c	;volatile
  4985  002592  D001               	bra	u2246
  4986  002594                     u2245:
  4987  002594  8C7B               	bsf	123,6,c	;volatile
  4988  002596                     u2246:
  4989  002596                     
  4990                           ;LCD.c: 64:     unsigned char MSB = Byte & 0b11110000;
  4991  002596  5006               	movf	LCD_sendbyte@Byte^0,w,c
  4992  002598  0BF0               	andlw	240
  4993  00259A  6E04               	movwf	LCD_sendbyte@MSB^0,c
  4994  00259C                     
  4995                           ;LCD.c: 65:     LCD_sendnibble(MSB >> 4);
  4996  00259C  3804               	swapf	LCD_sendbyte@MSB^0,w,c
  4997  00259E  0B0F               	andlw	15
  4998  0025A0  EC56  F011         	call	_LCD_sendnibble
  4999  0025A4                     
  5000                           ;LCD.c: 68:     unsigned char LSB = Byte & 0b00001111;
  5001  0025A4  5006               	movf	LCD_sendbyte@Byte^0,w,c
  5002  0025A6  0B0F               	andlw	15
  5003  0025A8  6E05               	movwf	LCD_sendbyte@LSB^0,c
  5004  0025AA                     
  5005                           ;LCD.c: 69:     LCD_sendnibble(LSB);
  5006  0025AA  5005               	movf	LCD_sendbyte@LSB^0,w,c
  5007  0025AC  EC56  F011         	call	_LCD_sendnibble
  5008  0025B0                     
  5009                           ;LCD.c: 70:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  5010  0025B0  0EA0               	movlw	160
  5011  0025B2                     u4157:
  5012  0025B2  D000               	nop2	
  5013  0025B4  2EE8               	decfsz	wreg,f,c
  5014  0025B6  D7FD               	bra	u4157
  5015  0025B8  0012               	return		;funcret
  5016  0025BA                     __end_of_LCD_sendbyte:
  5017                           	callstack 0
  5018                           
  5019 ;; *************** function _LCD_sendnibble *****************
  5020 ;; Defined at:
  5021 ;;		line 20 in file "LCD.c"
  5022 ;; Parameters:    Size  Location     Type
  5023 ;;  number          1    wreg     unsigned char 
  5024 ;; Auto vars:     Size  Location     Type
  5025 ;;  number          1    1[COMRAM] unsigned char 
  5026 ;; Return value:  Size  Location     Type
  5027 ;;                  1    wreg      void 
  5028 ;; Registers used:
  5029 ;;		wreg, cstack
  5030 ;; Tracked objects:
  5031 ;;		On entry : 0/0
  5032 ;;		On exit  : 0/0
  5033 ;;		Unchanged: 0/0
  5034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5036 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5038 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5039 ;;Total ram usage:        1 bytes
  5040 ;; Hardware stack levels used: 1
  5041 ;; Hardware stack levels required when called: 2
  5042 ;; This function calls:
  5043 ;;		_LCD_E_TOG
  5044 ;; This function is called by:
  5045 ;;		_LCD_sendbyte
  5046 ;;		_LCD_Init
  5047 ;; This function uses a non-reentrant model
  5048 ;;
  5049                           
  5050                           	psect	text24
  5051  0022AC                     __ptext24:
  5052                           	callstack 0
  5053  0022AC                     _LCD_sendnibble:
  5054                           	callstack 26
  5055                           
  5056                           ;incstack = 0
  5057                           ;LCD_sendnibble@number stored from wreg
  5058  0022AC  6E02               	movwf	LCD_sendnibble@number^0,c
  5059  0022AE                     
  5060                           ;LCD.c: 20: void LCD_sendnibble(unsigned char number);LCD.c: 21: {;LCD.c: 22:     if (nu
      +                          mber & 0b0001){
  5061  0022AE  A002               	btfss	LCD_sendnibble@number^0,0,c
  5062  0022B0  EF5C  F011         	goto	u2091
  5063  0022B4  EF5E  F011         	goto	u2090
  5064  0022B8                     u2091:
  5065  0022B8  EF61  F011         	goto	l234
  5066  0022BC                     u2090:
  5067  0022BC                     
  5068                           ;LCD.c: 23:         LATBbits.LATB3 = 1;
  5069  0022BC  867A               	bsf	122,3,c	;volatile
  5070                           
  5071                           ;LCD.c: 24:     }
  5072  0022BE  EF62  F011         	goto	l2297
  5073  0022C2                     l234:
  5074                           
  5075                           ;LCD.c: 26:         LATBbits.LATB3 = 0;
  5076  0022C2  967A               	bcf	122,3,c	;volatile
  5077  0022C4                     l2297:
  5078                           
  5079                           ;LCD.c: 28:     if (number & 0b0010){
  5080  0022C4  A202               	btfss	LCD_sendnibble@number^0,1,c
  5081  0022C6  EF67  F011         	goto	u2101
  5082  0022CA  EF69  F011         	goto	u2100
  5083  0022CE                     u2101:
  5084  0022CE  EF6C  F011         	goto	l236
  5085  0022D2                     u2100:
  5086  0022D2                     
  5087                           ;LCD.c: 29:         LATBbits.LATB2 = 1;
  5088  0022D2  847A               	bsf	122,2,c	;volatile
  5089                           
  5090                           ;LCD.c: 30:     }
  5091  0022D4  EF6D  F011         	goto	l2301
  5092  0022D8                     l236:
  5093                           
  5094                           ;LCD.c: 32:         LATBbits.LATB2 = 0;
  5095  0022D8  947A               	bcf	122,2,c	;volatile
  5096  0022DA                     l2301:
  5097                           
  5098                           ;LCD.c: 34:     if (number & 0b0100){
  5099  0022DA  A402               	btfss	LCD_sendnibble@number^0,2,c
  5100  0022DC  EF72  F011         	goto	u2111
  5101  0022E0  EF74  F011         	goto	u2110
  5102  0022E4                     u2111:
  5103  0022E4  EF77  F011         	goto	l238
  5104  0022E8                     u2110:
  5105  0022E8                     
  5106                           ;LCD.c: 35:         LATEbits.LATE3 = 1;
  5107  0022E8  867D               	bsf	125,3,c	;volatile
  5108                           
  5109                           ;LCD.c: 36:     }
  5110  0022EA  EF78  F011         	goto	l2305
  5111  0022EE                     l238:
  5112                           
  5113                           ;LCD.c: 38:         LATEbits.LATE3 = 0;
  5114  0022EE  967D               	bcf	125,3,c	;volatile
  5115  0022F0                     l2305:
  5116                           
  5117                           ;LCD.c: 40:     if (number & 0b01000){
  5118  0022F0  A602               	btfss	LCD_sendnibble@number^0,3,c
  5119  0022F2  EF7D  F011         	goto	u2121
  5120  0022F6  EF7F  F011         	goto	u2120
  5121  0022FA                     u2121:
  5122  0022FA  EF82  F011         	goto	l240
  5123  0022FE                     u2120:
  5124  0022FE                     
  5125                           ;LCD.c: 41:         LATEbits.LATE1 = 1;
  5126  0022FE  827D               	bsf	125,1,c	;volatile
  5127                           
  5128                           ;LCD.c: 42:     }
  5129  002300  EF83  F011         	goto	l2309
  5130  002304                     l240:
  5131                           
  5132                           ;LCD.c: 44:         LATEbits.LATE1 = 0;
  5133  002304  927D               	bcf	125,1,c	;volatile
  5134  002306                     l2309:
  5135                           
  5136                           ;LCD.c: 50:     LCD_E_TOG();
  5137  002306  EC44  F013         	call	_LCD_E_TOG	;wreg free
  5138  00230A                     
  5139                           ;LCD.c: 51:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  5140  00230A  0E1A               	movlw	26
  5141  00230C                     u4167:
  5142  00230C  2EE8               	decfsz	wreg,f,c
  5143  00230E  D7FE               	bra	u4167
  5144  002310  D000               	nop2	
  5145  002312  0012               	return		;funcret
  5146  002314                     __end_of_LCD_sendnibble:
  5147                           	callstack 0
  5148                           
  5149 ;; *************** function _LCD_E_TOG *****************
  5150 ;; Defined at:
  5151 ;;		line 9 in file "LCD.c"
  5152 ;; Parameters:    Size  Location     Type
  5153 ;;		None
  5154 ;; Auto vars:     Size  Location     Type
  5155 ;;		None
  5156 ;; Return value:  Size  Location     Type
  5157 ;;                  1    wreg      void 
  5158 ;; Registers used:
  5159 ;;		wreg
  5160 ;; Tracked objects:
  5161 ;;		On entry : 0/0
  5162 ;;		On exit  : 0/0
  5163 ;;		Unchanged: 0/0
  5164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5169 ;;Total ram usage:        0 bytes
  5170 ;; Hardware stack levels used: 1
  5171 ;; Hardware stack levels required when called: 1
  5172 ;; This function calls:
  5173 ;;		Nothing
  5174 ;; This function is called by:
  5175 ;;		_LCD_sendnibble
  5176 ;; This function uses a non-reentrant model
  5177 ;;
  5178                           
  5179                           	psect	text25
  5180  002688                     __ptext25:
  5181                           	callstack 0
  5182  002688                     _LCD_E_TOG:
  5183                           	callstack 26
  5184  002688                     
  5185                           ;LCD.c: 11:  LATCbits.LATC2 = 1;
  5186  002688  847B               	bsf	123,2,c	;volatile
  5187  00268A                     
  5188                           ;LCD.c: 12:  _delay((unsigned long)((5)*(64000000/4000000.0)));
  5189  00268A  0E1A               	movlw	26
  5190  00268C                     u4177:
  5191  00268C  2EE8               	decfsz	wreg,f,c
  5192  00268E  D7FE               	bra	u4177
  5193  002690  D000               	nop2	
  5194  002692                     
  5195                           ;LCD.c: 13:  LATCbits.LATC2 = 0;
  5196  002692  947B               	bcf	123,2,c	;volatile
  5197                           
  5198                           ;LCD.c: 14:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  5199  002694  0E1A               	movlw	26
  5200  002696                     u4187:
  5201  002696  2EE8               	decfsz	wreg,f,c
  5202  002698  D7FE               	bra	u4187
  5203  00269A  D000               	nop2	
  5204  00269C  0012               	return		;funcret
  5205  00269E                     __end_of_LCD_E_TOG:
  5206                           	callstack 0
  5207                           
  5208 ;; *************** function _Interrupts_init *****************
  5209 ;; Defined at:
  5210 ;;		line 8 in file "interrupts.c"
  5211 ;; Parameters:    Size  Location     Type
  5212 ;;		None
  5213 ;; Auto vars:     Size  Location     Type
  5214 ;;		None
  5215 ;; Return value:  Size  Location     Type
  5216 ;;                  1    wreg      void 
  5217 ;; Registers used:
  5218 ;;		None
  5219 ;; Tracked objects:
  5220 ;;		On entry : 0/0
  5221 ;;		On exit  : 0/0
  5222 ;;		Unchanged: 0/0
  5223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5228 ;;Total ram usage:        0 bytes
  5229 ;; Hardware stack levels used: 1
  5230 ;; Hardware stack levels required when called: 1
  5231 ;; This function calls:
  5232 ;;		Nothing
  5233 ;; This function is called by:
  5234 ;;		_main
  5235 ;; This function uses a non-reentrant model
  5236 ;;
  5237                           
  5238                           	psect	text26
  5239  00269E                     __ptext26:
  5240                           	callstack 0
  5241  00269E                     _Interrupts_init:
  5242                           	callstack 29
  5243  00269E                     
  5244                           ;interrupts.c: 12:     INTCONbits.PEIE=1;
  5245  00269E  8CF2               	bsf	242,6,c	;volatile
  5246                           
  5247                           ;interrupts.c: 13:     PIE0bits.TMR0IE=1;
  5248  0026A0  010E               	movlb	14	; () banked
  5249  0026A2  8B29               	bsf	41,5,b	;volatile
  5250                           
  5251                           ;interrupts.c: 14:     PIE2bits.C1IE=1;
  5252  0026A4  812B               	bsf	43,0,b	;volatile
  5253                           
  5254                           ;interrupts.c: 15:     INTCONbits.GIE=1;
  5255  0026A6  8EF2               	bsf	242,7,c	;volatile
  5256  0026A8                     
  5257                           ; BSR set to: 14
  5258  0026A8  0012               	return		;funcret
  5259  0026AA                     __end_of_Interrupts_init:
  5260                           	callstack 0
  5261                           
  5262 ;; *************** function _ADC_init *****************
  5263 ;; Defined at:
  5264 ;;		line 9 in file "ADC.c"
  5265 ;; Parameters:    Size  Location     Type
  5266 ;;		None
  5267 ;; Auto vars:     Size  Location     Type
  5268 ;;		None
  5269 ;; Return value:  Size  Location     Type
  5270 ;;                  1    wreg      void 
  5271 ;; Registers used:
  5272 ;;		wreg, status,2
  5273 ;; Tracked objects:
  5274 ;;		On entry : 0/0
  5275 ;;		On exit  : 0/0
  5276 ;;		Unchanged: 0/0
  5277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5282 ;;Total ram usage:        0 bytes
  5283 ;; Hardware stack levels used: 1
  5284 ;; Hardware stack levels required when called: 1
  5285 ;; This function calls:
  5286 ;;		Nothing
  5287 ;; This function is called by:
  5288 ;;		_main
  5289 ;; This function uses a non-reentrant model
  5290 ;;
  5291                           
  5292                           	psect	text27
  5293  002656                     __ptext27:
  5294                           	callstack 0
  5295  002656                     _ADC_init:
  5296                           	callstack 29
  5297  002656                     
  5298                           ;ADC.c: 11:     TRISAbits.TRISA3=1;
  5299  002656  8681               	bsf	129,3,c	;volatile
  5300                           
  5301                           ;ADC.c: 12:     ANSELAbits.ANSELA3=1;
  5302  002658  010E               	movlb	14	; () banked
  5303  00265A  8792               	bsf	146,3,b	;volatile
  5304                           
  5305                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
  5306  00265C  010F               	movlb	15	; () banked
  5307  00265E  9958               	bcf	88,4,b	;volatile
  5308  002660                     
  5309                           ; BSR set to: 15
  5310                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  5311  002660  0EFC               	movlw	-4
  5312  002662  1758               	andwf	88,f,b	;volatile
  5313                           
  5314                           ;ADC.c: 17:     ADPCH=0b11;
  5315  002664  0E03               	movlw	3
  5316  002666  6F5F               	movwf	95,b	;volatile
  5317  002668                     
  5318                           ; BSR set to: 15
  5319                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
  5320  002668  9460               	bcf	96,2,c	;volatile
  5321  00266A                     
  5322                           ; BSR set to: 15
  5323                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
  5324  00266A  8860               	bsf	96,4,c	;volatile
  5325  00266C                     
  5326                           ; BSR set to: 15
  5327                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
  5328  00266C  8E60               	bsf	96,7,c	;volatile
  5329  00266E                     
  5330                           ; BSR set to: 15
  5331  00266E  0012               	return		;funcret
  5332  002670                     __end_of_ADC_init:
  5333                           	callstack 0
  5334                           
  5335 ;; *************** function _ADC_getval *****************
  5336 ;; Defined at:
  5337 ;;		line 23 in file "ADC.c"
  5338 ;; Parameters:    Size  Location     Type
  5339 ;;		None
  5340 ;; Auto vars:     Size  Location     Type
  5341 ;;  tmpval          2    3[COMRAM] unsigned int 
  5342 ;; Return value:  Size  Location     Type
  5343 ;;                  2    1[COMRAM] unsigned int 
  5344 ;; Registers used:
  5345 ;;		wreg, status,2, status,0
  5346 ;; Tracked objects:
  5347 ;;		On entry : 0/0
  5348 ;;		On exit  : 0/0
  5349 ;;		Unchanged: 0/0
  5350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5351 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5352 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5354 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5355 ;;Total ram usage:        4 bytes
  5356 ;; Hardware stack levels used: 1
  5357 ;; Hardware stack levels required when called: 1
  5358 ;; This function calls:
  5359 ;;		Nothing
  5360 ;; This function is called by:
  5361 ;;		_main
  5362 ;; This function uses a non-reentrant model
  5363 ;;
  5364                           
  5365                           	psect	text28
  5366  0025BA                     __ptext28:
  5367                           	callstack 0
  5368  0025BA                     _ADC_getval:
  5369                           	callstack 29
  5370  0025BA                     
  5371                           ;ADC.c: 25:     unsigned int tmpval;;ADC.c: 27:     ADCON0bits.GO = 1;
  5372  0025BA  8060               	bsf	96,0,c	;volatile
  5373  0025BC                     l18:
  5374  0025BC  B060               	btfsc	96,0,c	;volatile
  5375  0025BE  EFE3  F012         	goto	u2261
  5376  0025C2  EFE5  F012         	goto	u2260
  5377  0025C6                     u2261:
  5378  0025C6  EFDE  F012         	goto	l18
  5379  0025CA                     u2260:
  5380  0025CA                     
  5381                           ;ADC.c: 31:     tmpval = ADRESH;
  5382  0025CA  CF64 F004          	movff	3940,ADC_getval@tmpval	;volatile
  5383  0025CE  6A05               	clrf	(ADC_getval@tmpval+1)^0,c
  5384  0025D0                     
  5385                           ;ADC.c: 35:     tmpval = 255 - tmpval;
  5386  0025D0  5004               	movf	ADC_getval@tmpval^0,w,c
  5387  0025D2  08FF               	sublw	255
  5388  0025D4  6E04               	movwf	ADC_getval@tmpval^0,c
  5389  0025D6  5005               	movf	(ADC_getval@tmpval+1)^0,w,c
  5390  0025D8  A0D8               	btfss	status,0,c
  5391  0025DA  2AE8               	incf	wreg,f,c
  5392  0025DC  0800               	sublw	0
  5393  0025DE  6E05               	movwf	(ADC_getval@tmpval+1)^0,c
  5394  0025E0                     
  5395                           ;ADC.c: 37:     return tmpval;
  5396  0025E0  C004  F002         	movff	ADC_getval@tmpval,?_ADC_getval
  5397  0025E4  C005  F003         	movff	ADC_getval@tmpval+1,?_ADC_getval+1
  5398  0025E8  0012               	return		;funcret
  5399  0025EA                     __end_of_ADC_getval:
  5400                           	callstack 0
  5401                           
  5402 ;; *************** function _HighISR *****************
  5403 ;; Defined at:
  5404 ;;		line 22 in file "interrupts.c"
  5405 ;; Parameters:    Size  Location     Type
  5406 ;;		None
  5407 ;; Auto vars:     Size  Location     Type
  5408 ;;		None
  5409 ;; Return value:  Size  Location     Type
  5410 ;;                  1    wreg      void 
  5411 ;; Registers used:
  5412 ;;		wreg, status,2, status,0
  5413 ;; Tracked objects:
  5414 ;;		On entry : 0/0
  5415 ;;		On exit  : 0/0
  5416 ;;		Unchanged: 0/0
  5417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5420 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5421 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5422 ;;Total ram usage:        1 bytes
  5423 ;; Hardware stack levels used: 1
  5424 ;; This function calls:
  5425 ;;		Nothing
  5426 ;; This function is called by:
  5427 ;;		Interrupt level 2
  5428 ;; This function uses a non-reentrant model
  5429 ;;
  5430                           
  5431                           	psect	intcode
  5432  000008                     __pintcode:
  5433                           	callstack 0
  5434  000008                     _HighISR:
  5435                           	callstack 22
  5436                           
  5437                           ;incstack = 0
  5438  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5439  00000A                     
  5440                           ;interrupts.c: 24:     if (PIR2bits.C1IF == 1){
  5441  00000A  010E               	movlb	14	; () banked
  5442  00000C  A135               	btfss	53,0,b	;volatile
  5443  00000E  EF0B  F000         	goto	i2u151_41
  5444  000012  EF0D  F000         	goto	i2u151_40
  5445  000016                     i2u151_41:
  5446  000016  EF21  F000         	goto	i2l1941
  5447  00001A                     i2u151_40:
  5448  00001A                     
  5449                           ; BSR set to: 14
  5450                           ;interrupts.c: 25:         LATHbits.LATH3 = !LATHbits.LATH3;
  5451  00001A  A680               	btfss	128,3,c	;volatile
  5452  00001C  EF12  F000         	goto	i2u152_41
  5453  000020  EF16  F000         	goto	i2u152_40
  5454  000024                     i2u152_41:
  5455  000024  6A01               	clrf	??_HighISR^0,c
  5456  000026  2A01               	incf	??_HighISR^0,f,c
  5457  000028  EF17  F000         	goto	i2u153_48
  5458  00002C                     i2u152_40:
  5459  00002C  6A01               	clrf	??_HighISR^0,c
  5460  00002E                     i2u153_48:
  5461  00002E  4601               	rlncf	??_HighISR^0,f,c
  5462  000030  4601               	rlncf	??_HighISR^0,f,c
  5463  000032  4601               	rlncf	??_HighISR^0,f,c
  5464  000034  5080               	movf	128,w,c	;volatile
  5465  000036  1801               	xorwf	??_HighISR^0,w,c
  5466  000038  0BF7               	andlw	-9
  5467  00003A  1801               	xorwf	??_HighISR^0,w,c
  5468  00003C  6E80               	movwf	128,c	;volatile
  5469  00003E                     
  5470                           ;interrupts.c: 26:         PIR2bits.C1IF=0;
  5471  00003E  010E               	movlb	14	; () banked
  5472  000040  9135               	bcf	53,0,b	;volatile
  5473  000042                     i2l1941:
  5474                           
  5475                           ; BSR set to: 14
  5476                           ;interrupts.c: 29:     if (PIR0bits.TMR0IF == 1){
  5477  000042  AB33               	btfss	51,5,b	;volatile
  5478  000044  EF26  F000         	goto	i2u154_41
  5479  000048  EF28  F000         	goto	i2u154_40
  5480  00004C                     i2u154_41:
  5481  00004C  EF3F  F000         	goto	i2l198
  5482  000050                     i2u154_40:
  5483  000050                     
  5484                           ; BSR set to: 14
  5485                           ;interrupts.c: 30:         LATDbits.LATD7 = !LATDbits.LATD7;
  5486  000050  AE7C               	btfss	124,7,c	;volatile
  5487  000052  EF2D  F000         	goto	i2u155_41
  5488  000056  EF31  F000         	goto	i2u155_40
  5489  00005A                     i2u155_41:
  5490  00005A  6A01               	clrf	??_HighISR^0,c
  5491  00005C  2A01               	incf	??_HighISR^0,f,c
  5492  00005E  EF32  F000         	goto	i2u156_48
  5493  000062                     i2u155_40:
  5494  000062  6A01               	clrf	??_HighISR^0,c
  5495  000064                     i2u156_48:
  5496  000064  3201               	rrcf	??_HighISR^0,f,c
  5497  000066  3201               	rrcf	??_HighISR^0,f,c
  5498  000068  507C               	movf	124,w,c	;volatile
  5499  00006A  1801               	xorwf	??_HighISR^0,w,c
  5500  00006C  0B7F               	andlw	-129
  5501  00006E  1801               	xorwf	??_HighISR^0,w,c
  5502  000070  6E7C               	movwf	124,c	;volatile
  5503  000072                     
  5504                           ;interrupts.c: 31:         TMR0H=0b00001011;
  5505  000072  0E0B               	movlw	11
  5506  000074  6ED4               	movwf	212,c	;volatile
  5507  000076                     
  5508                           ;interrupts.c: 32:         TMR0L=0b11011011;
  5509  000076  0EDB               	movlw	219
  5510  000078  6ED3               	movwf	211,c	;volatile
  5511  00007A                     
  5512                           ;interrupts.c: 33:         PIR0bits.TMR0IF=0;
  5513  00007A  010E               	movlb	14	; () banked
  5514  00007C  9B33               	bcf	51,5,b	;volatile
  5515  00007E                     i2l198:
  5516                           
  5517                           ; BSR set to: 14
  5518  00007E  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5519  000080  0011               	retfie		f
  5520  000082                     __end_of_HighISR:
  5521                           	callstack 0
  5522                           
  5523                           	psect	rparam
  5524  0000                     
  5525                           	psect	temp
  5526  00005B                     btemp:
  5527                           	callstack 0
  5528  00005B                     	ds	1
  5529  0000                     int$flags	set	btemp
  5530  0000                     wtemp8	set	btemp+1
  5531  0000                     ttemp5	set	btemp+1
  5532  0000                     ttemp6	set	btemp+4
  5533  0000                     ttemp7	set	btemp+8
  5534                           
  5535                           	psect	idloc
  5536                           
  5537                           ;Config register IDLOC0 @ 0x200000
  5538                           ;	unspecified, using default values
  5539  200000                     	org	2097152
  5540  200000  0FFF               	dw	4095
  5541                           
  5542                           ;Config register IDLOC1 @ 0x200002
  5543                           ;	unspecified, using default values
  5544  200002                     	org	2097154
  5545  200002  0FFF               	dw	4095
  5546                           
  5547                           ;Config register IDLOC2 @ 0x200004
  5548                           ;	unspecified, using default values
  5549  200004                     	org	2097156
  5550  200004  0FFF               	dw	4095
  5551                           
  5552                           ;Config register IDLOC3 @ 0x200006
  5553                           ;	unspecified, using default values
  5554  200006                     	org	2097158
  5555  200006  0FFF               	dw	4095
  5556                           
  5557                           ;Config register IDLOC4 @ 0x200008
  5558                           ;	unspecified, using default values
  5559  200008                     	org	2097160
  5560  200008  0FFF               	dw	4095
  5561                           
  5562                           ;Config register IDLOC5 @ 0x20000A
  5563                           ;	unspecified, using default values
  5564  20000A                     	org	2097162
  5565  20000A  0FFF               	dw	4095
  5566                           
  5567                           ;Config register IDLOC6 @ 0x20000C
  5568                           ;	unspecified, using default values
  5569  20000C                     	org	2097164
  5570  20000C  0FFF               	dw	4095
  5571                           
  5572                           ;Config register IDLOC7 @ 0x20000E
  5573                           ;	unspecified, using default values
  5574  20000E                     	org	2097166
  5575  20000E  0FFF               	dw	4095
  5576                           
  5577                           	psect	config
  5578                           
  5579                           ;Config register CONFIG1L @ 0x300000
  5580                           ;	External Oscillator mode Selection bits
  5581                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5582                           ;	Power-up default value for COSC bits
  5583                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5584  300000                     	org	3145728
  5585  300000  AA                 	db	170
  5586                           
  5587                           ;Config register CONFIG1H @ 0x300001
  5588                           ;	unspecified, using default values
  5589                           ;	Clock Out Enable bit
  5590                           ;	CLKOUTEN = 0x1, unprogrammed default
  5591                           ;	Clock Switch Enable bit
  5592                           ;	CSWEN = 0x1, unprogrammed default
  5593                           ;	Fail-Safe Clock Monitor Enable bit
  5594                           ;	FCMEN = 0x1, unprogrammed default
  5595  300001                     	org	3145729
  5596  300001  FF                 	db	255
  5597                           
  5598                           ;Config register CONFIG2L @ 0x300002
  5599                           ;	unspecified, using default values
  5600                           ;	Master Clear Enable bit
  5601                           ;	MCLRE = 0x1, unprogrammed default
  5602                           ;	Power-up Timer Enable bit
  5603                           ;	PWRTE = 0x1, unprogrammed default
  5604                           ;	Low-power BOR enable bit
  5605                           ;	LPBOREN = 0x1, unprogrammed default
  5606                           ;	Brown-out Reset Enable bits
  5607                           ;	BOREN = 0x3, unprogrammed default
  5608  300002                     	org	3145730
  5609  300002  FF                 	db	255
  5610                           
  5611                           ;Config register CONFIG2H @ 0x300003
  5612                           ;	unspecified, using default values
  5613                           ;	Brown Out Reset Voltage selection bits
  5614                           ;	BORV = 0x3, unprogrammed default
  5615                           ;	ZCD Disable bit
  5616                           ;	ZCD = 0x1, unprogrammed default
  5617                           ;	PPSLOCK bit One-Way Set Enable bit
  5618                           ;	PPS1WAY = 0x1, unprogrammed default
  5619                           ;	Stack Full/Underflow Reset Enable bit
  5620                           ;	STVREN = 0x1, unprogrammed default
  5621                           ;	Debugger Enable bit
  5622                           ;	DEBUG = 0x1, unprogrammed default
  5623                           ;	Extended Instruction Set Enable bit
  5624                           ;	XINST = 0x1, unprogrammed default
  5625  300003                     	org	3145731
  5626  300003  FF                 	db	255
  5627                           
  5628                           ;Config register CONFIG3L @ 0x300004
  5629                           ;	WDT Period Select bits
  5630                           ;	WDTCPS = 0x1F, unprogrammed default
  5631                           ;	WDT operating mode
  5632                           ;	WDTE = OFF, WDT Disabled
  5633  300004                     	org	3145732
  5634  300004  9F                 	db	159
  5635                           
  5636                           ;Config register CONFIG3H @ 0x300005
  5637                           ;	unspecified, using default values
  5638                           ;	WDT Window Select bits
  5639                           ;	WDTCWS = 0x7, unprogrammed default
  5640                           ;	WDT input clock selector
  5641                           ;	WDTCCS = 0x7, unprogrammed default
  5642  300005                     	org	3145733
  5643  300005  FF                 	db	255
  5644                           
  5645                           ;Config register CONFIG4L @ 0x300006
  5646                           ;	unspecified, using default values
  5647                           ;	Write Protection Block 0
  5648                           ;	WRT0 = 0x1, unprogrammed default
  5649                           ;	Write Protection Block 1
  5650                           ;	WRT1 = 0x1, unprogrammed default
  5651                           ;	Write Protection Block 2
  5652                           ;	WRT2 = 0x1, unprogrammed default
  5653                           ;	Write Protection Block 3
  5654                           ;	WRT3 = 0x1, unprogrammed default
  5655                           ;	Write Protection Block 3
  5656                           ;	WRT4 = 0x1, unprogrammed default
  5657                           ;	Write Protection Block 3
  5658                           ;	WRT5 = 0x1, unprogrammed default
  5659                           ;	Write Protection Block 3
  5660                           ;	WRT6 = 0x1, unprogrammed default
  5661                           ;	Write Protection Block 3
  5662                           ;	WRT7 = 0x1, unprogrammed default
  5663  300006                     	org	3145734
  5664  300006  FF                 	db	255
  5665                           
  5666                           ;Config register CONFIG4H @ 0x300007
  5667                           ;	unspecified, using default values
  5668                           ;	Configuration Register Write Protection bit
  5669                           ;	WRTC = 0x1, unprogrammed default
  5670                           ;	Boot Block Write Protection bit
  5671                           ;	WRTB = 0x1, unprogrammed default
  5672                           ;	Data EEPROM Write Protection bit
  5673                           ;	WRTD = 0x1, unprogrammed default
  5674                           ;	Scanner Enable bit
  5675                           ;	SCANE = 0x1, unprogrammed default
  5676                           ;	Low Voltage Programming Enable bit
  5677                           ;	LVP = 0x1, unprogrammed default
  5678  300007                     	org	3145735
  5679  300007  FF                 	db	255
  5680                           
  5681                           ;Config register CONFIG5L @ 0x300008
  5682                           ;	unspecified, using default values
  5683                           ;	UserNVM Program Memory Code Protection bit
  5684                           ;	CP = 0x1, unprogrammed default
  5685                           ;	DataNVM Memory Code Protection bit
  5686                           ;	CPD = 0x1, unprogrammed default
  5687  300008                     	org	3145736
  5688  300008  FF                 	db	255
  5689                           
  5690                           ;Config register CONFIG5H @ 0x300009
  5691                           ;	unspecified, using default values
  5692  300009                     	org	3145737
  5693  300009  FF                 	db	255
  5694                           
  5695                           ;Config register CONFIG6L @ 0x30000A
  5696                           ;	unspecified, using default values
  5697                           ;	Table Read Protection Block 0
  5698                           ;	EBTR0 = 0x1, unprogrammed default
  5699                           ;	Table Read Protection Block 1
  5700                           ;	EBTR1 = 0x1, unprogrammed default
  5701                           ;	Table Read Protection Block 2
  5702                           ;	EBTR2 = 0x1, unprogrammed default
  5703                           ;	Table Read Protection Block 3
  5704                           ;	EBTR3 = 0x1, unprogrammed default
  5705                           ;	Table Read Protection Block 4
  5706                           ;	EBTR4 = 0x1, unprogrammed default
  5707                           ;	Table Read Protection Block 5
  5708                           ;	EBTR5 = 0x1, unprogrammed default
  5709                           ;	Table Read Protection Block 6
  5710                           ;	EBTR6 = 0x1, unprogrammed default
  5711                           ;	Table Read Protection Block 7
  5712                           ;	EBTR7 = 0x1, unprogrammed default
  5713  30000A                     	org	3145738
  5714  30000A  FF                 	db	255
  5715                           
  5716                           ;Config register CONFIG6H @ 0x30000B
  5717                           ;	unspecified, using default values
  5718                           ;	Boot Block Table Read Protection bit
  5719                           ;	EBTRB = 0x1, unprogrammed default
  5720  30000B                     	org	3145739
  5721  30000B  FF                 	db	255
  5722                           tosu	equ	0xFFF
  5723                           tosh	equ	0xFFE
  5724                           tosl	equ	0xFFD
  5725                           stkptr	equ	0xFFC
  5726                           pclatu	equ	0xFFB
  5727                           pclath	equ	0xFFA
  5728                           pcl	equ	0xFF9
  5729                           tblptru	equ	0xFF8
  5730                           tblptrh	equ	0xFF7
  5731                           tblptrl	equ	0xFF6
  5732                           tablat	equ	0xFF5
  5733                           prodh	equ	0xFF4
  5734                           prodl	equ	0xFF3
  5735                           indf0	equ	0xFEF
  5736                           postinc0	equ	0xFEE
  5737                           postdec0	equ	0xFED
  5738                           preinc0	equ	0xFEC
  5739                           plusw0	equ	0xFEB
  5740                           fsr0h	equ	0xFEA
  5741                           fsr0l	equ	0xFE9
  5742                           wreg	equ	0xFE8
  5743                           indf1	equ	0xFE7
  5744                           postinc1	equ	0xFE6
  5745                           postdec1	equ	0xFE5
  5746                           preinc1	equ	0xFE4
  5747                           plusw1	equ	0xFE3
  5748                           fsr1h	equ	0xFE2
  5749                           fsr1l	equ	0xFE1
  5750                           bsr	equ	0xFE0
  5751                           indf2	equ	0xFDF
  5752                           postinc2	equ	0xFDE
  5753                           postdec2	equ	0xFDD
  5754                           preinc2	equ	0xFDC
  5755                           plusw2	equ	0xFDB
  5756                           fsr2h	equ	0xFDA
  5757                           fsr2l	equ	0xFD9
  5758                           status	equ	0xFD8

Data Sizes:
    Strings     33
    Constant    0
    Data        24
    BSS         44
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     88      90
    BANK0           160    123     157
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 25
		 -> main@buf(BANK0[25]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 25
		 -> main@buf(BANK0[25]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1666_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 25
		 -> main@buf(BANK0[25]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 25
		 -> main@buf(BANK0[25]), 

    LCD_sendstring@string	PTR unsigned char  size(2) Largest target is 25
		 -> main@buf(BANK0[25]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _LCD_sendstring->_LCD_sendbyte
    _LCD_Init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                95    95      0   21414
                                             28 BANK0     95    95      0
                         _ADC_getval
                           _ADC_init
                    _Interrupts_init
                           _LCD_Init
                       _LCD_sendbyte
                     _LCD_sendstring
                  _LEDarray_disp_bin
                      _LEDarray_init
                        _Timer0_init
                            ___lwdiv
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             24    10     14   12293
                                              6 BANK0     22     8     14
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   11621
                                             86 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6   11091
                                             64 COMRAM    22    16      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5683
                                             28 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3417
                                             17 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             19 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              1 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              1 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    2875
                                              8 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              1 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1772
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     770
                                              1 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     502
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_sendstring                                       2     0      2    1385
                                              6 COMRAM     2     0      2
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0    1276
                                              6 COMRAM     2     2      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (2) _LCD_sendbyte                                         4     3      1    1188
                                              2 COMRAM     4     3      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (3) _LCD_sendnibble                                       1     1      0      88
                                              1 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (4) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_getval                                           4     2      2      46
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_getval
   _ADC_init
   _Interrupts_init
   _LCD_Init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
   _LCD_sendbyte
   _LCD_sendstring
     _LCD_sendbyte
   _LEDarray_disp_bin
   _LEDarray_init
   _Timer0_init
   ___lwdiv
   ___wmul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc
         _isdigit

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7B      9D       5       98.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     58      5A       1       95.7%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     117       8        0.0%
DATA                 0      0     117       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Nov 05 14:12:54 2021

                        l20 25CA                          l21 25E8                          l15 266E  
                        l18 25BC                          l61 0F0A                          l63 0F04  
                        l76 11B0         ___wmul@multiplicand 0004           ??_Interrupts_init 0002  
                       l111 2634                         l120 2104                         l121 2106  
                       l130 2172                         l122 211A                         l114 20C2  
                       l123 211C                         l115 20C4                         l132 2174  
                       l124 2130                         l116 20D8                         l125 2132  
                       l117 20DA                         l126 2146                         l118 20EE  
                       l231 269C                         l127 2148                         l119 20F0  
                       l240 2304                         l128 215C                         l129 215E  
                       l209 2654                         l242 2312                         l234 22C2  
                       l236 22D8                         l245 25B8                         l238 22EE  
                       l191 26A8                         l248 1FE2                         l259 2588  
                       l268 260E                         l382 1DA4                         l395 1F08  
                       l766 22AA                         l759 22A2                         l946 23CA  
                       l980 21FC                         l982 2236                         l990 1842  
                       l977 21BA                         l988 183A                         _abs 24A8  
                       _pad 2176                         wreg 000FE8         __size_of_ADC_getval 0030  
               main@daydate 00D3          main@light_strength 00CD                        l1022 1508  
                      l1008 1A78                        l1051 24E6                        l1043 2370  
                      ?_abs 0014                        l1108 20AC                        l1116 24A6  
                      l1044 2378                        l1125 2554                        l1037 1798  
                      l1119 26AA                        l1048 24DE                        l3001 1EA0  
                      l1082 1C1C                        l3003 1EB2                        l2301 22DA  
                      l1085 251E                        l1093 241C                        l3005 1EB8  
                      l3021 21B2                        l3013 2176                        l3101 1A06  
                      l2311 230A                        l2303 22E8                        l1079 1C14  
                      l3007 1EC8                        l3031 221E                        l3023 21C6  
                      l3015 2184                        l3111 1A40                        l3103 1A14  
                      l2305 22F0                        l3121 1A92                        l3009 1EE8  
                      l3025 21DA                        l3017 2198                        l3105 1A1A  
                      l3113 1A50                        l3201 1540                        l2307 22FE  
                      l2411 2596                        l3051 2416                        l3043 23CC  
                      l3123 1A96                        l3035 24A8                        l3027 21DE  
                      l3019 21A6                        l3107 1A2C                        l3211 15C2  
                      l3203 1576                        l2309 2306                        l2413 259C  
                      l2501 2114                        l3045 23D0                        l3141 1B58  
                      l3133 1AFA                        l3125 1AB6                        l3117 1A7A  
                      l3037 24C2                        l3029 220A                        l3109 1A38  
                      l3061 1802                        l3221 166E                        l3205 1586  
                      l3301 0E84                        l2431 2660                        l2183 2688  
                      l2415 25A4                        l2503 212A                        l3039 24E8  
                      l3047 23E4                        l3151 1BE6                        l3135 1B10  
                      l3127 1AF0                        l3119 1A8E                        l3071 185C  
                      l3063 1812                        l3055 179A                        l3231 1724  
                      l3223 16B6                        l3215 160C                        l3207 1594  
                      l3311 0EAC                        l3303 0E8C                        l2441 25D0  
                      l2433 2668                        l2185 268A                        l2417 25AA  
                      l2409 258C                        l2505 2140                        l3049 2412  
                      l3153 1BF8                        l3145 1B92                        l3137 1B18  
                      l3129 1AF4                        l3081 1888                        l3073 186A  
                      l3065 1814                        l3057 17BA                        l3233 1738  
                      l3209 15B4                        l3217 161E                        l3161 1436  
                      l3401 118C                        l3321 0F0C                        l3313 0EB4  
                      l3305 0E94                        l2443 25E0                        l2435 266A  
                      l2187 2692                        l2419 25B0                        l2523 2556  
                      l2507 2156                        l2451 263E                        l2531 2238  
                      l3139 1B20                        l3091 1994                        l3083 190A  
                      l3075 1870                        l3067 182E                        l3059 17E2  
                      l3227 16EE                        l3219 1646                        l3171 1468  
                      l3163 1444                        l3243 175E                        l3411 11D6  
                      l3403 119E                        l3331 0F6C                        l3323 0F26  
                      l3315 0EC0                        l3307 0E9C                        l2437 266C  
                      l2429 2656                        l2293 22AE                        l2461 1F22  
                      l2525 255A                        l2509 216C                        l2453 2648  
                      l2541 2270                        l2533 2240                        l3149 1BD4  
                      l3093 19B2                        l3085 1910                        l3077 1878  
                      l3069 184A                        l3245 1786                        l3229 1716  
                      l3237 1744                        l3181 1486                        l3173 147A  
                      l3165 1456                        l3261 2350                        l3421 124C  
                      l3413 11EC                        l3405 11A4                        l3341 0FC6  
                      l3333 0F88                        l3325 0F32                        l3317 0ED8  
                      l3309 0EA4                        l2439 25BA                        l2295 22BC  
                      l2471 1F62                        l2463 1F3A                        l2527 256C  
                      l2447 2610                        l2455 2652                        l2551 229C  
                      l2543 2276                        l2535 2252                        l3095 19CC  
                      l3087 1916                        l3079 1882                        l3239 1752  
                      l3511 14C8                        l3167 145A                        l3159 140E  
                      l3255 2314                        l3271 23B8                        l3263 237A  
                      l3431 12CA                        l3423 1262                        l3415 1202  
                      l3407 11B0                        l3351 0FF4                        l3343 0FCA  
                      l3335 0F9E                        l3327 0F3A                        l3319 0EEE  
                      l2457 269E                        l2297 22C4                        l2481 1F90  
                      l2473 1F6C                        l2465 1F40                        l2529 2570  
                      l2449 2636                        l2545 228C                        l2537 225A  
                      l3513 1B42                        l3097 19E6                        l3089 197A  
                      l3193 149E                        l3185 148C                        l3177 1480  
                      l3169 1466                        l3257 231C                        l3265 238C  
                      l3441 1342                        l3433 12E6                        l3425 1278  
                      l3417 1218                        l3409 11C4                        l3361 1030  
                      l3353 0FF8                        l3345 0FD2                        l3337 0FA2  
                      l3329 0F68                        l3281 0E34                        l2299 22D2  
                      l2483 1F9E                        l2475 1F74                        l2467 1F50  
                      l2459 1F0A                        l2491 20AE                        l2547 2294  
                      l2539 2262                        l3099 19F4                        l3195 14F6  
                      l3259 232A                        l3267 2394                        l3451 13D2  
                      l3443 135E                        l3435 1308                        l3427 128E  
                      l3419 123A                        l3371 108C                        l3363 1038  
                      l3355 100E                        l3347 0FE8                        l3339 0FAA  
                      l3291 0E52                        l3283 0E3C                        l3275 0E24  
                      l2485 1FA8                        l2477 1F7E                        l2469 1F5A  
                      l2493 20BC                        l2549 2296                        l2901 2012  
                      l3197 1516                        l3189 1492                        l3269 239C  
                      l3453 13EA                        l3437 1318                        l3429 12B0  
                      l3445 1380                        l3381 10BE                        l3373 1094  
                      l3365 1040                        l3357 1016                        l3349 0FF0  
                      l3293 0E52                        l3285 0E40                        l3277 0E2C  
                      l2487 1FC0                        l2479 1F86                        l2495 20D2  
                      l2903 2030                        l2911 2470                        l3199 1518  
                      l3455 13F4                        l3447 13BC                        l3439 133A  
                      l3391 1148                        l3383 10C6                        l3367 1080  
                      l3375 109C                        l3359 102C                        l3295 0E64  
                      l3287 0E40                        l3279 0E30                        l2489 1FCA  
                      l2497 20E8                        l2905 2066                        l2913 2482  
                      l2921 2530                        l3449 13C6                        l3393 115A  
                      l3385 10D2                        l3377 10B2                        l3369 1084  
                      l3297 0E6C                        l3289 0E4A                        l2499 20FE  
                      l2915 2486                        l2923 2548                        l3395 115E  
                      l3387 10E8                        l3379 10B6                        l3299 0E7C  
                      l2941 1C54                        l2933 1C1E                        l2909 2464  
                      l2917 2520                        l3397 1166                        l3389 1134  
                      ?_pad 0012                        l2927 25EA                        l2951 1CB0  
                      l2943 1C62                        l2935 1C22                        l2919 252C  
                      l3399 117A                        l2929 2606                        l2961 1D1A  
                      l2953 1CB8                        l2945 1C82                        l2937 1C30  
                      l2971 1D64                        l2963 1D3A                        l2955 1CCC  
                      l2947 1C86                        l2939 1C50                        l2973 1D84  
                      l2965 1D3C                        l2957 1CDA                        l2949 1C92  
                      l2981 1DB8                        l2967 1D4E                        l2959 1CEC  
                      l2991 1E28                        l2983 1DD8                        l2895 1FE4  
                      l2969 1D54                        l2993 1E30                        l2985 1DDC  
                      l2977 1DA6                        l2897 1FF6                        l2995 1E44  
                      l2987 1DEA                        l2979 1DAA                        l2899 2008  
                      l2997 1E52                        l2989 1E0A                        l2999 1E80  
                      STR_1 0E13                        STR_2 0E01                        u2100 22D2  
                      u2101 22CE                        u2110 22E8                        u2111 22E4  
                      u2120 22FE                        u2121 22FA                        u2300 20FE  
                      u2301 20FA                        u2310 2114                        u3110 1FF6  
                      u2311 2110                        u3111 1FF2                        u2320 212A  
                      u3200 1CB0                        u3120 2008                        u4000 1218  
                      u2321 2126                        u3201 1CAC                        u3121 2004  
                      u4001 1214                        u2090 22BC                        u2330 2140  
                      u3210 1CDA                        u3130 2030                        u4010 124C  
                      u2091 22B8                        u2331 213C                        u3211 1CD6  
                      u3131 202C                        u4011 1248                        u2260 25CA  
                      u2340 2156                        u3220 1D1A                        u3140 2066  
                      u3300 2184                        u4020 1262                        u2261 25C6  
                      u2245 2594                        u2341 2152                        u3221 1D16  
                      u3141 2062                        u3301 2180                        u4021 125E  
                      u2246 2596                        u2350 216C                        u2270 20BC  
                      u3230 1D64                        u3150 24A6                        u3310 21A6  
                      u4030 1278                        u2351 2168                        u2271 20B8  
                      u3231 1D60                        u3151 24A2                        u3311 21A2  
                      u4031 1274                        u2360 2588                        u2280 20D2  
                      u3240 1DB8                        u3160 2548                        u3320 21FC  
                      u3400 17CC                        u4040 128E                        u2361 2584  
                      u2281 20CE                        u3241 1DB4                        u3161 2544  
                      u3321 21F8                        u4041 128A                        u2290 20E8  
                      u2370 2252                        u3170 1C30                        u3250 1DEA  
                      u3330 220A                        u3410 17E2                        u4107 1F6E  
                      u2291 20E4                        u2371 224E                        u3171 1C2C  
                      u3251 1DE6                        u3331 2206                        u3411 17DE  
                      u2380 2270                        u3180 1C62                        u3260 1E28  
                      u3340 24C2                        u3500 19F4                        u3420 1812  
                      u4117 1F80                        u2381 226C                        u3181 1C5E  
                      u3261 1E24                        u3341 24BE                        u3501 19F0  
                      u3421 180E                        u2390 228C                        u3350 2518  
                      u3270 1E52                        u3510 1A06                        u3430 182E  
                      u4127 1F96                        u2391 2288                        u3351 2512  
                      u3191 1C8C                        u3271 1E4E                        u3511 1A02  
                      u3431 182A                        u3360 251A                        u3600 1BF8  
                      u3280 1E80                        u3520 1A14                        u3440 185C  
                      u4137 1FB2                        u3601 1BF4                        u3281 1E7C  
                      u3521 1A10                        u3441 1858                        u4057 13DE  
                      u3370 23E4                        u3290 1EC8                        u3530 1A2C  
                      u3450 186A                        u3610 1436                        u4147 1FD4  
                      u3371 23E0                        u3291 1EC4                        u3531 1A28  
                      u3451 1866                        u3611 1432                        u4067 13FC  
                      u3380 2412                        u3540 1AB6                        u3460 1994  
                      u3700 166E                        u3620 1508                        u4157 25B2  
                      u4077 1F2C                        u3381 240E                        u3541 1AB2  
                      u3461 1990                        u3701 166A                        u3621 1504  
                      u3550 1AF0                        u3470 19B2                        u3390 17CA  
                      u3710 1716                        u3630 1516                        u4167 230C  
                      u4087 1F46                        u3551 1AEC                        u3471 19AE  
                      u3391 17C4                        u3711 1712                        u3631 1512  
                      u3560 1B0C                        u3480 19CC                        u3640 1540  
                      u3720 2370                        u3800 0F68                        u4177 268C  
                      u4097 1F5C                        u3561 1B08                        u3481 19C8  
                      u3641 153C                        u3721 236C                        u3801 0F64  
                      u3570 1BCE                        u3490 19E6                        u3650 1586  
                      u3810 0F7E                        u4187 2696                        u3571 1BC8  
                      u3491 19E2                        u3651 1582                        u3811 0F76  
                      u3731 0E5C                        u3580 1BD0                        u3660 1606  
                      u3900 1134                        u3820 0F9E                        u3740 0ED8  
                      u3661 1600                        u3901 1130                        u3821 0F9A  
                      u3741 0ED4                        u3590 1BE6                        u3670 1608  
                      u3910 1148                        u3830 0FC6                        u3750 0EEE  
                      u3591 1BE2                        u3911 1144                        u3831 0FC2  
                      u3751 0EEA                        u3680 161E                        u3920 115A  
                      u3840 0FE8                        u3760 0F04                        u3681 161A  
                      u3921 1156                        u3841 0FE4                        u3761 0F00  
                      u3690 1646                        u3930 117A                        u3850 100E  
                      u3818 0F82                        u3770 0F26                        u3691 1642  
                      u3931 1176                        u3851 100A                        u3771 0F22  
                      u3940 118C                        u3860 102C                        u3780 0F4A  
                      u3941 1188                        u3861 1028                        u3781 0F44  
                      u3950 119E                        u3870 1080                        u3790 0F4C  
                      u3951 119A                        u3871 107C                        u3960 11C4  
                      u3880 10B2                        u3961 11C0                        u3881 10AE  
                      u3970 11D6                        u3890 10E8                        u3971 11D2  
                      u3891 10E4                        u3980 11EC                        u3981 11E8  
                      u3990 1202                        u3991 11FE                 main@midhour 00B7  
               main@curtime 00C1                 main@midtime 00CB          __size_of_LCD_E_TOG 0016  
                      abs@a 0014                 main@minutes 00D5                        _dbuf 0100  
                      _atoi 1A7A                        _main 0E24                        _dtoa 179A  
                      _prec 00FB                        _nout 00F7                        pad@i 0019  
                      pad@p 0016                        fsr1h 000FE2                        fsr2h 000FDA  
                      indf2 000FDF                        fsr1l 000FE1                        pad@w 001B  
                      fsr2l 000FD9                        btemp 005B                        prodh 000FF4  
                      prodl 000FF3                        start 0082            __end_of_ADC_init 2670  
           __end_of_HighISR 0082                ___param_bank 000000                       ??_abs 0016  
                     ??_pad 0018            __end_of_LCD_Init 1FE4             __end_of___aodiv 1DA6  
                     ?_atoi 0009                       ?_main 0001                       ?_dtoa 001D  
           __end_of___aomod 1F0A                       _ADPCH 000F5F             __end_of___lwdiv 22AC  
                     i2l198 007E                vfpfcnvrt@fmt 0043                       _TMR0H 000FD4  
                     _TMR0L 000FD3                       _flags 0059                       _fputc 1FE4  
                     _fputs 2464             __end_of_isdigit 2520                       atoi@n 0016  
                     pad@fp 0012                       atoi@s 0009                       _width 00F9  
                     _putch 26AA                       dtoa@d 001F                       dtoa@i 003F  
                     dtoa@n 0037                       dtoa@p 0031                       dtoa@s 0035  
                     dtoa@w 0033             __end_of_isspace 241E               ?_LCD_sendbyte 0003  
                     tablat 000FF5                       plusw1 000FE3                       plusw2 000FDB  
                     ttemp5 005C                       ttemp6 005F                       ttemp7 0063  
                     status 000FD8                       wtemp8 005C             __end_of_sprintf 23CC  
   __size_of_LCD_sendnibble 0068     __size_of_LCD_sendstring 0034             __initialization 241E  
              __end_of_atoi 1C1E                __end_of_main 140E                __end_of_dtoa 1A7A  
         __end_of_LCD_E_TOG 269E                      ??_atoi 000B                      ??_main 007C  
                    ??_dtoa 0027               main@dawn_dusk 00CF               __activetblptr 000003  
    __size_of_LEDarray_init 0026                      ?_fputc 0002                      ?_fputs 000B  
                    _ADRESH 000F64               main@leap_year 00BD              ??_LCD_sendbyte 0004  
                    ?_putch 0001                      i2l1941 0042                      i2l1943 0050  
                    i2l1935 000A                      i2l1945 0072                      i2l1937 001A  
                    i2l1947 0076                      i2l1939 003E                      i2l1949 007A  
             vfpfcnvrt@done 0053                   ??_HighISR 0001           _LEDarray_disp_bin 20AE  
        ?_LEDarray_disp_bin 0002                ??_ADC_getval 0004               ??_Timer0_init 0002  
              vfprintf@cfmt 0057                   ??___aodiv 0012                   ??___aomod 0012  
                    ___wmul 25EA                   ??___lwdiv 0006         ??_LEDarray_disp_bin 0004  
                    clear_0 2444                      clear_1 2450               main@monthdays 009D  
                    isa$std 000001                      pad@buf 0014                      dtoa@fp 001D  
                    _strlen 2520                      fputc@c 0002                      fputs@c 000F  
                    fputs@i 0010                      fputs@s 000B                   ??_isdigit 0004  
              __mediumconst 0000                   ??_isspace 0004                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8                   ?_ADC_init 0001  
                    putch@c 0001            __end_of_vfprintf 237A                   ??_sprintf 0059  
        __end_of_ADC_getval 25EA   __end_of_LEDarray_disp_bin 2176                  __accesstop 0060  
   __end_of__initialization 245A                   ?_LCD_Init 0001               ___rparam_used 000001  
             _LEDarray_init 2610             _Interrupts_init 269E              __pcstackCOMRAM 0001  
              __pidataBANK0 2670               __end_of_fputc 20AE               __end_of_fputs 24A8  
             __end_of_putch 26AC         __end_of_Timer0_init 2656                  ??_ADC_init 0002  
                   ??_fputc 0006                     ??_fputs 000F                     ??_putch 0002  
                __pbssBANK0 00F3                  __pbssBANK1 0100                  ??_LCD_Init 0007  
            _LCD_sendnibble 22AC              ?_LEDarray_init 0001              _LCD_sendstring 2556  
                   ?___wmul 0002        __end_of_LCD_sendbyte 25BA                     ?_strlen 0002  
           LCD_sendbyte@LSB 0005             LCD_sendbyte@MSB 0004          __size_of_vfpfcnvrt 038C  
    __end_of_LCD_sendnibble 2314  __size_of_LEDarray_disp_bin 00C8     __end_of_Interrupts_init 26AA  
                   _HighISR 0008      __end_of_LCD_sendstring 258A                   _ADREFbits 000F58  
                   __Hparam 0000                     __Lparam 0000                 _Timer0_init 2636  
                   ___aodiv 1C1E                     ___aomod 1DA6             __size_of___wmul 0026  
                   ___lwdiv 2238                   ?_vfprintf 0060                __psmallconst 0E00  
                   __pcinit 241E                     __ramtop 0E00                     __ptext0 0E24  
                   __ptext1 237A                     __ptext2 2314                     __ptext3 140E  
                   __ptext4 179A                     __ptext5 2176                     __ptext6 2520  
                   __ptext7 2464                     __ptext8 1FE4                     __ptext9 26AA  
           __size_of_strlen 0036                __size_of_abs 0040                __size_of_pad 00C2  
                   _isdigit 24E8                     _isspace 23CC                   _LCD_E_TOG 2688  
                   atoi@neg 000F                     main@buf 0084                     _sprintf 237A  
      end_of_initialization 245A             ?_LCD_sendnibble 0001            ADC_getval@tmpval 0004  
                   fputc@fp 0004             ??_LEDarray_init 0002                     fputs@fp 000D  
           ?_LCD_sendstring 0007           __end_of_vfpfcnvrt 179A                     postdec1 000FE5  
                   postdec2 000FDD                     postinc0 000FEE                     postinc1 000FE6  
                   postinc2 000FDE                  main@F14546 00DB                  main@F14549 00F3  
                ??_vfprintf 0057                     strlen@a 0004                     strlen@s 0002  
                ?_LCD_E_TOG 0001                   _TRISAbits 000F81                   _TRISBbits 000F82  
                 _TRISCbits 000F83           main@daylight_flag 00C3                   _TRISDbits 000F84  
                 _TRISEbits 000F85                   _TRISFbits 000F86                   _TRISGbits 000F87  
                 _TRISHbits 000F88           __size_of_ADC_init 001A            ?_Interrupts_init 0001  
                main@midmin 00B5           __size_of_LCD_Init 00DA       __size_of_LCD_sendbyte 0030  
               vfpfcnvrt@ap 0045                 vfpfcnvrt@fp 0041                 vfpfcnvrt@ll 004B  
            __end_of___wmul 2610        LCD_sendnibble@number 0002              __end_of_strlen 2556  
       start_initialization 241E                 __end_of_abs 24E8                 __end_of_pad 2238  
              _LCD_sendbyte 258A                 vfprintf@fmt 0062             main@day_of_week 00C5  
      LCD_sendstring@string 0007                    ??___wmul 0006                 __pdataBANK0 00DB  
                  ??_strlen 0004                 __pbssCOMRAM 0059                 ??_LCD_E_TOG 0002  
             __pcstackBANK0 0060            ___aodiv@dividend 0002                    ?_HighISR 0001  
                 _atoi$1784 0011                   _atoi$1785 0015                   _atoi$1786 0013  
          ___lwdiv@dividend 0002                   _dtoa$1749 002F                ?_Timer0_init 0001  
                 __pintcode 0008                    ?___aodiv 0002                    ?___aomod 0002  
          ___aodiv@quotient 0014                    ?___lwdiv 0002           __size_of_vfprintf 0066  
               __smallconst 0E00                    ?_isdigit 0002                    ?_isspace 0002  
          ??_LCD_sendnibble 0002                    _ADC_init 2656            ___lwdiv@quotient 0006  
          ??_LCD_sendstring 0009                    ?_sprintf 0066              __size_of_fputc 00CA  
            __size_of_fputs 0044              __size_of_putch 0002            LCD_sendbyte@Byte 0006  
                  _LCD_Init 1F0A            LCD_sendbyte@type 0003              ___wmul@product 0006  
                  _LATAbits 000F79                    _LATBbits 000F7A                    _LATCbits 000F7B  
                  _LATDbits 000F7C                    _LATEbits 000F7D                    _LATFbits 000F7E  
                  _LATGbits 000F7F                    _LATHbits 000F80                    _PIE0bits 000E29  
                  _PIE2bits 000E2B                    i2u151_40 001A                    i2u151_41 0016  
                  i2u152_40 002C                    i2u152_41 0024                    i2u154_40 0050  
                  i2u153_48 002E                    i2u154_41 004C                    i2u155_40 0062  
                  i2u155_41 005A                    i2u156_48 0064                    _PIR0bits 000E33  
                  _PIR2bits 000E35                   _vfpfcnvrt 140E                  _ADCON0bits 000F60  
         ___wmul@multiplier 0002                   main@month 00D7                _isspace$1802 0008  
                 copy_data0 2432            __size_of_HighISR 007A       __end_of_LEDarray_init 2636  
                  __Hrparam 0000                  _ADC_getval 25BA                  vfprintf@ap 0064  
                  __Lrparam 0000                  vfprintf@fp 0060            __size_of___aodiv 0188  
          __size_of___aomod 0164                  ?_vfpfcnvrt 0041            __size_of___lwdiv 0074  
           ___aodiv@divisor 000A             ___aodiv@counter 0012                  _ANSELAbits 000E92  
                _ANSELFbits 000EB4                  sprintf@fmt 0068                  _T0CON0bits 000FD5  
                _T0CON1bits 000FD6            __size_of_isdigit 0038             ___lwdiv@divisor 0004  
          __size_of_isspace 0052             ___lwdiv@counter 0008                    __ptext10 24A8  
                  __ptext11 1DA6                    __ptext20 20AE                    __ptext12 1C1E  
                  __ptext21 2556                    __ptext13 1A7A                    __ptext22 1F0A  
                  __ptext14 23CC                    __ptext23 258A                    __ptext15 24E8  
                  __ptext24 22AC                    __ptext16 25EA                    __ptext25 2688  
                  __ptext17 2238                    __ptext26 269E                    __ptext18 2636  
                  __ptext27 2656                    __ptext19 2610                    __ptext28 25BA  
   LEDarray_disp_bin@number 0002            __size_of_sprintf 0052               __size_of_atoi 01A4  
             __size_of_main 05EA               __size_of_dtoa 02E0                    isa$xinst 000000  
  __size_of_Interrupts_init 000C                    int$flags 005B        __size_of_Timer0_init 0020  
                  _vfprintf 2314                    main@diff 00B9                    main@hour 00D9  
                  main@secs 00BF                    main@temp 00BB                    main@year 00C7  
          ___aomod@dividend 0002              _vfpfcnvrt$1764 0055                  _INTCONbits 000FF2  
        main@set_brightness 00C9                    isdigit@c 0002                    intlevel2 0000  
                 sprintf@ap 0074                    isspace@c 0002                 ?_ADC_getval 0002  
           ___aomod@divisor 000A                 ??_vfpfcnvrt 0047             ___aomod@counter 0012  
                  sprintf@f 0076                    sprintf@s 0066                ___aodiv@sign 0013  
              ___aomod@sign 0013  
